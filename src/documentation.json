{
    "pipes": [
        {
            "name": "BirthdatePipe",
            "id": "pipe-BirthdatePipe-1a123a51a7113a523ebbfffdb3efd8602ee316ba202f6a532483c4238061eddd8442ad455bf01c13ff10599301426c5f1b7ea7b6a985b7452c1e0fc1678f35cb",
            "file": "src/pipes/birthdate/birthdate.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A custom Angular pipe for getting the age from a birthdate.</p>\n",
            "rawdescription": "\n\nA custom Angular pipe for getting the age from a birthdate.\n\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA custom Angular pipe for getting the age from a birthdate.\n\n",
                    "description": "<p>A custom Angular pipe for getting the age from a birthdate.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 420,
                                "end": 424,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 405,
                                "end": 410,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The birthdate to get the age from.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 411,
                                "end": 419,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 412,
                                    "end": 418,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 468,
                                "end": 475,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The age from the birthdate.</li>\n</ul>\n",
                            "returnType": "string"
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "birthdate",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\n\n/**\n * A custom Angular pipe for getting the age from a birthdate.\n *\n * @param {string} date - The birthdate to get the age from.\n * @returns {string} - The age from the birthdate.\n */\n\n@Pipe({ name: 'birthdate' })\nexport class BirthdatePipe implements PipeTransform {\n  /**\n   * A custom Angular pipe for getting the age from a birthdate.\n   *\n   * @param {string} date - The birthdate to get the age from.\n   * @returns {string} - The age from the birthdate.\n   */\n  transform(date: string): string {\n    const epochYear = 1970 // Used as the base year for age calculation\n    if(date > new Date().toISOString().split('T')[0]) {\n      return '0'\n    }\n    if (date) {\n      const ageDifMs = Date.now() - new Date(date).getTime()\n      const ageDate = new Date(ageDifMs)\n      const age = Math.abs(ageDate.getUTCFullYear() - epochYear).toString()\n      if(isNaN(parseInt(age))) {\n        return '0'\n      }\n      return age\n    }\n    return '0'\n  }\n}\n"
        },
        {
            "name": "SearchFromAlternativeArrayPipe",
            "id": "pipe-SearchFromAlternativeArrayPipe-095f145446f06ea41c77dcecdfa5a688db1f65177c9d1e57c144d5e2a21777c89bdeaf5ebcb62957fa15762abb4ea49342016f458da182dc8301492c79a464e3",
            "file": "src/pipes/search-from-alternative-array/search-from-alternative-array.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A custom Angular pipeline to filter an array of objects and transform another array based on a search string.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// In your component template:\n// Assuming &#39;items&#39; is an array of objects and &#39;searchTerm&#39; is a string.\n&lt;ul&gt;\n  &lt;li *ngFor=&quot;let item of items | searchFromAlternativeArray: searchTerm&quot;&gt;{{ item.name }}&lt;/li&gt;\n&lt;/ul&gt;</code></pre></div>",
            "rawdescription": "\n\nA custom Angular pipeline to filter an array of objects and transform another array based on a search string.\n\n```html\n// In your component template:\n// Assuming 'items' is an array of objects and 'searchTerm' is a string.\n<ul>\n  <li *ngFor=\"let item of items | searchFromAlternativeArray: searchTerm\">{{ item.name }}</li>\n</ul>\n```\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alternative",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTransforms an array of objects by filtering into an alternate array based on a search string.\n\n",
                    "description": "<p>Transforms an array of objects by filtering into an alternate array based on a search string.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 836,
                                "end": 841,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 822,
                                "end": 827,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The array of objects to transform.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 828,
                                "end": 835,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 829,
                                    "end": 834,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 188,
                                    "elementType": {
                                        "pos": 829,
                                        "end": 832,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 133
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 900,
                                "end": 906,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "search"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 885,
                                "end": 890,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The search string to filter by.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 891,
                                "end": 899,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 892,
                                    "end": 898,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 961,
                                "end": 972,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "alternative"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 947,
                                "end": 952,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The array to filter the values.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 953,
                                "end": 960,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 954,
                                    "end": 959,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 188,
                                    "elementType": {
                                        "pos": 954,
                                        "end": 957,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 133
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1013,
                                "end": 1020,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The filtered array of objects.</li>\n</ul>\n",
                            "returnType": "[]"
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "searchFromAlternativeArray",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\n\n/**\n * A custom Angular pipeline to filter an array of objects and transform another array based on a search string.\n *\n * @example\n * // In your component template:\n * // Assuming 'items' is an array of objects and 'searchTerm' is a string.\n * <ul>\n *   <li *ngFor=\"let item of items | searchFromAlternativeArray: searchTerm\">{{ item.name }}</li>\n * </ul>\n *\n * @param {any[]} value - The array of objects to filter.\n * @param {string} search - The search string to filter by.\n * @returns {any[]} - The filtered array of objects.\n */\n\n@Pipe({ name: 'searchFromAlternativeArray' })\nexport class SearchFromAlternativeArrayPipe implements PipeTransform {\n  /**\n   * Transforms an array of objects by filtering into an alternate array based on a search string.\n   *\n   * @param {any[]} value - The array of objects to transform.\n   * @param {string} search - The search string to filter by.\n   * @param {any[]} alternative - The array to filter the values.\n   * @returns {any[]} - The filtered array of objects.\n   */\n  transform(value: any, search: string, alternative: any): any {\n    if (!search) {\n      return value\n    }\n    if (!value) {\n      return ''\n    }\n    if (!alternative?.length) {\n      return ''\n    }\n\n    const solution = alternative?.filter((v: any) => {\n      if (!v) {\n        return false\n      }\n      return JSON.stringify(v).toLowerCase().indexOf(search.toLowerCase()) > -1\n    })\n\n    return solution\n  }\n}\n"
        },
        {
            "name": "SearchPipe",
            "id": "pipe-SearchPipe-d99c87ada650af20882fadb51ff079f60d77ad02bac873caf7e39c98d30097c1b72a0c117821d9f11700ac4c82c4207dbe9e29a22ac157901a83c18aa7bc5417",
            "file": "src/pipes/search/search.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A custom Angular pipe for filtering an array of objects based on a search string.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// In your component template:\n// Assuming &#39;items&#39; is an array of objects and &#39;searchTerm&#39; is a string.\n&lt;ul&gt;\n  &lt;li *ngFor=&quot;let item of items | search: searchTerm&quot;&gt;{{ item.name }}&lt;/li&gt;\n&lt;/ul&gt;</code></pre></div>",
            "rawdescription": "\n\nA custom Angular pipe for filtering an array of objects based on a search string.\n\n```html\n// In your component template:\n// Assuming 'items' is an array of objects and 'searchTerm' is a string.\n<ul>\n  <li *ngFor=\"let item of items | search: searchTerm\">{{ item.name }}</li>\n</ul>\n```\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTransforms an array of objects by filtering based on a search string.\n\n",
                    "description": "<p>Transforms an array of objects by filtering based on a search string.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 724,
                                "end": 729,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 710,
                                "end": 715,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The array of objects to filter.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 716,
                                "end": 723,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 717,
                                    "end": 722,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 188,
                                    "elementType": {
                                        "pos": 717,
                                        "end": 720,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 133
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 785,
                                "end": 791,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "search"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 770,
                                "end": 775,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The search string to filter by.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 776,
                                "end": 784,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 777,
                                    "end": 783,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 832,
                                "end": 839,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The filtered array of objects.</li>\n</ul>\n",
                            "returnType": "[]"
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "search",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\n\n/**\n * A custom Angular pipe for filtering an array of objects based on a search string.\n *\n * @example\n * // In your component template:\n * // Assuming 'items' is an array of objects and 'searchTerm' is a string.\n * <ul>\n *   <li *ngFor=\"let item of items | search: searchTerm\">{{ item.name }}</li>\n * </ul>\n *\n * @param {any[]} value - The array of objects to filter.\n * @param {string} search - The search string to filter by.\n * @returns {any[]} - The filtered array of objects.\n */\n\n@Pipe({ name: 'search' })\nexport class SearchPipe implements PipeTransform {\n  /**\n   * Transforms an array of objects by filtering based on a search string.\n   *\n   * @param {any[]} value - The array of objects to filter.\n   * @param {string} search - The search string to filter by.\n   * @returns {any[]} - The filtered array of objects.\n   */\n  transform(value: any, search: string): any {\n    if (!search) {\n      return value\n    }\n    if (!value) {\n      return ''\n    }\n\n    const solution = value?.filter((v: any) => {\n      if (!v) {\n        return false\n      }\n      return JSON.stringify(v).toLowerCase().indexOf(search.toLowerCase()) > -1\n    })\n\n    return solution\n  }\n}\n"
        },
        {
            "name": "SearchValidValuesPipe",
            "id": "pipe-SearchValidValuesPipe-b5a6506216a49bfb83b75b259a9f623fcf2091196d49748984692d7fe982865376a1fecf1757f0a53aac45c682293b421818bc913059265aca49253b50f9dcd6",
            "file": "src/pipes/search-valid-values/search-valid-values.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A custom Angular channel to filter an array of objects where it returns the searched value or the original value if it does not have the searched result based on a search string.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// In your component template:\n// Assuming &#39;items&#39; is an array of objects and &#39;searchTerm&#39; is a string.\n&lt;ul&gt;\n  &lt;li *ngFor=&quot;let item of items | searchValidValues: searchTerm&quot;&gt;{{ item.name }}&lt;/li&gt;\n&lt;/ul&gt;</code></pre></div>",
            "rawdescription": "\n\nA custom Angular channel to filter an array of objects where it returns the searched value or the original value if it does not have the searched result based on a search string.\n\n```html\n// In your component template:\n// Assuming 'items' is an array of objects and 'searchTerm' is a string.\n<ul>\n  <li *ngFor=\"let item of items | searchValidValues: searchTerm\">{{ item.name }}</li>\n</ul>\n```\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTransforms an array of objects with the searched value or the original value if it does not have the searched result by filtering based on a search string.\n\n",
                    "description": "<p>Transforms an array of objects with the searched value or the original value if it does not have the searched result by filtering based on a search string.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 940,
                                "end": 945,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 926,
                                "end": 931,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The array of objects to filter.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 932,
                                "end": 939,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 933,
                                    "end": 938,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 188,
                                    "elementType": {
                                        "pos": 933,
                                        "end": 936,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 133
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 1001,
                                "end": 1007,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "search"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 986,
                                "end": 991,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The search string to filter by.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 992,
                                "end": 1000,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 993,
                                    "end": 999,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1048,
                                "end": 1055,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The filtered array of objects.</li>\n</ul>\n",
                            "returnType": "[]"
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "searchValidValues",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\n\n/**\n * A custom Angular channel to filter an array of objects where it returns the searched value or the original value if it does not have the searched result based on a search string.\n *\n * @example\n * // In your component template:\n * // Assuming 'items' is an array of objects and 'searchTerm' is a string.\n * <ul>\n *   <li *ngFor=\"let item of items | searchValidValues: searchTerm\">{{ item.name }}</li>\n * </ul>\n *\n * @param {any[]} value - The array of objects to filter.\n * @param {string} search - The search string to filter by.\n * @returns {any[]} - The filtered array of objects.\n */\n\n@Pipe({ name: 'searchValidValues' })\nexport class SearchValidValuesPipe implements PipeTransform {\n  /**\n   * Transforms an array of objects with the searched value or the original value if it does not have the searched result by filtering based on a search string.\n   *\n   * @param {any[]} value - The array of objects to filter.\n   * @param {string} search - The search string to filter by.\n   * @returns {any[]} - The filtered array of objects.\n   */\n  transform(value: any, search: string): any {\n    if (!search) {\n      return value\n    }\n    if (!value) {\n      return ''\n    }\n\n    const solution = value?.filter((v: any) => {\n      if (!v) {\n        return false\n      }\n      return JSON.stringify(v).toLowerCase().indexOf(search.toLowerCase()) > -1\n    })\n\n    if (!solution?.length) {\n      return value\n    }\n\n    return solution\n  }\n}\n"
        },
        {
            "name": "ThousandSuffixesPipe",
            "id": "pipe-ThousandSuffixesPipe-f0d377483e62c87daad82bb8643a2e8defeb49b2855c04572fb8b703ee4bc44cc8de91e5332bdb4e970a8b1cfee52ac272a5f1d188212e2bc39bcf86688f1506",
            "file": "src/pipes/thousands/thousands.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A custom Angular pipe for formatting numbers with thousand suffixes (e.g., K, M, G).</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// In your component template:\n// Assuming &#39;value&#39; is a number.\n{{ value | thousandSuff:&#39;round&#39;:2 }}</code></pre></div>",
            "rawdescription": "\n\nA custom Angular pipe for formatting numbers with thousand suffixes (e.g., K, M, G).\n\n```html\n// In your component template:\n// Assuming 'value' is a number.\n{{ value | thousandSuff:'round':2 }}\n```\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "round",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "toFixedArgs",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTransforms a number into a formatted string with thousand suffixes (e.g., K, M, G).\n\n",
                    "description": "<p>Transforms a number into a formatted string with thousand suffixes (e.g., K, M, G).</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 806,
                                "end": 811,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "input"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 791,
                                "end": 796,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The number to format.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 797,
                                "end": 805,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 798,
                                    "end": 804,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 858,
                                "end": 863,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "round"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 843,
                                "end": 848,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Optional. Specify &#39;round&#39; to round the number to the nearest whole number.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 849,
                                "end": 857,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 850,
                                    "end": 856,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 963,
                                "end": 974,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "toFixedArgs"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 948,
                                "end": 953,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Optional. The number of decimal places to round to.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 954,
                                "end": 962,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 955,
                                    "end": 961,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1036,
                                "end": 1043,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The formatted number with suffix.</li>\n</ul>\n",
                            "returnType": "string"
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "thousandSuff",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\r\n\r\n/**\r\n * A custom Angular pipe for formatting numbers with thousand suffixes (e.g., K, M, G).\r\n *\r\n * @example\r\n * // In your component template:\r\n * // Assuming 'value' is a number.\r\n * {{ value | thousandSuff:'round':2 }}\r\n *\r\n * @param {number} input - The number to format.\r\n * @param {string} round - Optional. Specify 'round' to round the number to the nearest whole number.\r\n * @param {number} toFixedArgs - Optional. The number of decimal places to round to.\r\n * @returns {string} - The formatted number with suffix.\r\n */\r\n\r\n@Pipe({ name: 'thousandSuff' })\r\nexport class ThousandSuffixesPipe implements PipeTransform {\r\n  /**\r\n   * Transforms a number into a formatted string with thousand suffixes (e.g., K, M, G).\r\n   *\r\n   * @param {number} input - The number to format.\r\n   * @param {string} round - Optional. Specify 'round' to round the number to the nearest whole number.\r\n   * @param {number} toFixedArgs - Optional. The number of decimal places to round to.\r\n   * @returns {string} - The formatted number with suffix.\r\n   */\r\n  transform(input: any, round?: any, toFixedArgs?: number): string {\r\n    const suffixes = ['k', 'M', 'G', 'T', 'P', 'E']\r\n\r\n    // Handle special cases\r\n    if (Number.isNaN(input) || input === null || (!input && input !== 0)) {\r\n      return '∞'\r\n    }\r\n\r\n    // If input is less than 1000, return it as is (optionally rounded)\r\n    if (input < 1000) {\r\n      if (round) {\r\n        return String(Math.round(input))\r\n      }\r\n      return String(input)\r\n    }\r\n\r\n    // Calculate the appropriate suffix and format the number\r\n    const exp = Math.floor(Math.log(input) / Math.log(1000))\r\n    return (input / Math.pow(1000, exp)).toFixed(toFixedArgs) + suffixes[exp - 1]\r\n  }\r\n}\r\n"
        },
        {
            "name": "TranslateInternalPipe",
            "id": "pipe-TranslateInternalPipe-2d0d7f93be463721c01c063d08ce178b7d283b62478f65c9f62b69ca96aaaa616c13e77a724401500c5e5faf137f0e7ff6ee689ab1e41f04e320550d17c6fc75",
            "file": "src/pipes/translate-internal/translate-internal.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A custom Angular pipe for translating text using ngx-translate/core.</p>\n<p>This pipe allows you to translate a given query using ngx-translate/core&#39;s TranslateService.\nIf the TranslateService is available, it fetches the translation for the provided query and optional arguments.\nIf the TranslateService is not available, it returns an empty string.</p>\n<p>Usage:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">{{ &#39;HELLO&#39; | translateInternal | async }}</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// In a component&#39;s template:\n&lt;div&gt;{{ &#39;HELLO&#39; | translateInternal | async }}&lt;/div&gt;</code></pre></div><p>See {@link <a href=\"https://github.com/ngx-translate/core%7Cngx-translate/core%7D\">https://github.com/ngx-translate/core|ngx-translate/core}</a></p>\n",
            "rawdescription": "\n\nA custom Angular pipe for translating text using ngx-translate/core.\n\nThis pipe allows you to translate a given query using ngx-translate/core's TranslateService.\nIf the TranslateService is available, it fetches the translation for the provided query and optional arguments.\nIf the TranslateService is not available, it returns an empty string.\n\nUsage:\n```html\n{{ 'HELLO' | translateInternal | async }}\n```\n\n```html\n// In a component's template:\n<div>{{ 'HELLO' | translateInternal | async }}</div>\n```\n\nSee {@link https://github.com/ngx-translate/core|ngx-translate/core}\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTransforms the input query into its translated version.\n\n",
                    "description": "<p>Transforms the input query into its translated version.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1478,
                                "end": 1483,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "query"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1472,
                                "end": 1477,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key or query to be translated.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1545,
                                "end": 1549,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "args"
                            },
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "pos": 1539,
                                "end": 1544,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Optional arguments that can be passed to the translation service.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1624,
                                "end": 1631,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The translated text if the TranslateService is available; otherwise, an empty string.</p>\n"
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "translateInternal",
            "sourceCode": "import { Optional, Pipe, PipeTransform } from \"@angular/core\"\nimport { TranslateService } from \"@ngx-translate/core\"\nimport { lastValueFrom } from \"rxjs\"\n\n/**\n * A custom Angular pipe for translating text using ngx-translate/core.\n *\n * This pipe allows you to translate a given query using ngx-translate/core's TranslateService.\n * If the TranslateService is available, it fetches the translation for the provided query and optional arguments.\n * If the TranslateService is not available, it returns an empty string.\n *\n * Usage:\n * ```html\n * {{ 'HELLO' | translateInternal | async }}\n * ```\n *\n * @example\n * // In a component's template:\n * <div>{{ 'HELLO' | translateInternal | async }}</div>\n *\n * @param query - The translation key or query to be translated.\n * @param args - Optional arguments that can be passed to the translation service.\n * @returns The translated text if the TranslateService is available; otherwise, an empty string.\n *\n * @see {@link https://github.com/ngx-translate/core|ngx-translate/core}\n */\n@Pipe({ name: 'translateInternal' })\nexport class TranslateInternalPipe implements PipeTransform {\n  /**\n   * Creates a new instance of the TranslateInternalPipe.\n   *\n   * @param translate - The optional TranslateService instance to be injected. If provided, it will be used for translation.\n   */\n  constructor(@Optional() private translate: TranslateService) { }\n\n  /**\n   * Transforms the input query into its translated version.\n   *\n   * @param query - The translation key or query to be translated.\n   * @param args - Optional arguments that can be passed to the translation service.\n   * @returns The translated text if the TranslateService is available; otherwise, an empty string.\n   */\n  async transform(query: string, ...args: any[]): Promise<string> {\n    if (this.translate) {\n      return await lastValueFrom(this.translate.get(query, args)) || ''\n    }\n    return ''\n  }\n}"
        },
        {
            "name": "UniversalSafePipe",
            "id": "pipe-UniversalSafePipe-7d071718d8b6fc15f59800092463e048e4951c5a68bc4a62609701678aac5272d952887d18d566741213786ed8e2b961538f69d941314d3c7ac916f160ec4725",
            "file": "src/pipes/universal-safe/universal-safe.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A custom Angular pipe for sanitizing and displaying trusted content.\nThis pipe can be used to bypass security and render trusted HTML, styles, scripts, URLs, or resource URLs.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// In your component template:\n// Assuming &#39;htmlContent&#39; is a string containing trusted HTML.\n&lt;div [innerHTML]=&quot;htmlContent | universalSafe:&#39;html&#39;&quot;&gt;&lt;/div&gt;</code></pre></div>",
            "rawdescription": "\n\nA custom Angular pipe for sanitizing and displaying trusted content.\nThis pipe can be used to bypass security and render trusted HTML, styles, scripts, URLs, or resource URLs.\n\n```html\n// In your component template:\n// Assuming 'htmlContent' is a string containing trusted HTML.\n<div [innerHTML]=\"htmlContent | universalSafe:'html'\"></div>\n```\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'html'"
                        }
                    ],
                    "optional": false,
                    "returnType": "SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSanitizes and returns trusted content based on the specified type.\n\n",
                    "description": "<p>Sanitizes and returns trusted content based on the specified type.</p>\n",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1239,
                                "end": 1244,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 1224,
                                "end": 1229,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The content to sanitize and display.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1230,
                                "end": 1238,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1231,
                                    "end": 1237,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 1305,
                                "end": 1309,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'html'",
                            "tagName": {
                                "pos": 1290,
                                "end": 1295,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The type of content to sanitize. Can be &#39;html&#39;, &#39;style&#39;, &#39;script&#39;, &#39;url&#39;, or &#39;resourceUrl&#39;.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1296,
                                "end": 1304,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1297,
                                    "end": 1303,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1410,
                                "end": 1417,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The sanitized and trusted content.</li>\n</ul>\n",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "universalSafe",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\nimport {\n  DomSanitizer,\n  SafeHtml,\n  SafeResourceUrl,\n  SafeScript,\n  SafeStyle,\n  SafeUrl,\n} from '@angular/platform-browser'\n\n/**\n * A custom Angular pipe for sanitizing and displaying trusted content.\n * This pipe can be used to bypass security and render trusted HTML, styles, scripts, URLs, or resource URLs.\n *\n * @example\n * // In your component template:\n * // Assuming 'htmlContent' is a string containing trusted HTML.\n * <div [innerHTML]=\"htmlContent | universalSafe:'html'\"></div>\n *\n * @param {string} value - The content to sanitize and display.\n * @param {string} type - The type of content to sanitize. Can be 'html', 'style', 'script', 'url', or 'resourceUrl'.\n * @returns {SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl} - The sanitized and trusted content.\n */\n@Pipe({\n  name: 'universalSafe',\n})\nexport class UniversalSafePipe implements PipeTransform {\n  /**\n   * Creates an instance of UniversalSafePipe.\n   *\n   * @param {DomSanitizer} sanitizer - The Angular DOM sanitizer service.\n   */\n  constructor(protected sanitizer: DomSanitizer) { }\n\n  /**\n   * Sanitizes and returns trusted content based on the specified type.\n   *\n   * @param {string} value - The content to sanitize and display.\n   * @param {string} type - The type of content to sanitize. Can be 'html', 'style', 'script', 'url', or 'resourceUrl'.\n   * @returns {SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl} - The sanitized and trusted content.\n   * @throws {Error} - If an invalid `type` is provided.\n   */\n  public transform(value?: string, type = 'html'): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    if (!value) {\n      return ''\n    }\n    switch (type) {\n      case 'html':\n        return this.sanitizer.bypassSecurityTrustHtml(value)\n      case 'style':\n        return this.sanitizer.bypassSecurityTrustStyle(value)\n      case 'script':\n        return this.sanitizer.bypassSecurityTrustScript(value)\n      case 'url':\n        return this.sanitizer.bypassSecurityTrustUrl(value)\n      case 'resourceUrl':\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value)\n      default:\n        throw new Error(`Invalid Safe sanitizer: ${type}`)\n    }\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "Option",
            "id": "interface-Option-b825d5583a1999938ddcbd2d910a36e65bff17a792ebb93cd699117021dabdec26500e196e4f35ebb2a1eae1b3a6f27f7aeede5f53f21cfc8b568ad81c31f421",
            "file": "src/interfaces/option.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Option {\n  /**\n   * The value associated with the option.\n   */\n  value: any\n\n  /**\n   * The label to display for the option.\n   */\n  label: string\n\n  /**\n   * (Optional) Indicates if the option is disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * (Optional) Additional data\n   */\n  data?: any\n}\n\n/**\n * Represents a multi-select option with a label, value, and optional children.\n * @interface\n */\nexport interface OptionMulti {\n  /**\n   * The label to display for the option.\n   */\n  label: string\n\n  /**\n   * The value associated with the option.\n   */\n  value: any\n\n  /**\n   * (Optional) Indicates if the option is disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * (Optional) An array of child options for this multi-select option.\n   */\n  children?: Array<OptionMulti>\n\n  /**\n   * (Optional) Indicates whether the option's children should be displayed (open) in a dropdown.\n   */\n  open?: boolean\n\n  /**\n   * (Optional) Additional data\n   */\n  data?: any\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "<p>(Optional) Additional data</p>\n",
                    "line": 24,
                    "rawdescription": "\n\n(Optional) Additional data\n"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>(Optional) Indicates if the option is disabled.</p>\n",
                    "line": 19,
                    "rawdescription": "\n\n(Optional) Indicates if the option is disabled.\n"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>The label to display for the option.</p>\n",
                    "line": 14,
                    "rawdescription": "\n\nThe label to display for the option.\n"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The value associated with the option.</p>\n",
                    "line": 9,
                    "rawdescription": "\n\nThe value associated with the option.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Represents an option with a value and label.</p>\n",
            "rawdescription": "\n\nRepresents an option with a value and label.\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "OptionMulti",
            "id": "interface-OptionMulti-b825d5583a1999938ddcbd2d910a36e65bff17a792ebb93cd699117021dabdec26500e196e4f35ebb2a1eae1b3a6f27f7aeede5f53f21cfc8b568ad81c31f421",
            "file": "src/interfaces/option.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Option {\n  /**\n   * The value associated with the option.\n   */\n  value: any\n\n  /**\n   * The label to display for the option.\n   */\n  label: string\n\n  /**\n   * (Optional) Indicates if the option is disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * (Optional) Additional data\n   */\n  data?: any\n}\n\n/**\n * Represents a multi-select option with a label, value, and optional children.\n * @interface\n */\nexport interface OptionMulti {\n  /**\n   * The label to display for the option.\n   */\n  label: string\n\n  /**\n   * The value associated with the option.\n   */\n  value: any\n\n  /**\n   * (Optional) Indicates if the option is disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * (Optional) An array of child options for this multi-select option.\n   */\n  children?: Array<OptionMulti>\n\n  /**\n   * (Optional) Indicates whether the option's children should be displayed (open) in a dropdown.\n   */\n  open?: boolean\n\n  /**\n   * (Optional) Additional data\n   */\n  data?: any\n}\n",
            "properties": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<OptionMulti>",
                    "optional": true,
                    "description": "<p>(Optional) An array of child options for this multi-select option.</p>\n",
                    "line": 50,
                    "rawdescription": "\n\n(Optional) An array of child options for this multi-select option.\n"
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "<p>(Optional) Additional data</p>\n",
                    "line": 60,
                    "rawdescription": "\n\n(Optional) Additional data\n"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>(Optional) Indicates if the option is disabled.</p>\n",
                    "line": 45,
                    "rawdescription": "\n\n(Optional) Indicates if the option is disabled.\n"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>The label to display for the option.</p>\n",
                    "line": 35,
                    "rawdescription": "\n\nThe label to display for the option.\n"
                },
                {
                    "name": "open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>(Optional) Indicates whether the option&#39;s children should be displayed (open) in a dropdown.</p>\n",
                    "line": 55,
                    "rawdescription": "\n\n(Optional) Indicates whether the option's children should be displayed (open) in a dropdown.\n"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The value associated with the option.</p>\n",
                    "line": 40,
                    "rawdescription": "\n\nThe value associated with the option.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Represents a multi-select option with a label, value, and optional children.</p>\n",
            "rawdescription": "\n\nRepresents a multi-select option with a label, value, and optional children.\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "ReturnEvent",
            "id": "interface-ReturnEvent-dd72aa5b87afb78cbd1da69d9cfadbc0c42e3a32d7132b23aaa7878b38019ba060b25071423834df5c7ae4a8da410680885d050375617b69dcf94810ea07f9a6",
            "file": "src/components/sq-countdown/sq-countdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core'\nimport { CountdownComponent, CountdownEvent } from 'ngx-countdown'\n\n/**\n * Interface for the return event os emitters.\n * @interface\n */\ninterface ReturnEvent {\n  /**\n   * The time left in the countdown.\n   */\n  left: number\n}\n\n/**\n * Represents the SqCountdownComponent, a component for countdown.\n * \n * @example\n * <sq-countdown [leftTime]=\"10\"></sq-countdown>\n */\n@Component({\n  selector: 'sq-countdown',\n  templateUrl: './sq-countdown.component.html',\n  styleUrls: ['./sq-countdown.component.scss'],\n  standalone: true,\n  imports: [CountdownComponent],\n})\nexport class SqCountdownComponent {\n  /**\n   * Starting time to countdown (e.g., 5.5, 30) (Unit: seconds).\n   */\n  @Input() leftTime = 10\n\n  /**\n   * Formats a date value, pls refer to [Accepted patterns](https://angular.io/api/common/DatePipe#usage-notes).\n   */\n  @Input() format?: string = 'mm:ss'\n\n  /**\n   * Should be trigger type `notify` event on the x second. When values is `0` will be trigger every time.\n   */\n  @Input() notify?: number[] | number\n\n  /**\n   * Event emitter for when the countdown starts.\n   */\n  @Output() startEmitter: EventEmitter<ReturnEvent> = new EventEmitter()\n\n  /**\n   * Event emitter for when the count reaches the input notify times.\n   */\n  @Output() notifyEmitter: EventEmitter<ReturnEvent> = new EventEmitter()\n\n  /**\n   * Event emitter for when the countdown ends.\n   */\n  @Output() doneEmitter: EventEmitter<ReturnEvent> = new EventEmitter()\n\n  /**\n   * Map the CountdownEvents to emit startEmitter, notifyEmitter or doneEmitter.\n   * @param event - The event associated with the CountdownEvents.\n   */\n  eventMap(event: CountdownEvent) {\n    const action = event.action as \"start\" | \"notify\" | \"done\"\n    if (action && this[`${action}Emitter`]) {\n      const returnEvent: ReturnEvent = {\n        left: event.left\n      }\n      this[`${action}Emitter`].emit(returnEvent)\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>The time left in the countdown.</p>\n",
                    "line": 12,
                    "rawdescription": "\n\nThe time left in the countdown.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Interface for the return event os emitters.</p>\n",
            "rawdescription": "\n\nInterface for the return event os emitters.\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "Step",
            "id": "interface-Step-852c43032aeff2e3b5623a5d909d2837f66625d6e27221f3beab7757ae84c7912a29ce1625358818dc80dccaa248fba16ec8a43cc34098dd4f165efd5e120b6a",
            "file": "src/interfaces/step.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Step {\n  /**\n   * Additional information or a tip related to the step.\n   */\n  tip?: string;\n\n  /**\n   * The status of the step (e.g., \"completed\", \"active\", \"disabled\").\n   */\n  status: string;\n}",
            "properties": [
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>The status of the step (e.g., &quot;completed&quot;, &quot;active&quot;, &quot;disabled&quot;).</p>\n",
                    "line": 15,
                    "rawdescription": "\n\nThe status of the step (e.g., \"completed\", \"active\", \"disabled\").\n"
                },
                {
                    "name": "tip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Additional information or a tip related to the step.</p>\n",
                    "line": 10,
                    "rawdescription": "\n\nAdditional information or a tip related to the step.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Represents a step in a sequence of steps.</p>\n",
            "rawdescription": "\n\nRepresents a step in a sequence of steps.\n\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "Toast",
            "id": "interface-Toast-dc2ed9ab39f580fa52d752c8a38f6b9087ade4acf0093085f4ce002cd219408b5139a01506dc8c8b0fad3553fb1f7ec2d9c87bf525dd0911d5e4ccc3850b8a6a",
            "file": "src/interfaces/toast.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Toast {\n  /**\n   * Display a success toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  success: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an error toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  error: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an inverted (styled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  inverted: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an information (info) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  info: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a warning toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  warning: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a grayscale (styled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  grayscale: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a custom-styled toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  custom: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a default (unstyled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  default: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a toast message with custom styling or theme.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  theme: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a toast message with custom configuration options.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  show: (message: string, config?: ToastConfig) => ToastResponse;\n}\n\n/**\n * Represents the response object from displaying a toast message.\n */\nexport interface ToastResponse {\n  /**\n   * The message content that was displayed in the toast.\n   */\n  message: string;\n\n  /**\n   * Configuration options used for displaying the toast.\n   */\n  config?: ToastConfig;\n}\n\n/**\n * Represents the configuration options for displaying a toast message.\n */\nexport interface ToastConfig {\n  /**\n   * The position of the toast on the screen.\n   */\n  position?: string;\n\n  /**\n   * A custom CSS class name to apply to the toast element.\n   */\n  className?: string;\n\n  /**\n   * The duration (in milliseconds) for which the toast should remain visible.\n   */\n  fadeDuration?: number;\n\n  /**\n   * The interval (in milliseconds) for fading in/out the toast.\n   */\n  fadeInterval?: number;\n\n  /**\n   * The duration (in milliseconds) for which the toast should remain visible.\n   */\n  duration?: number;\n\n  /**\n   * Indicates whether the toast should have a close button.\n   */\n  closeButton?: boolean;\n\n  /**\n   * Indicates whether the toast should be displayed immediately.\n   */\n  immediately?: boolean;\n\n  /**\n   * Indicates whether the toast should not close when clicked.\n   */\n  notOverClick?: boolean;\n\n  /**\n   * A callback function to execute when the toast is clicked.\n   */\n  onClick?: () => void;\n\n  /**\n   * Indicates whether the toast should persist (not auto-close).\n   */\n  persistent?: boolean;\n}\n",
            "properties": [
                {
                    "name": "custom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display a custom-styled toast message.</p>\n",
                    "line": 67,
                    "rawdescription": "\n\nDisplay a custom-styled toast message.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 2450,
                            "end": 2526,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 2451,
                                "end": 2456,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2457,
                                "end": 2465,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2458,
                                    "end": 2464,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 2466,
                                "end": 2473,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 2526,
                            "end": 2598,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 2527,
                                "end": 2532,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2533,
                                "end": 2546,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2534,
                                    "end": 2545,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 2534,
                                        "end": 2545,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 2547,
                                "end": 2553,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 2598,
                            "end": 2686,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 2599,
                                "end": 2606,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2607,
                                "end": 2622,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2608,
                                    "end": 2621,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 2608,
                                        "end": 2621,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "default",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display a default (unstyled) toast message.</p>\n",
                    "line": 76,
                    "rawdescription": "\n\nDisplay a default (unstyled) toast message.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 2823,
                            "end": 2899,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 2824,
                                "end": 2829,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2830,
                                "end": 2838,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2831,
                                    "end": 2837,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 2839,
                                "end": 2846,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 2899,
                            "end": 2971,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 2900,
                                "end": 2905,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2906,
                                "end": 2919,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2907,
                                    "end": 2918,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 2907,
                                        "end": 2918,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 2920,
                                "end": 2926,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 2971,
                            "end": 3059,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 2972,
                                "end": 2979,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2980,
                                "end": 2995,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2981,
                                    "end": 2994,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 2981,
                                        "end": 2994,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display an error toast message.</p>\n",
                    "line": 22,
                    "rawdescription": "\n\nDisplay an error toast message.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 597,
                            "end": 673,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 598,
                                "end": 603,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 604,
                                "end": 612,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 605,
                                    "end": 611,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 613,
                                "end": 620,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 673,
                            "end": 745,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 674,
                                "end": 679,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 680,
                                "end": 693,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 681,
                                    "end": 692,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 681,
                                        "end": 692,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 694,
                                "end": 700,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 745,
                            "end": 833,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 746,
                                "end": 753,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 754,
                                "end": 769,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 755,
                                    "end": 768,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 755,
                                        "end": 768,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "grayscale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display a grayscale (styled) toast message.</p>\n",
                    "line": 58,
                    "rawdescription": "\n\nDisplay a grayscale (styled) toast message.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 2079,
                            "end": 2155,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 2080,
                                "end": 2085,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2086,
                                "end": 2094,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2087,
                                    "end": 2093,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 2095,
                                "end": 2102,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 2155,
                            "end": 2227,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 2156,
                                "end": 2161,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2162,
                                "end": 2175,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2163,
                                    "end": 2174,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 2163,
                                        "end": 2174,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 2176,
                                "end": 2182,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 2227,
                            "end": 2315,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 2228,
                                "end": 2235,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2236,
                                "end": 2251,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2237,
                                    "end": 2250,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 2237,
                                        "end": 2250,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "info",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display an information (info) toast message.</p>\n",
                    "line": 40,
                    "rawdescription": "\n\nDisplay an information (info) toast message.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 1345,
                            "end": 1421,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 1346,
                                "end": 1351,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1352,
                                "end": 1360,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1353,
                                    "end": 1359,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 1361,
                                "end": 1368,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 1421,
                            "end": 1493,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 1422,
                                "end": 1427,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1428,
                                "end": 1441,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1429,
                                    "end": 1440,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 1429,
                                        "end": 1440,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 1442,
                                "end": 1448,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 1493,
                            "end": 1581,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 1494,
                                "end": 1501,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1502,
                                "end": 1517,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1503,
                                    "end": 1516,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 1503,
                                        "end": 1516,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "inverted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display an inverted (styled) toast message.</p>\n",
                    "line": 31,
                    "rawdescription": "\n\nDisplay an inverted (styled) toast message.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 969,
                            "end": 1045,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 970,
                                "end": 975,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 976,
                                "end": 984,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 977,
                                    "end": 983,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 985,
                                "end": 992,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 1045,
                            "end": 1117,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 1046,
                                "end": 1051,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1052,
                                "end": 1065,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1053,
                                    "end": 1064,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 1053,
                                        "end": 1064,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 1066,
                                "end": 1072,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 1117,
                            "end": 1205,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 1118,
                                "end": 1125,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1126,
                                "end": 1141,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1127,
                                    "end": 1140,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 1127,
                                        "end": 1140,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "show",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display a toast message with custom configuration options.</p>\n",
                    "line": 94,
                    "rawdescription": "\n\nDisplay a toast message with custom configuration options.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 3594,
                            "end": 3670,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 3595,
                                "end": 3600,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3601,
                                "end": 3609,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3602,
                                    "end": 3608,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 3610,
                                "end": 3617,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 3670,
                            "end": 3742,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 3671,
                                "end": 3676,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3677,
                                "end": 3690,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3678,
                                    "end": 3689,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 3678,
                                        "end": 3689,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 3691,
                                "end": 3697,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 3742,
                            "end": 3830,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 3743,
                                "end": 3750,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3751,
                                "end": 3766,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3752,
                                    "end": 3765,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 3752,
                                        "end": 3765,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display a success toast message.</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nDisplay a success toast message.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 235,
                            "end": 311,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 236,
                                "end": 241,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 242,
                                "end": 250,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 243,
                                    "end": 249,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 251,
                                "end": 258,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 311,
                            "end": 383,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 312,
                                "end": 317,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 318,
                                "end": 331,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 319,
                                    "end": 330,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 319,
                                        "end": 330,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 332,
                                "end": 338,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 383,
                            "end": 471,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 384,
                                "end": 391,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 392,
                                "end": 407,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 393,
                                    "end": 406,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 393,
                                        "end": 406,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display a toast message with custom styling or theme.</p>\n",
                    "line": 85,
                    "rawdescription": "\n\nDisplay a toast message with custom styling or theme.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 3207,
                            "end": 3283,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 3208,
                                "end": 3213,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3214,
                                "end": 3222,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3215,
                                    "end": 3221,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 3223,
                                "end": 3230,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 3283,
                            "end": 3355,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 3284,
                                "end": 3289,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3290,
                                "end": 3303,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3291,
                                    "end": 3302,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 3291,
                                        "end": 3302,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 3304,
                                "end": 3310,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 3355,
                            "end": 3443,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 3356,
                                "end": 3363,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3364,
                                "end": 3379,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3365,
                                    "end": 3378,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 3365,
                                        "end": 3378,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "warning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Display a warning toast message.</p>\n",
                    "line": 49,
                    "rawdescription": "\n\nDisplay a warning toast message.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 1705,
                            "end": 1781,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 1706,
                                "end": 1711,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content to display in the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1712,
                                "end": 1720,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1713,
                                    "end": 1719,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 1721,
                                "end": 1728,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 1781,
                            "end": 1853,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 1782,
                                "end": 1787,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1788,
                                "end": 1801,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1789,
                                    "end": 1800,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 1789,
                                        "end": 1800,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            },
                            "name": {
                                "pos": 1802,
                                "end": 1808,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 1853,
                            "end": 1941,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 1854,
                                "end": 1861,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>An object containing the message and toast configuration.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1862,
                                "end": 1877,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1863,
                                    "end": 1876,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 1863,
                                        "end": 1876,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastResponse"
                                    }
                                }
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Represents a set of functions for displaying toast messages with various configurations.\nEach function corresponds to a different toast type.</p>\n",
            "rawdescription": "\n\nRepresents a set of functions for displaying toast messages with various configurations.\nEach function corresponds to a different toast type.\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "ToastConfig",
            "id": "interface-ToastConfig-dc2ed9ab39f580fa52d752c8a38f6b9087ade4acf0093085f4ce002cd219408b5139a01506dc8c8b0fad3553fb1f7ec2d9c87bf525dd0911d5e4ccc3850b8a6a",
            "file": "src/interfaces/toast.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Toast {\n  /**\n   * Display a success toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  success: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an error toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  error: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an inverted (styled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  inverted: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an information (info) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  info: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a warning toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  warning: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a grayscale (styled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  grayscale: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a custom-styled toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  custom: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a default (unstyled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  default: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a toast message with custom styling or theme.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  theme: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a toast message with custom configuration options.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  show: (message: string, config?: ToastConfig) => ToastResponse;\n}\n\n/**\n * Represents the response object from displaying a toast message.\n */\nexport interface ToastResponse {\n  /**\n   * The message content that was displayed in the toast.\n   */\n  message: string;\n\n  /**\n   * Configuration options used for displaying the toast.\n   */\n  config?: ToastConfig;\n}\n\n/**\n * Represents the configuration options for displaying a toast message.\n */\nexport interface ToastConfig {\n  /**\n   * The position of the toast on the screen.\n   */\n  position?: string;\n\n  /**\n   * A custom CSS class name to apply to the toast element.\n   */\n  className?: string;\n\n  /**\n   * The duration (in milliseconds) for which the toast should remain visible.\n   */\n  fadeDuration?: number;\n\n  /**\n   * The interval (in milliseconds) for fading in/out the toast.\n   */\n  fadeInterval?: number;\n\n  /**\n   * The duration (in milliseconds) for which the toast should remain visible.\n   */\n  duration?: number;\n\n  /**\n   * Indicates whether the toast should have a close button.\n   */\n  closeButton?: boolean;\n\n  /**\n   * Indicates whether the toast should be displayed immediately.\n   */\n  immediately?: boolean;\n\n  /**\n   * Indicates whether the toast should not close when clicked.\n   */\n  notOverClick?: boolean;\n\n  /**\n   * A callback function to execute when the toast is clicked.\n   */\n  onClick?: () => void;\n\n  /**\n   * Indicates whether the toast should persist (not auto-close).\n   */\n  persistent?: boolean;\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>A custom CSS class name to apply to the toast element.</p>\n",
                    "line": 124,
                    "rawdescription": "\n\nA custom CSS class name to apply to the toast element.\n"
                },
                {
                    "name": "closeButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Indicates whether the toast should have a close button.</p>\n",
                    "line": 144,
                    "rawdescription": "\n\nIndicates whether the toast should have a close button.\n"
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "<p>The duration (in milliseconds) for which the toast should remain visible.</p>\n",
                    "line": 139,
                    "rawdescription": "\n\nThe duration (in milliseconds) for which the toast should remain visible.\n"
                },
                {
                    "name": "fadeDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "<p>The duration (in milliseconds) for which the toast should remain visible.</p>\n",
                    "line": 129,
                    "rawdescription": "\n\nThe duration (in milliseconds) for which the toast should remain visible.\n"
                },
                {
                    "name": "fadeInterval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "<p>The interval (in milliseconds) for fading in/out the toast.</p>\n",
                    "line": 134,
                    "rawdescription": "\n\nThe interval (in milliseconds) for fading in/out the toast.\n"
                },
                {
                    "name": "immediately",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Indicates whether the toast should be displayed immediately.</p>\n",
                    "line": 149,
                    "rawdescription": "\n\nIndicates whether the toast should be displayed immediately.\n"
                },
                {
                    "name": "notOverClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Indicates whether the toast should not close when clicked.</p>\n",
                    "line": 154,
                    "rawdescription": "\n\nIndicates whether the toast should not close when clicked.\n"
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>A callback function to execute when the toast is clicked.</p>\n",
                    "line": 159,
                    "rawdescription": "\n\nA callback function to execute when the toast is clicked.\n"
                },
                {
                    "name": "persistent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Indicates whether the toast should persist (not auto-close).</p>\n",
                    "line": 164,
                    "rawdescription": "\n\nIndicates whether the toast should persist (not auto-close).\n"
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>The position of the toast on the screen.</p>\n",
                    "line": 119,
                    "rawdescription": "\n\nThe position of the toast on the screen.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Represents the configuration options for displaying a toast message.</p>\n",
            "rawdescription": "\n\nRepresents the configuration options for displaying a toast message.\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "ToastResponse",
            "id": "interface-ToastResponse-dc2ed9ab39f580fa52d752c8a38f6b9087ade4acf0093085f4ce002cd219408b5139a01506dc8c8b0fad3553fb1f7ec2d9c87bf525dd0911d5e4ccc3850b8a6a",
            "file": "src/interfaces/toast.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Toast {\n  /**\n   * Display a success toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  success: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an error toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  error: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an inverted (styled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  inverted: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display an information (info) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  info: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a warning toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  warning: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a grayscale (styled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  grayscale: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a custom-styled toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  custom: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a default (unstyled) toast message.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  default: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a toast message with custom styling or theme.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  theme: (message: string, config?: ToastConfig) => ToastResponse;\n\n  /**\n   * Display a toast message with custom configuration options.\n   *\n   * @param {string} message - The message content to display in the toast.\n   * @param {ToastConfig} config - Configuration options for the toast.\n   * @returns {ToastResponse} - An object containing the message and toast configuration.\n   */\n  show: (message: string, config?: ToastConfig) => ToastResponse;\n}\n\n/**\n * Represents the response object from displaying a toast message.\n */\nexport interface ToastResponse {\n  /**\n   * The message content that was displayed in the toast.\n   */\n  message: string;\n\n  /**\n   * Configuration options used for displaying the toast.\n   */\n  config?: ToastConfig;\n}\n\n/**\n * Represents the configuration options for displaying a toast message.\n */\nexport interface ToastConfig {\n  /**\n   * The position of the toast on the screen.\n   */\n  position?: string;\n\n  /**\n   * A custom CSS class name to apply to the toast element.\n   */\n  className?: string;\n\n  /**\n   * The duration (in milliseconds) for which the toast should remain visible.\n   */\n  fadeDuration?: number;\n\n  /**\n   * The interval (in milliseconds) for fading in/out the toast.\n   */\n  fadeInterval?: number;\n\n  /**\n   * The duration (in milliseconds) for which the toast should remain visible.\n   */\n  duration?: number;\n\n  /**\n   * Indicates whether the toast should have a close button.\n   */\n  closeButton?: boolean;\n\n  /**\n   * Indicates whether the toast should be displayed immediately.\n   */\n  immediately?: boolean;\n\n  /**\n   * Indicates whether the toast should not close when clicked.\n   */\n  notOverClick?: boolean;\n\n  /**\n   * A callback function to execute when the toast is clicked.\n   */\n  onClick?: () => void;\n\n  /**\n   * Indicates whether the toast should persist (not auto-close).\n   */\n  persistent?: boolean;\n}\n",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToastConfig",
                    "optional": true,
                    "description": "<p>Configuration options used for displaying the toast.</p>\n",
                    "line": 109,
                    "rawdescription": "\n\nConfiguration options used for displaying the toast.\n"
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>The message content that was displayed in the toast.</p>\n",
                    "line": 104,
                    "rawdescription": "\n\nThe message content that was displayed in the toast.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Represents the response object from displaying a toast message.</p>\n",
            "rawdescription": "\n\nRepresents the response object from displaying a toast message.\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ColorsHelper",
            "id": "injectable-ColorsHelper-d0d444bfa5a5f8f81f5cc8d9bb7eaa3bd2058cf710b15b33e94a4b579147dfbb49dc413df03315f2543d21b2183953b5295c67664c3cec0141cc7eb65d94984a",
            "file": "src/helpers/colors.helper.ts",
            "properties": [
                {
                    "name": "getWindow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GetWindow",
                    "optional": false,
                    "description": "- The injected GetWindow service to get the window object.",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCssVariableValue",
                    "args": [
                        {
                            "name": "variableName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the value of a CSS variable.\n\n",
                    "description": "<p>Get the value of a CSS variable.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1220,
                                "end": 1232,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "variableName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1205,
                                "end": 1210,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The name of the CSS variable (e.g., &#39;--main-color&#39;).</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1211,
                                "end": 1219,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1212,
                                    "end": 1218,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1294,
                                "end": 1301,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The value of the CSS variable or the variableName if not found.</p>\n",
                            "returnType": "string"
                        }
                    ]
                },
                {
                    "name": "lightenDarkenColor",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLighten or darken a color by a specified amount.\n\n",
                    "description": "<p>Lighten or darken a color by a specified amount.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1811,
                                "end": 1816,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "color"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1796,
                                "end": 1801,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The color to be adjusted (e.g., &#39;#FF5733&#39; or &#39;var(--main-color)&#39;).</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1802,
                                "end": 1810,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1803,
                                    "end": 1809,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 1907,
                                "end": 1913,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "amount"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1892,
                                "end": 1897,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The amount to lighten or darken the color (positive for lighten, negative for darken).</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1898,
                                "end": 1906,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1899,
                                    "end": 1905,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2009,
                                "end": 2016,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The adjusted color in hexadecimal format (e.g., &#39;#FF5733&#39;).</p>\n",
                            "returnType": "string"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A utility service for working with colors in Angular applications.</p>\n<p>This service provides methods to retrieve CSS variable values and to lighten or darken colors.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// Inject the ColorsHelper service and use its methods:\nconstructor(private colorsHelper: ColorsHelper) { }</code></pre></div><p>// Or instance a new class\nconst colorsHelper = new ColorsHelper()</p>\n<p>const mainColor = this.colorsHelper.getCssVariableValue(&#39;--main-color&#39;);\nconst lighterColor = this.colorsHelper.lightenDarkenColor(&#39;#FF5733&#39;, 20);</p>\n",
            "rawdescription": "\n\nA utility service for working with colors in Angular applications.\n\nThis service provides methods to retrieve CSS variable values and to lighten or darken colors.\n\n```html\n// Inject the ColorsHelper service and use its methods:\nconstructor(private colorsHelper: ColorsHelper) { }\n```\n// Or instance a new class\nconst colorsHelper = new ColorsHelper()\n\nconst mainColor = this.colorsHelper.getCssVariableValue('--main-color');\nconst lighterColor = this.colorsHelper.lightenDarkenColor('#FF5733', 20);\n",
            "sourceCode": "import { GetWindow } from './window.helper'\nimport { DOCUMENT } from '@angular/common'\nimport { Inject, Injectable } from '@angular/core'\n\n/**\n * A utility service for working with colors in Angular applications.\n *\n * This service provides methods to retrieve CSS variable values and to lighten or darken colors.\n *\n * @example\n * // Inject the ColorsHelper service and use its methods:\n * constructor(private colorsHelper: ColorsHelper) { }\n *\n * // Or instance a new class\n * const colorsHelper = new ColorsHelper()\n *\n * const mainColor = this.colorsHelper.getCssVariableValue('--main-color');\n * const lighterColor = this.colorsHelper.lightenDarkenColor('#FF5733', 20);\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ColorsHelper {\n  /**\n   * Initializes a new instance of the `ColorsHelper` class.\n   * @constructor\n   * @param {Document} document - The injected DOCUMENT to get a reference to the window object in a way that's safe for SSR.\n   * @param {GetWindow} getWindow - The injected GetWindow service to get the window object.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document, public getWindow: GetWindow) { }\n\n  /**\n   * Get the value of a CSS variable.\n   *\n   * @param {string} variableName - The name of the CSS variable (e.g., '--main-color').\n   * @returns {string} The value of the CSS variable or the variableName if not found.\n   */\n  getCssVariableValue(variableName: string): string {\n    if (this.document?.documentElement) {\n      const clearVar = variableName?.replace('var(', '')?.replace(')', '')?.trim()\n      return this.getWindow.window()?.getComputedStyle(this.document?.documentElement).getPropertyValue(clearVar) || variableName\n    }\n    return variableName\n  }\n\n  /**\n   * Lighten or darken a color by a specified amount.\n   *\n   * @param {string} color - The color to be adjusted (e.g., '#FF5733' or 'var(--main-color)').\n   * @param {number} amount - The amount to lighten or darken the color (positive for lighten, negative for darken).\n   * @returns {string} The adjusted color in hexadecimal format (e.g., '#FF5733').\n   */\n  lightenDarkenColor(color: string, amount: number): string {\n    color = color?.trim()\n    let colorWithoutHash = color?.replace('var(', '')?.replace(')', '')?.replace('#', '')\n    if (colorWithoutHash?.length === 3) {\n      colorWithoutHash = colorWithoutHash\n        .split('')\n        .map((c) => `${c}${c}`)\n        .join('')\n    }\n\n    const isHexColor = (value: string): boolean => {\n      const hexColorRegex = /^([a-fA-F0-9]{3}|[a-fA-F0-9]{6})$/\n      return hexColorRegex.test(value)\n    }\n\n    if (!isHexColor(colorWithoutHash)) {\n      return colorWithoutHash\n    }\n\n    const getColorChannel = (substring: string): string => {\n      let colorChannel = Math.max(Math.min(255, parseInt(substring, 16) + amount), 0).toString(16)\n      if (colorChannel?.length < 2) {\n        colorChannel = `0${colorChannel}`\n      }\n      return colorChannel\n    }\n\n    const colorChannelRed = getColorChannel(colorWithoutHash?.substring(0, 2))\n    const colorChannelGreen = getColorChannel(colorWithoutHash?.substring(2, 4))\n    const colorChannelBlue = getColorChannel(colorWithoutHash?.substring(4, 6))\n\n    return `#${colorChannelRed}${colorChannelGreen}${colorChannelBlue}`\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Initializes a new instance of the <code>ColorsHelper</code> class.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getWindow",
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "rawdescription": "\n\nInitializes a new instance of the `ColorsHelper` class.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 854,
                            "end": 862,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "document"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 837,
                            "end": 842,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The injected DOCUMENT to get a reference to the window object in a way that&#39;s safe for SSR.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 843,
                            "end": 853,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 844,
                                "end": 852,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 844,
                                    "end": 852,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Document"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 981,
                            "end": 990,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "getWindow"
                        },
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 963,
                            "end": 968,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The injected GetWindow service to get the window object.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 969,
                            "end": 980,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 970,
                                "end": 979,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 970,
                                    "end": 979,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "GetWindow"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DateHelper",
            "id": "injectable-DateHelper-42c6247ef0afbfc2576a06ecb9c173f11f2e96df2e0a83fe4d5b84bf700e5b0e73e5a4cc9d6fe9267741edb7d4bc9e338cc417ea8f2e6dd95e91f743e05820c7",
            "file": "src/helpers/date.helper.ts",
            "properties": [
                {
                    "name": "MS_PER_DAY",
                    "defaultValue": "24 * this.MS_PER_HOUR",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Milliseconds per day, equal to 86,400,000 ms (24 hours * 60 minutes * 60 seconds * 1000 milliseconds).</p>\n",
                    "line": 52,
                    "rawdescription": "\n\nMilliseconds per day, equal to 86,400,000 ms (24 hours * 60 minutes * 60 seconds * 1000 milliseconds).\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "MS_PER_HOUR",
                    "defaultValue": "60 * this.MS_PER_MINUTE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Milliseconds per hour, equal to 3.600.000 ms (60 minutes * 60 seconds * 1000 milliseconds).</p>\n",
                    "line": 47,
                    "rawdescription": "\n\nMilliseconds per hour, equal to 3.600.000 ms (60 minutes * 60 seconds * 1000 milliseconds).\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "MS_PER_MINUTE",
                    "defaultValue": "60 * this.MS_PER_SECOND",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Milliseconds per minute, equal to 60.000 ms (60 seconds * 1000 milliseconds).</p>\n",
                    "line": 42,
                    "rawdescription": "\n\nMilliseconds per minute, equal to 60.000 ms (60 seconds * 1000 milliseconds).\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "MS_PER_SECOND",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Milliseconds per second, equal to 1.000 ms</p>\n",
                    "line": 37,
                    "rawdescription": "\n\nMilliseconds per second, equal to 1.000 ms\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "MS_PER_WEEK",
                    "defaultValue": "7 * this.MS_PER_DAY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Milliseconds per week, equal to 604.800.000 ms (7 days * 24 hours * 60 minutes * 60 seconds * 1000 milliseconds).</p>\n",
                    "line": 57,
                    "rawdescription": "\n\nMilliseconds per week, equal to 604.800.000 ms (7 days * 24 hours * 60 minutes * 60 seconds * 1000 milliseconds).\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "weekdays",
                    "defaultValue": "useMemo((locale = 'en-US'): Array<string> => {\n    const currentDate = new Date()\n    const daysOfWeek = []\n\n    for (let i = 0; i < 7; i++) {\n      const day = new Date(currentDate)\n      day.setDate(currentDate.getDate() - currentDate.getDay() + i)\n      daysOfWeek.push(day.toLocaleDateString(locale, { weekday: 'long' }))\n    }\n    return daysOfWeek\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Returns an array with the names of all days of the week, translated to the specified locale.</p>\n",
                    "line": 174,
                    "rawdescription": "\n\nReturns an array with the names of all days of the week, translated to the specified locale.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 6718,
                            "end": 6794,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 6719,
                                "end": 6724,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>A string representing the locale. Defaults to &#39;en-US&#39;.</li>\n</ul>\n",
                            "name": {
                                "pos": 6725,
                                "end": 6731,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "locale"
                            },
                            "isNameFirst": true,
                            "isBracketed": false
                        },
                        {
                            "pos": 6794,
                            "end": 6861,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 6795,
                                "end": 6802,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>An array containing the names of all days of the week.</p>\n"
                        }
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addDate",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "unit",
                            "type": "\"seconds\" | \"minutes\" | \"hours\" | \"days\" | \"weeks\" | \"months\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds the specified units to the date provided\n\n",
                    "description": "<p>Adds the specified units to the date provided</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8735,
                                "end": 8740,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8729,
                                "end": 8734,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The amount of units to add</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 8782,
                                "end": 8786,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "unit"
                            },
                            "type": "\"seconds\" | \"minutes\" | \"hours\" | \"days\" | \"weeks\" | \"months\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8776,
                                "end": 8781,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The unit to add, it can be &#39;seconds&#39; | &#39;minutes&#39; | &#39;hours&#39; | &#39;days&#39; | &#39;weeks&#39; | &#39;months&#39;</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 8890,
                                "end": 8894,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8884,
                                "end": 8889,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The date to add the units</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 8935,
                                "end": 8943,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 8929,
                                "end": 8934,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The timezone to add the units</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 8982,
                                "end": 8989,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The new date with the units added</p>\n"
                        }
                    ]
                },
                {
                    "name": "dayOfTheWeek",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "locale",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'en-US'"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns the name of the day of the week for a given date, translated to the specified locale.\n\n",
                    "description": "<p>Returns the name of the day of the week for a given date, translated to the specified locale.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8123,
                                "end": 8127,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8117,
                                "end": 8122,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input date for which to determine the day of the week.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 8201,
                                "end": 8209,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 8195,
                                "end": 8200,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 8306,
                                "end": 8312,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "locale"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'en-US'",
                            "tagName": {
                                "pos": 8300,
                                "end": 8305,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) A string representing the locale. Defaults to &#39;en-US&#39;.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 8387,
                                "end": 8394,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A string representing the full name of the day of the week.</p>\n"
                        }
                    ]
                },
                {
                    "name": "diffDate",
                    "args": [
                        {
                            "name": "unit",
                            "type": "\"seconds\" | \"minutes\" | \"hours\" | \"days\" | \"weeks\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "firstDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "secondDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns the difference between two dates in the specified unit.\n\n",
                    "description": "<p>Returns the difference between two dates in the specified unit.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5468,
                                "end": 5472,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "unit"
                            },
                            "type": "\"seconds\" | \"minutes\" | \"hours\" | \"days\" | \"weeks\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5462,
                                "end": 5467,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The unit of difference: &#39;seconds&#39; | &#39;minutes&#39; | &#39;hours&#39; | &#39;days&#39; | &#39;weeks&#39;.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 5563,
                                "end": 5572,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "firstDate"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5557,
                                "end": 5562,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The first Date object.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 5610,
                                "end": 5620,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "secondDate"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5604,
                                "end": 5609,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The second Date object.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 5659,
                                "end": 5667,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 5653,
                                "end": 5658,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 5758,
                                "end": 5765,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The difference between the two dates in the specified unit.</p>\n"
                        }
                    ]
                },
                {
                    "name": "endOfDay",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculates and returns the last moment of the day for a given date, considering the provided timezone.\n\n",
                    "description": "<p>Calculates and returns the last moment of the day for a given date, considering the provided timezone.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3706,
                                "end": 3710,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3700,
                                "end": 3705,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The reference date for which to determine the end of the day.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 3787,
                                "end": 3795,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 3781,
                                "end": 3786,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 3886,
                                "end": 3893,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A Date object representing the last moment of the day at 23:59:59.</p>\n"
                        }
                    ]
                },
                {
                    "name": "endOfMonth",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculates and returns the last moment of the month for a given date, considering the provided timezone.\n\n",
                    "description": "<p>Calculates and returns the last moment of the month for a given date, considering the provided timezone.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4866,
                                "end": 4870,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4860,
                                "end": 4865,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The reference date for which to determine the end of the month.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 4949,
                                "end": 4957,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 4943,
                                "end": 4948,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 5048,
                                "end": 5055,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A Date object representing the last moment of the month at 23:59:59.</p>\n"
                        }
                    ]
                },
                {
                    "name": "format",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "format",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'yyyy-MM-ddTHH:mm:ssZZZZZ'"
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "locale",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'en-US'"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormats the given date using Angular's formatDate function, allowing customization of the output format and timezone.\n\nSee {@link https://angular.io/api/common/formatDate} - Angular formatDate documentation for additional format options.\n",
                    "description": "<p>Formats the given date using Angular&#39;s formatDate function, allowing customization of the output format and timezone.</p>\n<p>See {@link <a href=\"https://angular.io/api/common/formatDate%7D\">https://angular.io/api/common/formatDate}</a> - Angular formatDate documentation for additional format options.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1846,
                                "end": 1850,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1840,
                                "end": 1845,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The Date object to be formatted.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1898,
                                "end": 1904,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "format"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'yyyy-MM-ddTHH:mm:ssZZZZZ'",
                            "tagName": {
                                "pos": 1892,
                                "end": 1897,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The format string for the output. Defaults to &#39;yyyy-MM-ddTHH:mm:ssZZZZZ&#39;.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 2004,
                                "end": 2012,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 1998,
                                "end": 2003,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 2109,
                                "end": 2115,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "locale"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'en-US'",
                            "tagName": {
                                "pos": 2103,
                                "end": 2108,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) A string representing the locale. Defaults to &#39;en-US&#39;.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 2315,
                                "end": 2322,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A string containing the formatted date.</p>\n"
                        }
                    ]
                },
                {
                    "name": "isDateValid",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the provided date object is a valid date.\n\n",
                    "description": "<p>Checks if the provided date object is a valid date.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9923,
                                "end": 9927,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9917,
                                "end": 9922,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The date object to be checked for validity.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 9980,
                                "end": 9987,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p><code>true</code> if the date is valid; <code>false</code> otherwise.</p>\n"
                        }
                    ]
                },
                {
                    "name": "startOfDay",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculates and returns the first moment of the day for a given date, considering the provided timezone.\n\n",
                    "description": "<p>Calculates and returns the first moment of the day for a given date, considering the provided timezone.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3085,
                                "end": 3089,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3079,
                                "end": 3084,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The reference date for which to determine the start of the day.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 3168,
                                "end": 3176,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 3162,
                                "end": 3167,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 3267,
                                "end": 3274,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A Date object representing the first moment of the day at 00:00:00.</p>\n"
                        }
                    ]
                },
                {
                    "name": "startOfMonth",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculates and returns the first moment of the month for a given date, considering the provided timezone.\n\n",
                    "description": "<p>Calculates and returns the first moment of the month for a given date, considering the provided timezone.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4278,
                                "end": 4282,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4272,
                                "end": 4277,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The reference date for which to determine the start of the month.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 4363,
                                "end": 4371,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 4357,
                                "end": 4362,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 4462,
                                "end": 4469,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A Date object representing the first moment of the month at 00:00:00.</p>\n"
                        }
                    ]
                },
                {
                    "name": "timezoneDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns the Date offset by the provided timezone.\n\n",
                    "description": "<p>Returns the Date offset by the provided timezone.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2612,
                                "end": 2616,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2606,
                                "end": 2611,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input Date object.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 2654,
                                "end": 2662,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 2648,
                                "end": 2653,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 2753,
                                "end": 2760,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Date offset by the specified timezone.</p>\n"
                        }
                    ]
                },
                {
                    "name": "weekday",
                    "args": [
                        {
                            "name": "day",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "new Date()"
                        },
                        {
                            "name": "timezone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns a Date with the specified day of the week.\n\n",
                    "description": "<p>Returns a Date with the specified day of the week.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7320,
                                "end": 7323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "day"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7314,
                                "end": 7319,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>From 0 to 6, where 0 is Sunday and 6 is Saturday. It can be positive for future weeks or negative for past weeks.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 7453,
                                "end": 7457,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "new Date()",
                            "tagName": {
                                "pos": 7447,
                                "end": 7452,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The reference Date object. Defaults to the current date.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 7541,
                                "end": 7549,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "timezone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 7535,
                                "end": 7540,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>(Optional) The timezone to consider. If not provided, the local timezone is used.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 7641,
                                "end": 7648,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Date object representing the specified day of the week.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>An utility service for working with dates in Angular applications.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// Inject the DateHelper service and use its methods:\nconstructor(private dateHelper: DateHelper) { }</code></pre></div><p>// Or instance a new class\nconst dateHelper = new DateHelper()</p>\n<p>// Format a date\nconst formattedDate = dateHelper.format(new Date())</p>\n<p>// Get the date with the timezone\nconst timezoneDate = dateHelper.timezoneDate(new Date(), &#39;America/Sao_Paulo&#39;)</p>\n<p>// Get the start of the day\nconst startOfDay = dateHelper.startOfDay(new Date())</p>\n<p>// Get the end of the day\nconst endOfDay = dateHelper.endOfDay(new Date())</p>\n<p>// Get an array with all days of the week localized\nconst weekdays = dateHelper.weekdays(&#39;pt-BR&#39;)</p>\n",
            "rawdescription": "\n\nAn utility service for working with dates in Angular applications.\n\n```html\n// Inject the DateHelper service and use its methods:\nconstructor(private dateHelper: DateHelper) { }\n```\n// Or instance a new class\nconst dateHelper = new DateHelper()\n\n// Format a date\nconst formattedDate = dateHelper.format(new Date())\n\n// Get the date with the timezone\nconst timezoneDate = dateHelper.timezoneDate(new Date(), 'America/Sao_Paulo')\n\n// Get the start of the day\nconst startOfDay = dateHelper.startOfDay(new Date())\n\n// Get the end of the day\nconst endOfDay = dateHelper.endOfDay(new Date())\n\n// Get an array with all days of the week localized\nconst weekdays = dateHelper.weekdays('pt-BR')\n",
            "sourceCode": "import { formatDate } from '@angular/common'\nimport { Injectable } from '@angular/core'\nimport { useMemo } from './memo.helper'\n/**\n * An utility service for working with dates in Angular applications.\n *\n * @example\n * // Inject the DateHelper service and use its methods:\n * constructor(private dateHelper: DateHelper) { }\n * \n * // Or instance a new class\n * const dateHelper = new DateHelper()\n * \n * // Format a date\n * const formattedDate = dateHelper.format(new Date())\n * \n * // Get the date with the timezone\n * const timezoneDate = dateHelper.timezoneDate(new Date(), 'America/Sao_Paulo')\n *\n * // Get the start of the day\n * const startOfDay = dateHelper.startOfDay(new Date())\n * \n * // Get the end of the day\n * const endOfDay = dateHelper.endOfDay(new Date())\n * \n * // Get an array with all days of the week localized\n * const weekdays = dateHelper.weekdays('pt-BR')\n **/\n@Injectable({\n    providedIn: 'root',\n})\nexport class DateHelper {\n\n  /**\n   * Milliseconds per second, equal to 1.000 ms\n   */\n  readonly MS_PER_SECOND = 1000\n\n  /**\n   * Milliseconds per minute, equal to 60.000 ms (60 seconds * 1000 milliseconds).\n   */\n  readonly MS_PER_MINUTE = 60 * this.MS_PER_SECOND\n\n  /**\n   * Milliseconds per hour, equal to 3.600.000 ms (60 minutes * 60 seconds * 1000 milliseconds).\n   */\n  readonly MS_PER_HOUR = 60 * this.MS_PER_MINUTE\n\n  /** \n   * Milliseconds per day, equal to 86,400,000 ms (24 hours * 60 minutes * 60 seconds * 1000 milliseconds).\n   */\n  readonly MS_PER_DAY = 24 * this.MS_PER_HOUR\n\n  /**\n   * Milliseconds per week, equal to 604.800.000 ms (7 days * 24 hours * 60 minutes * 60 seconds * 1000 milliseconds).\n   */\n  readonly MS_PER_WEEK = 7 * this.MS_PER_DAY\n\n  /**\n   * Formats the given date using Angular's formatDate function, allowing customization of the output format and timezone.\n   * \n   * @param date - The Date object to be formatted.\n   * @param format - (Optional) The format string for the output. Defaults to 'yyyy-MM-ddTHH:mm:ssZZZZZ'.\n   * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n   * @param locale - (Optional) A string representing the locale. Defaults to 'en-US'.\n   * @see {@link https://angular.io/api/common/formatDate} - Angular formatDate documentation for additional format options.\n   * @returns A string containing the formatted date.\n   */\n  format(date: Date, format = 'yyyy-MM-ddTHH:mm:ssZZZZZ', timezone?: string, locale = 'en-US'): string {\n    return formatDate(date, format, locale, timezone)\n  }\n\n  /**\n   * Returns the Date offset by the provided timezone.\n   * \n   * @param date - The input Date object.\n   * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n   * @returns Date offset by the specified timezone.\n   */\n  timezoneDate(date: Date, timezone?: string): Date {\n    return new Date(date.toLocaleString('en-US', { timeZone: timezone || undefined }))\n  }\n\n  /**\n   * Calculates and returns the first moment of the day for a given date, considering the provided timezone.\n   * \n   * @param date - The reference date for which to determine the start of the day.\n   * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n   * @returns A Date object representing the first moment of the day at 00:00:00.\n   */\n  startOfDay(date: Date, timezone?: string): Date {\n    const tzDate = new Date(date.getFullYear(), date.getMonth(), date.getDate()).toLocaleString('en-US', {timeZone: timezone || undefined})\n    return new Date(tzDate)\n  }\n\n  /**\n   * Calculates and returns the last moment of the day for a given date, considering the provided timezone.\n   * \n   * @param date - The reference date for which to determine the end of the day.\n   * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n   * @returns A Date object representing the last moment of the day at 23:59:59.\n   */\n  endOfDay(date: Date, timezone?: string): Date {\n    const startOfDay = this.startOfDay(date, timezone)\n    return new Date(startOfDay.getTime() + (this.MS_PER_DAY - 1))\n  }\n\n  /**\n   * Calculates and returns the first moment of the month for a given date, considering the provided timezone.\n   * \n   * @param date - The reference date for which to determine the start of the month.\n   * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n   * @returns A Date object representing the first moment of the month at 00:00:00.\n   */\n  startOfMonth(date: Date, timezone?: string): Date {\n    const localeDate = this.startOfDay(date, timezone)\n    return new Date(localeDate.getFullYear(), localeDate.getMonth(), 1)\n  }\n\n  /**\n   * Calculates and returns the last moment of the month for a given date, considering the provided timezone.\n   * \n   * @param date - The reference date for which to determine the end of the month.\n   * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n   * @returns A Date object representing the last moment of the month at 23:59:59.\n   */\n  endOfMonth(date: Date, timezone?: string): Date {\n    const localeDate = this.startOfDay(date, timezone)\n    const nextMonth = new Date(localeDate.getFullYear(), localeDate.getMonth() + 1, 1)\n    return new Date(nextMonth.getTime() - 1)\n  }\n\n  /**\n   * Returns the difference between two dates in the specified unit.\n   * \n   * @param unit - The unit of difference: 'seconds' | 'minutes' | 'hours' | 'days' | 'weeks'.\n   * @param firstDate - The first Date object.\n   * @param secondDate - The second Date object.\n   * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n   * @returns The difference between the two dates in the specified unit.\n   */\n  diffDate(unit: 'seconds' | 'minutes' | 'hours' | 'days' | 'weeks', firstDate: Date, secondDate: Date, timezone?: string): number {\n    let unitTime: number\n    switch(unit){\n      case 'seconds':\n        unitTime = this.MS_PER_SECOND\n        break\n      case 'minutes':\n        unitTime = this.MS_PER_MINUTE\n        break\n      case 'hours':\n        unitTime = this.MS_PER_HOUR\n        break\n      case 'days':\n        unitTime = this.MS_PER_DAY\n        break\n      case 'weeks':\n        unitTime = this.MS_PER_WEEK\n        break\n    }\n  \n    firstDate = this.timezoneDate(firstDate, timezone)\n    secondDate = this.timezoneDate(secondDate, timezone)\n    const difference = (firstDate.getTime() - secondDate.getTime()) / unitTime\n    return Math.round(difference)\n  }\n\n  /**\n   * Returns an array with the names of all days of the week, translated to the specified locale.\n   * \n   * @param locale - A string representing the locale. Defaults to 'en-US'.\n   * @returns An array containing the names of all days of the week.\n   */\n  weekdays = useMemo((locale = 'en-US'): Array<string> => {\n    const currentDate = new Date()\n    const daysOfWeek = []\n\n    for (let i = 0; i < 7; i++) {\n      const day = new Date(currentDate)\n      day.setDate(currentDate.getDate() - currentDate.getDay() + i)\n      daysOfWeek.push(day.toLocaleDateString(locale, { weekday: 'long' }))\n    }\n    return daysOfWeek\n  })\n\n  /**\n    * Returns a Date with the specified day of the week.\n    * \n    * @param day - From 0 to 6, where 0 is Sunday and 6 is Saturday. It can be positive for future weeks or negative for past weeks.\n    * @param date - (Optional) The reference Date object. Defaults to the current date.\n    * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n    * @returns Date object representing the specified day of the week.\n    */\n  weekday(day: number, date = new Date(), timezone?: string): Date {\n    date = this.timezoneDate(date, timezone)\n    const currentDayOfWeek = date.getDay()\n    const daysUntilTargetDay = (day - currentDayOfWeek)\n    date.setDate(date.getDate() + daysUntilTargetDay)\n    return date\n  }\n\n  /**\n   * Returns the name of the day of the week for a given date, translated to the specified locale.\n   * \n   * @param date - The input date for which to determine the day of the week.\n   * @param timezone - (Optional) The timezone to consider. If not provided, the local timezone is used.\n   * @param locale - (Optional) A string representing the locale. Defaults to 'en-US'.\n   * @returns A string representing the full name of the day of the week.\n   */\n  dayOfTheWeek(date: Date, timezone?: string, locale = 'en-US'){\n    const tzDate = this.timezoneDate(new Date(date), timezone)\n    return tzDate.toLocaleDateString(locale, { weekday: 'long' })\n  }\n\n  /**\n   * Adds the specified units to the date provided\n   * \n   * @param value - The amount of units to add\n   * @param unit - The unit to add, it can be 'seconds' | 'minutes' | 'hours' | 'days' | 'weeks' | 'months'\n   * @param date - The date to add the units\n   * @param timezone - The timezone to add the units\n   * @returns The new date with the units added\n   */\n  addDate(value: number, unit: 'seconds' | 'minutes' | 'hours' | 'days' | 'weeks' | 'months', date: Date, timezone?: string): Date {\n    let unitTime: number\n    switch(unit){\n      case 'seconds':\n        unitTime = this.MS_PER_SECOND\n        break\n      case 'minutes':\n        unitTime = this.MS_PER_MINUTE\n        break\n      case 'hours':\n        unitTime = this.MS_PER_HOUR\n        break\n      case 'days':\n        unitTime = this.MS_PER_DAY\n        break\n      case 'weeks':\n        unitTime = this.MS_PER_WEEK\n        break\n      case 'months':\n        return new Date(date.setMonth(date.getMonth() + value))\n        break\n        default:\n        throw new Error('Invalid unit')\n    }\n\n    const tzDate = this.timezoneDate(date, timezone)\n    return new Date(tzDate.getTime() + (value * unitTime))\n  }\n\n  /**\n   * Checks if the provided date object is a valid date.\n   * \n   * @param date - The date object to be checked for validity.\n   * @returns `true` if the date is valid; `false` otherwise.\n   */\n  isDateValid(date: Date): boolean {\n    return date instanceof Date && !isNaN(date.getTime())\n  }\n\n}",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "GetWindow",
            "id": "injectable-GetWindow-fee238f8294dc5818e6092d4221c149b29bbffadebffaf9029db8ca827ebef57d81e1bc4690a25a0752f102420331f520ccee88d4c909700167d38bf97880201",
            "file": "src/helpers/window.helper.ts",
            "properties": [],
            "methods": [
                {
                    "name": "href",
                    "args": [],
                    "optional": false,
                    "returnType": "string | URL",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAllow to get the href location object inside ssr\n",
                    "description": "<p>Allow to get the href location object inside ssr</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1240,
                                "end": 1247,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The href location object.</li>\n</ul>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "touch",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAllow to get the origin location object inside ssr\n",
                    "description": "<p>Allow to get the origin location object inside ssr</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1500,
                                "end": 1507,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the browser supports touch events, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "window",
                    "args": [],
                    "optional": false,
                    "returnType": " | null",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAllow to get the window object inside ssr\n",
                    "description": "<p>Allow to get the window object inside ssr</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1033,
                                "end": 1040,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The window object.</li>\n</ul>\n",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A utility service for working with the window object in Angular applications.</p>\n<p>This service provides methods to retrieve the window object, the href location object, and touch capabilities.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">Inject the GetWindow service and use its methods:\nconstructor(private getWindow: GetWindow) { }</code></pre></div><p>Or instance a new class\nconst getWindow = new GetWindow()</p>\n<p>const window = this.getWindow.window();\nconst href = this.getWindow.href();\nconst touch = this.getWindow.touch();]</p>\n",
            "rawdescription": "\n\nA utility service for working with the window object in Angular applications.\n\nThis service provides methods to retrieve the window object, the href location object, and touch capabilities.\n\n```html\nInject the GetWindow service and use its methods:\nconstructor(private getWindow: GetWindow) { }\n```\nOr instance a new class\nconst getWindow = new GetWindow()\n\nconst window = this.getWindow.window();\nconst href = this.getWindow.href();\nconst touch = this.getWindow.touch();]\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common'\nimport { Injectable, Inject } from '@angular/core'\n\n/**\n * A utility service for working with the window object in Angular applications.\n *\n * This service provides methods to retrieve the window object, the href location object, and touch capabilities.\n *\n * @example\n * Inject the GetWindow service and use its methods:\n * constructor(private getWindow: GetWindow) { }\n *\n * Or instance a new class\n * const getWindow = new GetWindow()\n *\n * const window = this.getWindow.window();\n * const href = this.getWindow.href();\n * const touch = this.getWindow.touch();]\n * @returns {void}\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetWindow {\n  /**\n   * Initializes a new instance of the `GetWindow` class.\n   * @constructor\n   * @param {Document} document - The injected DOCUMENT to get a reference to the window object in a way that's safe for SSR.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document) { }\n\n  /**\n   * Allow to get the window object inside ssr\n   * @returns {Window | null} - The window object.\n   */\n  window(): Window & typeof globalThis | null {\n    return this.document.defaultView\n  }\n\n  /**\n   * Allow to get the href location object inside ssr\n   * @returns {string | URL} - The href location object.\n   */\n  href(): string | URL {\n    const window = this.window()\n    if (window) {\n      return window.location.href\n    }\n    return ''\n  }\n\n  /**\n   * Allow to get the origin location object inside ssr\n   * @returns {boolean} - `true` if the browser supports touch events, otherwise `false`.\n   */\n  touch(): boolean {\n    const window = this.window()\n    if (window) {\n      return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n    }\n    return false\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Initializes a new instance of the <code>GetWindow</code> class.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "rawdescription": "\n\nInitializes a new instance of the `GetWindow` class.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 800,
                            "end": 808,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "document"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 783,
                            "end": 788,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The injected DOCUMENT to get a reference to the window object in a way that&#39;s safe for SSR.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 789,
                            "end": 799,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 790,
                                "end": 798,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 790,
                                    "end": 798,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Document"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ToastHelper",
            "id": "injectable-ToastHelper-77061f3651d54dbc84a0bf381810f1121303d085fd13bcceae6b9dae94f5a62c5791b2311fc191f3133d6a414acaae050b0f133ea01d5018a2b93575fe4ceb53",
            "file": "src/helpers/toast.helper.ts",
            "properties": [
                {
                    "name": "toast",
                    "defaultValue": "{\n    success: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    error: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    inverted: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    info: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    warning: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    grayscale: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    custom: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    default: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    show: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    theme: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Toast",
                    "optional": false,
                    "description": "<p>An object containing methods for displaying different types of toast messages.</p>\n",
                    "line": 40,
                    "rawdescription": "\n\nAn object containing methods for displaying different types of toast messages.\n",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "toastLogSrr",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "ToastConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ToastResponse",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLogs and returns a toast message with the provided message and configuration.\n",
                    "description": "<p>Logs and returns a toast message with the provided message and configuration.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2359,
                                "end": 2366,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "message"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2344,
                                "end": 2349,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The message content of the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2350,
                                "end": 2358,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2351,
                                    "end": 2357,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 2429,
                                "end": 2435,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "config"
                            },
                            "type": "ToastConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 2409,
                                "end": 2414,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The configuration options for the toast.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2415,
                                "end": 2428,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2416,
                                    "end": 2427,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 2416,
                                        "end": 2427,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ToastConfig"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2485,
                                "end": 2492,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The response containing the message and configuration.</li>\n</ul>\n",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A service for displaying toast messages in Angular applications.</p>\n<p>Toast messages are often used to provide feedback to users in a non-intrusive way. This service\nprovides methods to display different types of toast messages with various configurations.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/toast%7D\">https://css.squidit.com.br/components/toast}</a></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">  selector: &#39;app-root&#39;,\n  template: &#39;&lt;button (click)=&quot;showToast()&quot;&gt;Show Toast&lt;/button&gt;&#39;,\n})\nexport class AppComponent {\n  constructor(private toastHelper: ToastHelper) {}</code></pre></div><p>  showToast() {\n    // Display a success toast message.\n    this.toastHelper.toast.success(&#39;Operation was successful.&#39;, { duration: 3000 })\n  }\n}</p>\n",
            "rawdescription": "\n\nA service for displaying toast messages in Angular applications.\n\nToast messages are often used to provide feedback to users in a non-intrusive way. This service\nprovides methods to display different types of toast messages with various configurations.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/toast}\n\n```html\n  selector: 'app-root',\n  template: '<button (click)=\"showToast()\">Show Toast</button>',\n})\nexport class AppComponent {\n  constructor(private toastHelper: ToastHelper) {}\n```\n  showToast() {\n    // Display a success toast message.\n    this.toastHelper.toast.success('Operation was successful.', { duration: 3000 })\n  }\n}\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { Toast, ToastConfig, ToastResponse } from '../interfaces/toast.interface'\n\n/**\n * Global declare to get from window\n */\ndeclare const Toast: Toast\n\n/**\n * A service for displaying toast messages in Angular applications.\n *\n * Toast messages are often used to provide feedback to users in a non-intrusive way. This service\n * provides methods to display different types of toast messages with various configurations.\n * \n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/components/toast}\n *\n * @example\n * @Component({\n *   selector: 'app-root',\n *   template: '<button (click)=\"showToast()\">Show Toast</button>',\n * })\n * export class AppComponent {\n *   constructor(private toastHelper: ToastHelper) {}\n *\n *   showToast() {\n *     // Display a success toast message.\n *     this.toastHelper.toast.success('Operation was successful.', { duration: 3000 })\n *   }\n * }\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastHelper {\n  /**\n   * An object containing methods for displaying different types of toast messages.\n   */\n  public toast: Toast = {\n    success: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    error: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    inverted: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    info: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    warning: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    grayscale: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    custom: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    default: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    show: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n    theme: (message: string, config?: ToastConfig) => this.toastLogSrr(message, config),\n  }\n\n  /**\n   * Creates an instance of the ToastHelper service.\n   */\n  constructor() {\n    this.toast = Toast || window['Toast' as any] as unknown as Toast\n  }\n\n  /**\n   * Logs and returns a toast message with the provided message and configuration.\n   * @param {string} message - The message content of the toast.\n   * @param {ToastConfig} config - The configuration options for the toast.\n   * @returns {ToastResponse} - The response containing the message and configuration.\n   */\n  toastLogSrr(message: string, config?: ToastConfig): ToastResponse {\n    return {\n      message,\n      config,\n    }\n  }\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Creates an instance of the ToastHelper service.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 51,
                "rawdescription": "\n\nCreates an instance of the ToastHelper service.\n"
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ValidatorHelper",
            "id": "injectable-ValidatorHelper-1564b540b1593e3fd63594077dce9dc2a982745a3bfc2cfd24a8ed78468d2fbef0d08fbc2747501287aadd0408568388b6e6257f21e050ab526d1d5ffb22da9f",
            "file": "src/helpers/validator.helper.ts",
            "properties": [],
            "methods": [
                {
                    "name": "cnpj",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates a CNPJ (Cadastro Nacional da Pessoa Jurídica) number.\n\n",
                    "description": "<p>Validates a CNPJ (Cadastro Nacional da Pessoa Jurídica) number.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2613,
                                "end": 2620,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the CNPJ is valid, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "cpf",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates a CPF (Cadastro de Pessoas Físicas) number.\n\n",
                    "description": "<p>Validates a CPF (Cadastro de Pessoas Físicas) number.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4155,
                                "end": 4160,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "pos": 4140,
                                "end": 4145,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The CPF number to validate.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 4146,
                                "end": 4154,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 4147,
                                    "end": 4153,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4198,
                                "end": 4205,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the CPF is valid, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "date",
                    "args": [
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates a date string.\n\n",
                    "description": "<p>Validates a date string.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2334,
                                "end": 2338,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "date"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2319,
                                "end": 2324,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The date string to validate.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2325,
                                "end": 2333,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2326,
                                    "end": 2332,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2377,
                                "end": 2384,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the date is valid, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "email",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates an email address.\n\n",
                    "description": "<p>Validates an email address.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1347,
                                "end": 1352,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1332,
                                "end": 1337,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The email address to validate.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1338,
                                "end": 1346,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1339,
                                    "end": 1345,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1393,
                                "end": 1400,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the email is valid, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "phone",
                    "args": [
                        {
                            "name": "phone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates a phone number.\n\n",
                    "description": "<p>Validates a phone number.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3801,
                                "end": 3806,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "phone"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "pos": 3786,
                                "end": 3791,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The phone number to validate.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3792,
                                "end": 3800,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3793,
                                    "end": 3799,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3846,
                                "end": 3853,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the phone number is valid, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "recordEmployment",
                    "args": [
                        {
                            "name": "recordEmployment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates a record employment number.\n\n",
                    "description": "<p>Validates a record employment number.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5088,
                                "end": 5104,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "recordEmployment"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "pos": 5073,
                                "end": 5078,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The record employment number to validate.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5079,
                                "end": 5087,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5080,
                                    "end": 5086,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 5156,
                                "end": 5163,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the record employment number is valid, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "url",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates a URL.\n\n",
                    "description": "<p>Validates a URL.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1663,
                                "end": 1666,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "url"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1648,
                                "end": 1653,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The URL to validate.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1654,
                                "end": 1662,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1655,
                                    "end": 1661,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1697,
                                "end": 1704,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the URL is valid, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "XOR",
                    "args": [
                        {
                            "name": "x",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "y",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates XOR Logic\n\n",
                    "description": "<p>Validates XOR Logic</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1046,
                                "end": 1047,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "x"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1034,
                                "end": 1039,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>any value to validate.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1040,
                                "end": 1045,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1041,
                                    "end": 1044,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 133
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 1092,
                                "end": 1093,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "y"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1080,
                                "end": 1085,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>any value to validate.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1086,
                                "end": 1091,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1087,
                                    "end": 1090,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 133
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1126,
                                "end": 1133,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the is an xor logic, otherwise <code>false</code>.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A utility service for performing various types of validation tasks, such as email, URL, date,\nCNPJ, phone number, CPF, and record employment number validation.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// Import and inject the ValidatorHelper service in a component or service.\nimport { Component } from &#39;&#64;angular/core&#39;;\nimport { ValidatorHelper } from &#39;./validator-helper.service&#39;;</code></pre></div><p>  selector: &#39;app-root&#39;,\n  template: &#39;&lt;button (click)=&quot;validateEmail()&quot;&gt;Validate Email</button>&#39;,\n})\nexport class AppComponent {\n  constructor(private validatorHelper: ValidatorHelper) {}</p>\n<p>  validateEmail() {\n    const isValid = this.validatorHelper.email(&#39;<a href=\"mailto:example@email.com\">example@email.com</a>&#39;);\n    if (isValid) {\n      console.log(&#39;Email is valid.&#39;);\n    } else {\n      console.log(&#39;Email is not valid.&#39;);\n    }\n  }\n}</p>\n",
            "rawdescription": "\n\nA utility service for performing various types of validation tasks, such as email, URL, date,\nCNPJ, phone number, CPF, and record employment number validation.\n\n```html\n// Import and inject the ValidatorHelper service in a component or service.\nimport { Component } from '@angular/core';\nimport { ValidatorHelper } from './validator-helper.service';\n```\n  selector: 'app-root',\n  template: '<button (click)=\"validateEmail()\">Validate Email</button>',\n})\nexport class AppComponent {\n  constructor(private validatorHelper: ValidatorHelper) {}\n\n  validateEmail() {\n    const isValid = this.validatorHelper.email('example@email.com');\n    if (isValid) {\n      console.log('Email is valid.');\n    } else {\n      console.log('Email is not valid.');\n    }\n  }\n}\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\n\r\n/**\r\n * A utility service for performing various types of validation tasks, such as email, URL, date,\r\n * CNPJ, phone number, CPF, and record employment number validation.\r\n *\r\n * @example\r\n * // Import and inject the ValidatorHelper service in a component or service.\r\n * import { Component } from '@angular/core';\r\n * import { ValidatorHelper } from './validator-helper.service';\r\n *\r\n * @Component({\r\n *   selector: 'app-root',\r\n *   template: '<button (click)=\"validateEmail()\">Validate Email</button>',\r\n * })\r\n * export class AppComponent {\r\n *   constructor(private validatorHelper: ValidatorHelper) {}\r\n *\r\n *   validateEmail() {\r\n *     const isValid = this.validatorHelper.email('example@email.com');\r\n *     if (isValid) {\r\n *       console.log('Email is valid.');\r\n *     } else {\r\n *       console.log('Email is not valid.');\r\n *     }\r\n *   }\r\n * }\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ValidatorHelper {\r\n  /**\r\n   * Validates XOR Logic\r\n   *\r\n   * @param {any} x - any value to validate.\r\n   * @param {any} y - any value to validate.\r\n   * @returns {boolean} - `true` if the is an xor logic, otherwise `false`.\r\n   */\r\n  XOR(x: any, y: any): boolean {\r\n    return (x || y) && !(x && y)\r\n  }\r\n\r\n  /**\r\n   * Validates an email address.\r\n   *\r\n   * @param {string} email - The email address to validate.\r\n   * @returns {boolean} - `true` if the email is valid, otherwise `false`.\r\n   */\r\n  email(email: string): boolean {\r\n    return /^[_\\-a-z0-9]+(\\.[-_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]+)$/i.test(email)\r\n  }\r\n\r\n  /**\r\n   * Validates a URL.\r\n   *\r\n   * @param {string} url - The URL to validate.\r\n   * @returns {boolean} - `true` if the URL is valid, otherwise `false`.\r\n   */\r\n  url(url: string): boolean {\r\n    const pattern = new RegExp(\r\n      '^(https?:\\\\/\\\\/)' + // protocol\r\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n      '(\\\\/\\\\@?[a-zA-Z0-9._%+-]*)*' +\r\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n      '(\\\\#[-a-z\\\\d_]*)?$',\r\n      'i'\r\n    ) // fragment locator\r\n    return !!pattern.test(url)\r\n  }\r\n\r\n  /**\r\n   * Validates a date string.\r\n   *\r\n   * @param {string} date - The date string to validate.\r\n   * @returns {boolean} - `true` if the date is valid, otherwise `false`.\r\n   */\r\n  date(date: string): boolean {\r\n    return !!Date.parse(date)\r\n  }\r\n\r\n  /**\r\n   * Validates a CNPJ (Cadastro Nacional da Pessoa Jurídica) number.\r\n   *\r\n   * @returns {boolean} - `true` if the CNPJ is valid, otherwise `false`.\r\n   */\r\n  cnpj(value = ''): boolean {\r\n    if (value.length !== 14) {\r\n      return false\r\n    }\r\n    for (const digit of Array.from(Array(10).keys())) {\r\n      if (Array(14).fill(digit).join('') === value) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    let size = value.length - 2\r\n    let numbers = value.substring(0, size)\r\n    const digits = value.substring(size)\r\n    let sum = 0\r\n    let pos = size - 7\r\n    for (let i = size; i >= 1; i--) {\r\n      sum += parseFloat(numbers.charAt(size - i)) * pos--\r\n      if (pos < 2) {\r\n        pos = 9\r\n      }\r\n    }\r\n    if (sum % 11 < 2 ? 0 : 11 - (sum % 11) !== parseInt(digits.charAt(0), 10)) {\r\n      return false\r\n    }\r\n\r\n    size = size + 1\r\n    numbers = value.substring(0, size)\r\n    sum = 0\r\n    pos = size - 7\r\n    for (let i = size; i >= 1; i--) {\r\n      sum += parseFloat(numbers.charAt(size - i)) * pos--\r\n      if (pos < 2) {\r\n        pos = 9\r\n      }\r\n    }\r\n    if (sum % 11 < 2 ? 0 : 11 - (sum % 11) !== parseInt(digits.charAt(1), 10)) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Validates a phone number.\r\n   *\r\n   * @param {string} phone - The phone number to validate.\r\n   * @returns {boolean} - `true` if the phone number is valid, otherwise `false`.\r\n   */\r\n  phone(phone = ''): boolean {\r\n    const regex = /(\\d{2})(\\d{0,1})(\\d{4})(\\d{4})/\r\n    return phone.match(regex) !== null\r\n  }\r\n\r\n  /**\r\n   * Validates a CPF (Cadastro de Pessoas Físicas) number.\r\n   *\r\n   * @param {string} value - The CPF number to validate.\r\n   * @returns {boolean} - `true` if the CPF is valid, otherwise `false`.\r\n   */\r\n  cpf(value = '') {\r\n    let sum = 0\r\n    let rest\r\n    if (/^(.)\\1+$/.test(value)) {\r\n      return false\r\n    }\r\n\r\n    for (let i = 1; i <= 9; i++) {\r\n      sum = sum + parseInt(value.substring(i - 1, i), 10) * (11 - i)\r\n    }\r\n    rest = (sum * 10) % 11\r\n\r\n    if (rest === 10 || rest === 11) {\r\n      rest = 0\r\n    }\r\n    if (rest !== parseInt(value.substring(9, 10), 10)) {\r\n      return false\r\n    }\r\n\r\n    sum = 0\r\n    for (let i = 1; i <= 10; i++) {\r\n      sum = sum + parseInt(value.substring(i - 1, i), 10) * (12 - i)\r\n    }\r\n    rest = (sum * 10) % 11\r\n\r\n    if (rest === 10 || rest === 11) {\r\n      rest = 0\r\n    }\r\n    if (rest !== parseInt(value.substring(10, 11), 10)) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Validates a record employment number.\r\n   *\r\n   * @param {string} recordEmployment - The record employment number to validate.\r\n   * @returns {boolean} - `true` if the record employment number is valid, otherwise `false`.\r\n   */\r\n  recordEmployment(recordEmployment = '') {\r\n    let total = 0\r\n    let residual = 0\r\n    let strResto = ''\r\n\r\n    if (recordEmployment === '00000000000') {\r\n      return false\r\n    }\r\n\r\n    for (let i = 0, ftap = '3298765432', resultado = 0; i <= 9; i++) {\r\n      resultado = Number(recordEmployment.slice(i, i + 1)) * Number(ftap.slice(i, i + 1))\r\n      total = total + resultado\r\n    }\r\n\r\n    residual = total % 11\r\n    if (residual !== 0) {\r\n      residual = 11 - residual\r\n    }\r\n\r\n    if (residual === 10 || residual === 11) {\r\n      strResto = residual.toString()\r\n      residual = Number(strResto.slice(1, 2))\r\n    }\r\n\r\n    if (residual !== Number(recordEmployment.slice(10, 11))) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "SqClickOutsideDirective",
            "id": "directive-SqClickOutsideDirective-6e4d85e6f3d45e127b80d5e68f075e4edff1e45fb990ed515e48a3ca4f7de4a1d3dcb085f444b840aeb17d5adda459c05ae1057623b1bd7a4621f0875b666386",
            "file": "src/directives/sq-click-outside/sq-click-outside.directive.ts",
            "type": "directive",
            "description": "<p>Directive that emits an event when a click occurs outside of the bound element.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;!-- Add the clickOutside directive to an element and listen for the clickOutside event. --&gt;\n&lt;div [clickOutside]=&quot;true&quot; (clickOutside)=&quot;handleClickOutside()&quot;&gt;\n  &lt;!-- Content here --&gt;\n&lt;/div&gt;</code></pre></div>",
            "rawdescription": "\n\nDirective that emits an event when a click occurs outside of the bound element.\n\n```html\n<!-- Add the clickOutside directive to an element and listen for the clickOutside event. -->\n<div [clickOutside]=\"true\" (clickOutside)=\"handleClickOutside()\">\n  <!-- Content here -->\n</div>\n```",
            "sourceCode": "import { Directive, ElementRef, Output, EventEmitter, OnDestroy, Renderer2, Input, OnChanges, SimpleChanges } from '@angular/core'\n/**\n * Directive that emits an event when a click occurs outside of the bound element.\n *\n * @example\n * <!-- Add the clickOutside directive to an element and listen for the clickOutside event. -->\n * <div [clickOutside]=\"true\" (clickOutside)=\"handleClickOutside()\">\n *   <!-- Content here -->\n * </div>\n */\n@Directive({\n  selector: '[clickOutside]',\n})\nexport class SqClickOutsideDirective implements OnDestroy, OnChanges {\n  /**\n   * Indicates whether the clickOutside functionality is enabled.\n   */\n  @Input() clickOutsideEnabled = false\n\n  /**\n   * Event emitted when a click occurs outside of the bound element.\n   */\n  @Output() public clickOutside = new EventEmitter()\n\n  /**\n   * Listener function to handle click events.\n   */\n  listener!: () => void\n\n  /**\n   * Constructs a new SqClickOutsideDirective.\n   *\n   * @param {ElementRef} elementRef - The ElementRef of the bound element.\n   * @param {Renderer2} renderer - The Renderer2 for DOM manipulation.\n   */\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n  /**\n   * Lifecycle hook that handles changes to the clickOutsideEnabled property.\n   *\n   * @param {SimpleChanges} changes - The changes to input properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['clickOutsideEnabled']) {\n      if (changes['clickOutsideEnabled'].currentValue) {\n        this.createListener()\n      } else if (typeof this.listener === 'function') {\n        this.listener()\n      }\n    }\n  }\n\n  /**\n   * Lifecycle hook that cleans up the directive when it is destroyed.\n   */\n  ngOnDestroy() {\n    this.listener = () => null\n  }\n\n  /**\n   * Creates a click event listener to detect clicks outside of the bound element.\n   */\n  createListener() {\n    this.listener = this.renderer.listen('window', 'click', ($event) => {\n      const isClickedInside = this.elementRef.nativeElement.contains($event.target)\n      if (!isClickedInside) {\n        this.clickOutside.emit()\n      }\n    })\n  }\n}",
            "selector": "[clickOutside]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "clickOutsideEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the clickOutside functionality is enabled.\n",
                    "description": "<p>Indicates whether the clickOutside functionality is enabled.</p>\n",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clickOutside",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when a click occurs outside of the bound element.\n",
                    "description": "<p>Event emitted when a click occurs outside of the bound element.</p>\n",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "listener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Listener function to handle click events.</p>\n",
                    "line": 28,
                    "rawdescription": "\n\nListener function to handle click events.\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "createListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a click event listener to detect clicks outside of the bound element.\n",
                    "description": "<p>Creates a click event listener to detect clicks outside of the bound element.</p>\n"
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook that handles changes to the clickOutsideEnabled property.\n\n",
                    "description": "<p>Lifecycle hook that handles changes to the clickOutsideEnabled property.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1300,
                                "end": 1307,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1278,
                                "end": 1283,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The changes to input properties.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1284,
                                "end": 1299,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1285,
                                    "end": 1298,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 1285,
                                        "end": 1298,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "SimpleChanges"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook that cleans up the directive when it is destroyed.\n",
                    "description": "<p>Lifecycle hook that cleans up the directive when it is destroyed.</p>\n"
                }
            ],
            "extends": [],
            "implements": [
                "OnDestroy",
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new SqClickOutsideDirective.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "rawdescription": "\n\nConstructs a new SqClickOutsideDirective.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 976,
                            "end": 986,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "elementRef"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 957,
                            "end": 962,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ElementRef of the bound element.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 963,
                            "end": 975,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 964,
                                "end": 974,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 964,
                                    "end": 974,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ElementRef"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 1050,
                            "end": 1058,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "renderer"
                        },
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1032,
                            "end": 1037,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Renderer2 for DOM manipulation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 1038,
                            "end": 1049,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 1039,
                                "end": 1048,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 1039,
                                    "end": 1048,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Renderer2"
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "SqDropdownDirective",
            "id": "directive-SqDropdownDirective-b0fa8b4b501f7248293658e6ee4abb5b5d5381702be16317099f26d4d194e537aa09963a9778f61021d6108d521cf7309c059fe55bf1e8169e0c1b159d5ac0c8",
            "file": "src/directives/sq-dropdown/sq-dropdown.directive.ts",
            "type": "directive",
            "description": "<p>Angular directive for creating and controlling dropdown menus.</p>\n<p>This directive allows you to create and manage dropdown menus in your Angular application.\nDropdowns can display additional content when clicked or triggered by user actions.</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/dropdown%7COfficial\">https://css.squidit.com.br/components/dropdown|Official</a> Dropdown Documentation}</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;!-- Basic usage --&gt;\n&lt;div\n [dropdown]=&quot;true&quot;\n dropdownPlacement=&quot;left bottom&quot;\n&gt;\n  &lt;!-- HTML content, this container may be a button, span, etc --&gt;\n&lt;/div&gt;\n&lt;ul class=&quot;dropdown&quot;&gt;\n  &lt;li&gt;\n    &lt;!-- Common Item Like &lt;a&gt; or &lt;button&gt; or forms --&gt;\n  &lt;/li&gt;\n  &lt;li&gt;\n    &lt;!-- Custom HR --&gt;\n    &lt;hr class=&quot;dropdown-divider&quot; /&gt;\n  &lt;/li&gt;\n  &lt;li&gt;\n    &lt;div class=&quot;dropdown-plain&quot;&gt;\n      &lt;!-- Plain HTML --&gt;\n    &lt;/div&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;</code></pre></div>",
            "rawdescription": "\n\nAngular directive for creating and controlling dropdown menus.\n\nThis directive allows you to create and manage dropdown menus in your Angular application.\nDropdowns can display additional content when clicked or triggered by user actions.\n\nSee {@link https://css.squidit.com.br/components/dropdown|Official Dropdown Documentation}\n\n```html\n<!-- Basic usage -->\n<div\n [dropdown]=\"true\"\n dropdownPlacement=\"left bottom\"\n>\n  <!-- HTML content, this container may be a button, span, etc -->\n</div>\n<ul class=\"dropdown\">\n  <li>\n    <!-- Common Item Like <a> or <button> or forms -->\n  </li>\n  <li>\n    <!-- Custom HR -->\n    <hr class=\"dropdown-divider\" />\n  </li>\n  <li>\n    <div class=\"dropdown-plain\">\n      <!-- Plain HTML -->\n    </div>\n  </li>\n</ul>\n```",
            "sourceCode": "import { Directive, Input, ElementRef, HostListener, Renderer2, OnDestroy, OnInit, Inject } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { sleep } from '../../helpers/sleep.helper'\nimport { DOCUMENT } from '@angular/common'\n\n/**\n * Angular directive for creating and controlling dropdown menus.\n *\n * This directive allows you to create and manage dropdown menus in your Angular application.\n * Dropdowns can display additional content when clicked or triggered by user actions.\n *\n * @see {@link https://css.squidit.com.br/components/dropdown|Official Dropdown Documentation}\n *\n * @example\n * <!-- Basic usage -->\n * <div\n *  [dropdown]=\"true\"\n *  dropdownPlacement=\"left bottom\"\n * >\n *   <!-- HTML content, this container may be a button, span, etc -->\n * </div>\n * <ul class=\"dropdown\">\n *   <li>\n *     <!-- Common Item Like <a> or <button> or forms -->\n *   </li>\n *   <li>\n *     <!-- Custom HR -->\n *     <hr class=\"dropdown-divider\" />\n *   </li>\n *   <li>\n *     <div class=\"dropdown-plain\">\n *       <!-- Plain HTML -->\n *     </div>\n *   </li>\n * </ul>\n */\n@Directive({\n  selector: '[dropdown]',\n})\nexport class SqDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Indicates whether the dropdown menu is open or closed.\n   */\n  @Input('dropdown') content = false\n\n  /**\n   * Defines the placement of the dropdown menu in relation to the host element.\n   * Possible values: 'left top', 'left bottom', 'center top', 'center bottom', 'right top', 'right bottom'.\n   */\n  @Input() dropdownPlacement = 'center bottom'\n\n  /**\n   * The delay in milliseconds before closing the dropdown after a click outside event.\n   */\n  @Input() dropdownDelay = 0\n\n  /**\n   * Additional CSS class to be applied to the dropdown menu.\n   */\n  @Input() dropdownClass = ''\n\n  /**\n   * The width of the dropdown menu in pixels.\n   */\n  @Input() dropdownWidth = 'auto'\n\n  /**\n   * The vertical distance between the host element and the dropdown menu.\n   */\n  @Input() dropdownDistanceVertical = 3\n\n  /**\n   * The horizontal distance between the host element and the dropdown menu.\n   */\n  @Input() dropdownDistanceHorizontal = 0\n\n  /**\n   * Indicates whether the dropdown should close when a click occurs outside the menu.\n   */\n  @Input() closeOnClick = false\n\n  /**\n   * Reference to the generated dropdown menu element.\n   */\n  dropdownElement: HTMLElement | null = null\n\n  /**\n   * Indicates whether the dropdown menu is open or closed. Used for internal control\n   */\n  open = false\n\n  /**\n   * Reference to the Document object for interacting with the DOM.\n   */\n  document: Document\n\n  /**\n   * Constructs a new SqDropdownDirective.\n   *\n   * @param {ElementRef} el - The ElementRef of the host element.\n   * @param {Renderer2} renderer - The Renderer2 for DOM manipulation.\n   * @param {Router} router - The Angular Router service.\n   * @param {Document} documentImported - The injected Document object for DOM manipulation.\n   */\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private router: Router,\n    @Inject(DOCUMENT) private documentImported: Document\n  ) {\n    // Bind the hide function to the current instance.\n    this.hide = this.hide.bind(this)\n    // Assign the document object for DOM manipulation.\n    this.document = this.documentImported || document\n  }\n\n  /**\n   * Event listener for the 'click' event on the host element to toggle the dropdown menu.\n   */\n  @HostListener('click') onClick() {\n    if (this.dropdownElement) {\n      this.hide()\n    }\n    if (!this.dropdownElement) {\n      this.show()\n    }\n  }\n\n  /**\n   * Initializes the directive, subscribing to router events to automatically close the dropdown on navigation.\n   */\n  ngOnInit() {\n    this.router.events.subscribe((val: any) => {\n      if (val instanceof NavigationEnd) {\n        this.hide()\n      }\n    })\n  }\n\n  /**\n   * Cleans up the directive when it is destroyed, ensuring the dropdown is closed.\n   */\n  ngOnDestroy() {\n    this.hide()\n  }\n\n  /**\n   * Opens the dropdown menu and sets its position.\n   */\n  show() {\n    this.create()\n    this.document?.addEventListener('click', this.hide, true)\n    if (this.dropdownElement) {\n      this.renderer.addClass(this.dropdownElement, 'open')\n      this.setPosition()\n      this.open = true\n    }\n  }\n\n  /**\n   * Closes the dropdown menu with a delay to allow for animations, and performs cleanup.\n   */\n  hide() {\n    if (this.dropdownElement && this.open) {\n      window.setTimeout(async () => {\n        this.open = false\n        this.renderer.removeClass(this.dropdownElement, 'open')\n        this.renderer.removeClass(this.dropdownElement, 'dropdown-generated')\n        this.renderer.removeClass(this.dropdownElement, `dropdown-${this.dropdownPlacement.replace(' ', '-')}`)\n        this.renderer.removeAttribute(this.dropdownElement, 'style')\n        this.renderer.insertBefore(this.el.nativeElement.parentNode, this.dropdownElement, this.el.nativeElement.nextSibling)\n        await sleep(500) // Wait for animations.\n        this.dropdownElement = null\n        this.document.removeEventListener('click', this.hide, true)\n      }, this.dropdownDelay)\n    }\n  }\n\n  /**\n   * Creates the dropdown menu element and appends it to the DOM.\n   */\n  create() {\n    if (this.content) {\n      let menu = this.el.nativeElement.nextSibling\n      let foundDropdown = false\n      while (!foundDropdown) {\n        if (!menu || menu?.classList?.contains('dropdown')) {\n          foundDropdown = true\n          break\n        }\n        menu = menu.nextSibling\n      }\n      if (!menu?.classList || !menu.classList?.contains('dropdown')) {\n        return\n      }\n      this.dropdownElement = menu\n      menu.getAttribute('dropdown')\n      this.renderer.addClass(this.dropdownElement, 'dropdown-generated')\n      this.renderer.addClass(this.dropdownElement, `dropdown-${this.dropdownPlacement.replace(' ', '-')}`)\n      this.renderer.setAttribute(this.dropdownElement, 'style', `width: ${this.dropdownWidth}`)\n      this.renderer.appendChild(this.document.body, this.dropdownElement)\n    }\n  }\n\n  /**\n   * Sets the position of the dropdown menu relative to the host element.\n   */\n  setPosition() {\n    const hostPos = this.el.nativeElement.getBoundingClientRect()\n    if (this.dropdownElement) {\n      const dropdownPos = this.dropdownElement.getBoundingClientRect()\n      const scrollPos = window.pageYOffset || this.document.documentElement.scrollTop || this.document.body.scrollTop || 0\n      let top\n      let left\n\n      const posHorizontal = this.dropdownPlacement.split(' ')[0] || 'center'\n      const posVertical = this.dropdownPlacement.split(' ')[1] || 'bottom'\n      switch (posHorizontal) {\n        case 'left':\n          left = hostPos.left + hostPos.width - dropdownPos.width + this.dropdownDistanceHorizontal\n          break\n\n        case 'right':\n          left = hostPos.left + this.dropdownDistanceHorizontal\n          break\n\n        default:\n        case 'center':\n          left = hostPos.left - dropdownPos.width / 2 + hostPos.width / 2 + this.dropdownDistanceHorizontal\n          break\n      }\n\n      switch (posVertical) {\n        case 'bottom':\n          top = hostPos.bottom + this.dropdownDistanceVertical\n          break\n\n        default:\n        case 'top':\n          top = hostPos.top - dropdownPos.height - this.dropdownDistanceVertical\n      }\n\n      this.renderer.setStyle(this.dropdownElement, 'top', `${top + scrollPos}px`)\n      this.renderer.setStyle(this.dropdownElement, 'left', `${left}px`)\n    }\n  }\n}\n",
            "selector": "[dropdown]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "closeOnClick",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the dropdown should close when a click occurs outside the menu.\n",
                    "description": "<p>Indicates whether the dropdown should close when a click occurs outside the menu.</p>\n",
                    "line": 80,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dropdown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the dropdown menu is open or closed.\n",
                    "description": "<p>Indicates whether the dropdown menu is open or closed.</p>\n",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dropdownClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdditional CSS class to be applied to the dropdown menu.\n",
                    "description": "<p>Additional CSS class to be applied to the dropdown menu.</p>\n",
                    "line": 60,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dropdownDelay",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe delay in milliseconds before closing the dropdown after a click outside event.\n",
                    "description": "<p>The delay in milliseconds before closing the dropdown after a click outside event.</p>\n",
                    "line": 55,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "dropdownDistanceHorizontal",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe horizontal distance between the host element and the dropdown menu.\n",
                    "description": "<p>The horizontal distance between the host element and the dropdown menu.</p>\n",
                    "line": 75,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "dropdownDistanceVertical",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe vertical distance between the host element and the dropdown menu.\n",
                    "description": "<p>The vertical distance between the host element and the dropdown menu.</p>\n",
                    "line": 70,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "dropdownPlacement",
                    "defaultValue": "'center bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines the placement of the dropdown menu in relation to the host element.\nPossible values: 'left top', 'left bottom', 'center top', 'center bottom', 'right top', 'right bottom'.\n",
                    "description": "<p>Defines the placement of the dropdown menu in relation to the host element.\nPossible values: &#39;left top&#39;, &#39;left bottom&#39;, &#39;center top&#39;, &#39;center bottom&#39;, &#39;right top&#39;, &#39;right bottom&#39;.</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dropdownWidth",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe width of the dropdown menu in pixels.\n",
                    "description": "<p>The width of the dropdown menu in pixels.</p>\n",
                    "line": 65,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent listener for the 'click' event on the host element to toggle the dropdown menu.\n",
                    "description": "<p>Event listener for the &#39;click&#39; event on the host element to toggle the dropdown menu.</p>\n",
                    "line": 120
                }
            ],
            "propertiesClass": [
                {
                    "name": "document",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Document",
                    "optional": false,
                    "description": "<p>Reference to the Document object for interacting with the DOM.</p>\n",
                    "line": 95,
                    "rawdescription": "\n\nReference to the Document object for interacting with the DOM.\n"
                },
                {
                    "name": "dropdownElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null",
                    "optional": false,
                    "description": "<p>Reference to the generated dropdown menu element.</p>\n",
                    "line": 85,
                    "rawdescription": "\n\nReference to the generated dropdown menu element.\n"
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the dropdown menu is open or closed. Used for internal control</p>\n",
                    "line": 90,
                    "rawdescription": "\n\nIndicates whether the dropdown menu is open or closed. Used for internal control\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates the dropdown menu element and appends it to the DOM.\n",
                    "description": "<p>Creates the dropdown menu element and appends it to the DOM.</p>\n"
                },
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCloses the dropdown menu with a delay to allow for animations, and performs cleanup.\n",
                    "description": "<p>Closes the dropdown menu with a delay to allow for animations, and performs cleanup.</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCleans up the directive when it is destroyed, ensuring the dropdown is closed.\n",
                    "description": "<p>Cleans up the directive when it is destroyed, ensuring the dropdown is closed.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInitializes the directive, subscribing to router events to automatically close the dropdown on navigation.\n",
                    "description": "<p>Initializes the directive, subscribing to router events to automatically close the dropdown on navigation.</p>\n"
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent listener for the 'click' event on the host element to toggle the dropdown menu.\n",
                    "description": "<p>Event listener for the &#39;click&#39; event on the host element to toggle the dropdown menu.</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "setPosition",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the position of the dropdown menu relative to the host element.\n",
                    "description": "<p>Sets the position of the dropdown menu relative to the host element.</p>\n"
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens the dropdown menu and sets its position.\n",
                    "description": "<p>Opens the dropdown menu and sets its position.</p>\n"
                }
            ],
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new SqDropdownDirective.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "documentImported",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 95,
                "rawdescription": "\n\nConstructs a new SqDropdownDirective.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2704,
                            "end": 2706,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "el"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2685,
                            "end": 2690,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ElementRef of the host element.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2691,
                            "end": 2703,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2692,
                                "end": 2702,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2692,
                                    "end": 2702,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ElementRef"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2769,
                            "end": 2777,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "renderer"
                        },
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2751,
                            "end": 2756,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Renderer2 for DOM manipulation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2757,
                            "end": 2768,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2758,
                                "end": 2767,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2758,
                                    "end": 2767,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Renderer2"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2837,
                            "end": 2843,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2822,
                            "end": 2827,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Angular Router service.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2828,
                            "end": 2836,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2829,
                                "end": 2835,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2829,
                                    "end": 2835,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Router"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2897,
                            "end": 2913,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "documentImported"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2880,
                            "end": 2885,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The injected Document object for DOM manipulation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2886,
                            "end": 2896,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2887,
                                "end": 2895,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2887,
                                    "end": 2895,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Document"
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "SqTooltipDirective",
            "id": "directive-SqTooltipDirective-262155a40f5031d4eb42eeab56584b9e1f163e3d6a82fda5ed5447092b8d668ccc2bb881f3f668f0a42186a8dd230afe678ac1d425370d20f01a064ea16830c1",
            "file": "src/directives/sq-tooltip/sq-tooltip.directive.ts",
            "type": "directive",
            "description": "<p>Angular directive for creating and managing tooltips.</p>\n<p>This directive allows you to easily add tooltips to elements in your Angular application.\nTooltips can display additional information when hovering or clicking on an element.</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/tooltip%7COfficial\">https://css.squidit.com.br/components/tooltip|Official</a> Tooltip Documentation}</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;!-- Basic usage --&gt;\n&lt;div [tooltip]=&quot;&#39;Tooltip message&#39;&quot; placement=&quot;center top&quot;&gt;&lt;/div&gt;</code></pre></div>",
            "rawdescription": "\n\nAngular directive for creating and managing tooltips.\n\nThis directive allows you to easily add tooltips to elements in your Angular application.\nTooltips can display additional information when hovering or clicking on an element.\n\nSee {@link https://css.squidit.com.br/components/tooltip|Official Tooltip Documentation}\n\n```html\n<!-- Basic usage -->\n<div [tooltip]=\"'Tooltip message'\" placement=\"center top\"></div>\n```",
            "sourceCode": "import { DOCUMENT } from '@angular/common'\nimport { Directive, ElementRef, HostListener, Inject, Input, OnDestroy, OnInit, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { sleep } from '../../helpers/sleep.helper'\nimport { GetWindow } from '../../helpers/window.helper'\n\n/**\n * Angular directive for creating and managing tooltips.\n *\n * This directive allows you to easily add tooltips to elements in your Angular application.\n * Tooltips can display additional information when hovering or clicking on an element.\n *\n * @see {@link https://css.squidit.com.br/components/tooltip|Official Tooltip Documentation}\n *\n * @example\n * <!-- Basic usage -->\n * <div [tooltip]=\"'Tooltip message'\" placement=\"center top\"></div>\n */\n@Directive({\n  selector: '[tooltip]',\n})\nexport class SqTooltipDirective implements OnInit, OnDestroy {\n  /**\n   * The content of the tooltip. Can be a string message or an Angular TemplateRef.\n   */\n  @Input('tooltip') content?: string | null | TemplateRef<any> = ''\n\n  /**\n   * The placement of the tooltip relative to the host element.\n   * Possible values: 'left top', 'left center', 'left bottom', 'center top',\n   * 'center center', 'center bottom', 'right top', 'right center', 'right bottom'.\n   */\n  @Input() placement = 'center top'\n\n  /**\n   * The delay in milliseconds before showing the tooltip.\n   */\n  @Input() delay = 0\n\n  /**\n   * The theme of the tooltip. Possible values: 'light' or 'dark'.\n   */\n  @Input() theme: 'light' | 'dark' = 'dark'\n\n  /**\n   * The trigger for displaying the tooltip. Possible values: 'hover' or 'click'.\n   */\n  @Input() trigger: 'hover' | 'click' = 'hover'\n\n  /**\n   * Reference to the generated tooltip element.\n   */\n  tooltipElement: HTMLElement | null = null\n\n  /**\n   * The offset between the tooltip and the host element.\n   */\n  offset = 10\n\n  /**\n   * Reference to the window object.\n   */\n  window = this.getWindow.window()\n\n  /**\n   * Indicates whether the tooltip is open or closed. Used for internal control.\n   */\n  open = false\n\n  /**\n   * Reference to the Document object for interacting with the DOM.\n   */\n  document: Document\n\n  /**\n   * Constructs a new SqTooltipDirective.\n   * @constructor\n   * @param {ElementRef} el - The ElementRef of the host element.\n   * @param {Renderer2} renderer - The Renderer2 for DOM manipulation.\n   * @param {Router} router - The Angular Router service.\n   * @param {ViewContainerRef} viewContainerRef - The ViewContainerRef for the tooltip.\n   * @param {Document} documentImported - The injected Document object for DOM manipulation.\n   * @param {GetWindow} getWindow - The GetWindow service for accessing the window object.\n   */\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private router: Router,\n    private viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private documentImported: Document,\n    public getWindow: GetWindow\n  ) {\n    // Bind the hide function to the current instance.\n    this.hide = this.hide.bind(this)\n    // Assign the document object for DOM manipulation.\n    this.document = this.documentImported || document\n  }\n\n  /**\n   * Event listener for the 'mouseenter' event to show the tooltip on hover.\n   */\n  @HostListener('mouseenter') onMouseEnter() {\n    if (!this.isTouch() && !this.tooltipElement && this.trigger === 'hover') {\n      this.show()\n    }\n  }\n\n  /**\n   * Event listener for the 'mouseleave' event to hide the tooltip on hover.\n   */\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.tooltipElement && this.trigger === 'hover' && !this.isTouch()) {\n      this.hide()\n    }\n  }\n\n  /**\n   * Event listener for the 'click' event to toggle the tooltip on click.\n   */\n  @HostListener('click') onClick() {\n    if (this.tooltipElement && (this.trigger === 'click' || this.isTouch())) {\n      this.hide()\n    }\n    if (!this.tooltipElement && (this.trigger === 'click' || this.isTouch())) {\n      this.show()\n    }\n  }\n\n  /**\n   * Initializes the directive and subscribes to router events to hide the tooltip on navigation.\n   */\n  ngOnInit() {\n    this.router.events.subscribe((val: unknown) => {\n      if (val instanceof NavigationEnd) {\n        this.hide()\n      }\n    })\n  }\n\n  /**\n   * Cleans up the directive when it is destroyed, ensuring the tooltip is hidden.\n   */\n  ngOnDestroy() {\n    this.hide()\n  }\n\n  /**\n   * Checks if the device has touch support.\n   *\n   * @returns {boolean} - True if the device supports touch events; otherwise, false.\n   */\n  isTouch(): boolean {\n    const window = this.getWindow.window()\n    if (window) {\n      const maxTouchPoints = navigator.maxTouchPoints & 0xff\n      return 'ontouchstart' in window || maxTouchPoints > 0\n    }\n    return false\n  }\n\n  /**\n   * Shows the tooltip and sets its position.\n   */\n  async show() {\n    this.create()\n    this.setPosition()\n    this.document?.addEventListener('click', this.hide, true)\n    if (this.tooltipElement) {\n      this.renderer.addClass(this.tooltipElement, 'tooltip-show')\n      await sleep(500) // Wait for animations.\n      this.open = true\n    }\n  }\n\n  /**\n   * Hides the tooltip with a delay to allow for animations, and performs cleanup.\n   */\n  hide() {\n    if (\n      this.tooltipElement &&\n      ((this.isTouch() || this.trigger === 'click') && this.open) ||\n      (!this.isTouch() && this.trigger === 'hover')\n    ) {\n      try {\n        this.renderer.removeClass(this.tooltipElement, 'tooltip-show')\n      } catch (e) {\n        // Ignore error\n      }\n      this.getWindow?.window()?.setTimeout(() => {\n        try {\n          this.renderer.removeChild(this.document.body, this.tooltipElement)\n        }\n        catch (e) {\n          // Ignore error\n        }\n        this.open = false\n        this.document.removeEventListener('click', this.hide, true)\n        this.tooltipElement = null\n      }, this.delay)\n    }\n  }\n\n  /**\n   * Creates the tooltip element and appends it to the DOM.\n   */\n  create() {\n    if (this.content) {\n      const arrow: HTMLElement = this.renderer.createElement('div')\n      this.renderer.addClass(arrow, 'tooltip-arrow')\n      if (this.isTouch()) {\n        this.renderer.addClass(arrow, 'tooltip-not-arrow')\n      }\n      this.tooltipElement = this.renderer.createElement('div')\n      if (this.tooltipElement) {\n        if (this.content instanceof TemplateRef) {\n          for (const node of this.viewContainerRef.createEmbeddedView(this.content).rootNodes) {\n            this.renderer.appendChild(this.tooltipElement, node)\n          }\n        }\n        if (typeof this.content === 'string') {\n          this.tooltipElement.innerHTML = this.content\n        }\n      }\n\n      this.renderer.addClass(this.tooltipElement, 'tooltip')\n      this.renderer.addClass(this.tooltipElement, 'tooltip-generated')\n      this.renderer.addClass(this.tooltipElement, `tooltip-${this.theme}`)\n      this.renderer.addClass(this.tooltipElement, `tooltip-${this.placement.replace(' ', '-')}`)\n      this.renderer.addClass(this.tooltipElement, 'text-left')\n      this.renderer.setStyle(this.tooltipElement, '-webkit-transition', `opacity ${this.delay}ms`)\n      this.renderer.setStyle(this.tooltipElement, '-moz-transition', `opacity ${this.delay}ms`)\n      this.renderer.setStyle(this.tooltipElement, '-o-transition', `opacity ${this.delay}ms`)\n      this.renderer.setStyle(this.tooltipElement, 'transition', `opacity ${this.delay}ms`)\n\n      this.renderer.appendChild(this.tooltipElement, arrow)\n      this.renderer.appendChild(this.document.body, this.tooltipElement)\n    }\n  }\n\n  /**\n   * Sets the position of the tooltip relative to the host element.\n   */\n  setPosition() {\n    if (this.tooltipElement) {\n      const parentCoords = this.el.nativeElement.getBoundingClientRect()\n      const tooltipCoords = this.tooltipElement.getBoundingClientRect()\n\n      const posHorizontal = this.placement.split(' ')[0] || 'center'\n      const posVertical = this.placement.split(' ')[1] || 'bottom'\n\n      const distance = 7\n\n      let top\n      let left\n\n      switch (posHorizontal) {\n        case 'left':\n          left = parseInt(parentCoords.left) - distance - tooltipCoords.width\n          if (parseInt(parentCoords.left) - tooltipCoords.width < 0) {\n            left = distance\n          }\n          break\n\n        case 'right':\n          left = parentCoords.right + distance\n          if (parseInt(parentCoords.right) + tooltipCoords.width > document.documentElement.clientWidth) {\n            left = document.documentElement.clientWidth - tooltipCoords.width - distance\n          }\n          break\n\n        default:\n        case 'center':\n          left = (parseInt(parentCoords.left) - (tooltipCoords.width / 2)) + (parentCoords.width / 2)\n      }\n\n      switch (posVertical) {\n        case 'center':\n          top = (parseInt(parentCoords.top) + parseInt(parentCoords.bottom)) / 2 - this.tooltipElement.offsetHeight / 2\n          break\n\n        case 'bottom':\n          top = parseInt(parentCoords.bottom) + distance\n          break\n\n        default:\n        case 'top':\n          top = parseInt(parentCoords.top) - this.tooltipElement.offsetHeight - distance\n      }\n\n      this.renderer.setStyle(this.tooltipElement, 'left', `${left < 0 ? parseInt(parentCoords.left) : left}px`)\n      const scrollY = this.getWindow?.window()?.scrollY ?? 0\n      this.renderer.setStyle(this.tooltipElement, 'top', `${(top < 0 ? parseInt(parentCoords.bottom) + distance : top) + scrollY}px`)\n    }\n  }\n}\n",
            "selector": "[tooltip]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "delay",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe delay in milliseconds before showing the tooltip.\n",
                    "description": "<p>The delay in milliseconds before showing the tooltip.</p>\n",
                    "line": 38,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placement",
                    "defaultValue": "'center top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe placement of the tooltip relative to the host element.\nPossible values: 'left top', 'left center', 'left bottom', 'center top',\n'center center', 'center bottom', 'right top', 'right center', 'right bottom'.\n",
                    "description": "<p>The placement of the tooltip relative to the host element.\nPossible values: &#39;left top&#39;, &#39;left center&#39;, &#39;left bottom&#39;, &#39;center top&#39;,\n&#39;center center&#39;, &#39;center bottom&#39;, &#39;right top&#39;, &#39;right center&#39;, &#39;right bottom&#39;.</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'dark'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe theme of the tooltip. Possible values: 'light' or 'dark'.\n",
                    "description": "<p>The theme of the tooltip. Possible values: &#39;light&#39; or &#39;dark&#39;.</p>\n",
                    "line": 43,
                    "type": "\"light\" | \"dark\"",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe content of the tooltip. Can be a string message or an Angular TemplateRef.\n",
                    "description": "<p>The content of the tooltip. Can be a string message or an Angular TemplateRef.</p>\n",
                    "line": 26,
                    "type": "string | null | TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "defaultValue": "'hover'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe trigger for displaying the tooltip. Possible values: 'hover' or 'click'.\n",
                    "description": "<p>The trigger for displaying the tooltip. Possible values: &#39;hover&#39; or &#39;click&#39;.</p>\n",
                    "line": 48,
                    "type": "\"hover\" | \"click\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent listener for the 'click' event to toggle the tooltip on click.\n",
                    "description": "<p>Event listener for the &#39;click&#39; event to toggle the tooltip on click.</p>\n",
                    "line": 120
                },
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent listener for the 'mouseenter' event to show the tooltip on hover.\n",
                    "description": "<p>Event listener for the &#39;mouseenter&#39; event to show the tooltip on hover.</p>\n",
                    "line": 102
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent listener for the 'mouseleave' event to hide the tooltip on hover.\n",
                    "description": "<p>Event listener for the &#39;mouseleave&#39; event to hide the tooltip on hover.</p>\n",
                    "line": 111
                }
            ],
            "propertiesClass": [
                {
                    "name": "document",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Document",
                    "optional": false,
                    "description": "<p>Reference to the Document object for interacting with the DOM.</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nReference to the Document object for interacting with the DOM.\n"
                },
                {
                    "name": "getWindow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GetWindow",
                    "optional": false,
                    "description": "- The GetWindow service for accessing the window object.",
                    "line": 91,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "offset",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>The offset between the tooltip and the host element.</p>\n",
                    "line": 58,
                    "rawdescription": "\n\nThe offset between the tooltip and the host element.\n"
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the tooltip is open or closed. Used for internal control.</p>\n",
                    "line": 68,
                    "rawdescription": "\n\nIndicates whether the tooltip is open or closed. Used for internal control.\n"
                },
                {
                    "name": "tooltipElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null",
                    "optional": false,
                    "description": "<p>Reference to the generated tooltip element.</p>\n",
                    "line": 53,
                    "rawdescription": "\n\nReference to the generated tooltip element.\n"
                },
                {
                    "name": "window",
                    "defaultValue": "this.getWindow.window()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Reference to the window object.</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nReference to the window object.\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates the tooltip element and appends it to the DOM.\n",
                    "description": "<p>Creates the tooltip element and appends it to the DOM.</p>\n"
                },
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHides the tooltip with a delay to allow for animations, and performs cleanup.\n",
                    "description": "<p>Hides the tooltip with a delay to allow for animations, and performs cleanup.</p>\n"
                },
                {
                    "name": "isTouch",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the device has touch support.\n\n",
                    "description": "<p>Checks if the device has touch support.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4466,
                                "end": 4473,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>True if the device supports touch events; otherwise, false.</li>\n</ul>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCleans up the directive when it is destroyed, ensuring the tooltip is hidden.\n",
                    "description": "<p>Cleans up the directive when it is destroyed, ensuring the tooltip is hidden.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInitializes the directive and subscribes to router events to hide the tooltip on navigation.\n",
                    "description": "<p>Initializes the directive and subscribes to router events to hide the tooltip on navigation.</p>\n"
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent listener for the 'click' event to toggle the tooltip on click.\n",
                    "description": "<p>Event listener for the &#39;click&#39; event to toggle the tooltip on click.</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent listener for the 'mouseenter' event to show the tooltip on hover.\n",
                    "description": "<p>Event listener for the &#39;mouseenter&#39; event to show the tooltip on hover.</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent listener for the 'mouseleave' event to hide the tooltip on hover.\n",
                    "description": "<p>Event listener for the &#39;mouseleave&#39; event to hide the tooltip on hover.</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "setPosition",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the position of the tooltip relative to the host element.\n",
                    "description": "<p>Sets the position of the tooltip relative to the host element.</p>\n"
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShows the tooltip and sets its position.\n",
                    "description": "<p>Shows the tooltip and sets its position.</p>\n",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new SqTooltipDirective.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "documentImported",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getWindow",
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "rawdescription": "\n\nConstructs a new SqTooltipDirective.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2285,
                            "end": 2287,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "el"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2266,
                            "end": 2271,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ElementRef of the host element.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2272,
                            "end": 2284,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2273,
                                "end": 2283,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2273,
                                    "end": 2283,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ElementRef"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2350,
                            "end": 2358,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "renderer"
                        },
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2332,
                            "end": 2337,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Renderer2 for DOM manipulation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2338,
                            "end": 2349,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2339,
                                "end": 2348,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2339,
                                    "end": 2348,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Renderer2"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2418,
                            "end": 2424,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2403,
                            "end": 2408,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Angular Router service.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2409,
                            "end": 2417,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2410,
                                "end": 2416,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2410,
                                    "end": 2416,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Router"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2486,
                            "end": 2502,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "viewContainerRef"
                        },
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2461,
                            "end": 2466,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ViewContainerRef for the tooltip.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2467,
                            "end": 2485,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2468,
                                "end": 2484,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2468,
                                    "end": 2484,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ViewContainerRef"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2566,
                            "end": 2582,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "documentImported"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2549,
                            "end": 2554,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The injected Document object for DOM manipulation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2555,
                            "end": 2565,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2556,
                                "end": 2564,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2556,
                                    "end": 2564,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Document"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2660,
                            "end": 2669,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "getWindow"
                        },
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2642,
                            "end": 2647,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The GetWindow service for accessing the window object.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2648,
                            "end": 2659,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2649,
                                "end": 2658,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2649,
                                    "end": 2658,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "GetWindow"
                                }
                            }
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SqAccordionComponent",
            "id": "component-SqAccordionComponent-20bed1fb61985f2d176169f7e3b7d9ae39bd290ba08a941d0cfec408f9606ff092425db9d62aa8c6fbf522dbcf3cf4b29cbd77eb65f87b7e92f4cedf52278905",
            "file": "src/components/sq-accordion/sq-accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-accordion",
            "styleUrls": [
                "./sq-accordion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-accordion.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "onlyOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether only one SqCollapseComponent can be open at a time.\n",
                    "description": "<p>Indicates whether only one SqCollapseComponent can be open at a time.</p>\n",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "openFirst",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the first SqCollapseComponent should be open initially.\n",
                    "description": "<p>Indicates whether the first SqCollapseComponent should be open initially.</p>\n",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "collapses",
                    "defaultValue": "[] as unknown as QueryList<SqCollapseComponent>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<SqCollapseComponent>",
                    "optional": false,
                    "description": "<p>A QueryList containing the SqCollapseComponent instances within the accordion.</p>\n",
                    "line": 55,
                    "rawdescription": "\n\nA QueryList containing the SqCollapseComponent instances within the accordion.\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SqCollapseComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPerforms actions after the content has been initialized.\n",
                    "description": "<p>Performs actions after the content has been initialized.</p>\n",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPerforms actions before the component is destroyed.\n",
                    "description": "<p>Performs actions before the component is destroyed.</p>\n"
                },
                {
                    "name": "openCollapse",
                    "args": [
                        {
                            "name": "collapse",
                            "type": "SqCollapseComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens or closes a specified SqCollapseComponent.\n",
                    "description": "<p>Opens or closes a specified SqCollapseComponent.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2648,
                                "end": 2656,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "collapse"
                            },
                            "type": "SqCollapseComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2642,
                                "end": 2647,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The SqCollapseComponent to open or close.</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents the SqAccordionComponent, an accordion component that manages a collection of SqCollapseComponents.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/accordion-collapse%7D\">https://css.squidit.com.br/components/accordion-collapse}</a></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-accordion [onlyOne]=&quot;true&quot;&gt;\n  &lt;sq-collapse&gt;\n     &lt;ng-container header&gt;\n       &lt;div&gt;Header Content&lt;/div&gt;\n     &lt;/ng-container&gt;\n     Body Collpase content\n   &lt;/sq-collapse&gt;\n  &lt;sq-collapse&gt;\n   Body Collpase content\n  &lt;/sq-collapse&gt;\n&lt;/sq-accordion&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents the SqAccordionComponent, an accordion component that manages a collection of SqCollapseComponents.\n\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/accordion-collapse}\n\n```html\n<sq-accordion [onlyOne]=\"true\">\n  <sq-collapse>\n     <ng-container header>\n       <div>Header Content</div>\n     </ng-container>\n     Body Collpase content\n   </sq-collapse>\n  <sq-collapse>\n   Body Collpase content\n  </sq-collapse>\n</sq-accordion>\n```",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  AfterContentInit,\r\n  OnDestroy\r\n} from '@angular/core'\r\nimport { SqCollapseComponent } from './sq-collapse/sq-collapse.component'\r\nimport { sleep } from '../../helpers/sleep.helper'\r\n\r\n/**\r\n * Represents the SqAccordionComponent, an accordion component that manages a collection of SqCollapseComponents.\r\n * \r\n * @implements {AfterContentInit}\r\n * @implements {OnDestroy}\r\n * \r\n * Look the link about the component in original framework and the appearance\r\n *\r\n * @see {@link https://css.squidit.com.br/components/accordion-collapse}\r\n *\r\n * @example\r\n * <sq-accordion [onlyOne]=\"true\">\r\n *   <sq-collapse>\r\n*      <ng-container header>\r\n *        <div>Header Content</div>\r\n *      </ng-container>  \r\n *      Body Collpase content\r\n *    </sq-collapse>\r\n *   <sq-collapse>\r\n *    Body Collpase content\r\n *   </sq-collapse>\r\n * </sq-accordion>\r\n */\r\n@Component({\r\n  selector: 'sq-accordion',\r\n  templateUrl: './sq-accordion.component.html',\r\n  styleUrls: ['./sq-accordion.component.scss'],\r\n})\r\nexport class SqAccordionComponent implements AfterContentInit, OnDestroy {\r\n  /**\r\n   * Indicates whether only one SqCollapseComponent can be open at a time.\r\n   */\r\n  @Input() onlyOne?: boolean\r\n\r\n  /**\r\n   * Indicates whether the first SqCollapseComponent should be open initially.\r\n   */\r\n  @Input() openFirst?: boolean\r\n\r\n  /**\r\n   * A QueryList containing the SqCollapseComponent instances within the accordion.\r\n   */\r\n  @ContentChildren(SqCollapseComponent)\r\n  collapses: QueryList<SqCollapseComponent> = [] as unknown as QueryList<SqCollapseComponent>\r\n\r\n  /**\r\n   * Performs actions after the content has been initialized.\r\n   */\r\n  async ngAfterContentInit() {\r\n    if (this.openFirst) {\r\n      const collapses = this.collapses.toArray()\r\n      if (collapses?.length) {\r\n        await sleep()\r\n        this.collapses.toArray()[0].toggleCollapse()\r\n      }\r\n    }\r\n    this.collapses.toArray().forEach((collapse) => {\r\n      collapse.openedEmitter.subscribe(() => {\r\n        this.openCollapse(collapse)\r\n      })\r\n    })\r\n    this.collapses.changes.subscribe(() => {\r\n      this.collapses.toArray().forEach((collapse) => {\r\n        collapse.openedEmitter.subscribe(() => {\r\n          this.openCollapse(collapse)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Performs actions before the component is destroyed.\r\n   */\r\n  ngOnDestroy(): void {\r\n    if (this.collapses) {\r\n      this.collapses.toArray().forEach((collapse) => {\r\n        collapse.openedEmitter.unsubscribe()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens or closes a specified SqCollapseComponent.\r\n   * @param collapse - The SqCollapseComponent to open or close.\r\n   */\r\n  openCollapse(collapse: SqCollapseComponent): void {\r\n    if (this.onlyOne) {\r\n      this.collapses.toArray().forEach((thisCollapse) => {\r\n        if (thisCollapse.open) {\r\n          thisCollapse.toggleCollapse()\r\n        }\r\n      })\r\n    }\r\n    collapse.toggleCollapse()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".accordion-container {\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 100%;\r\n}",
                    "styleUrl": "./sq-accordion.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterContentInit",
                "OnDestroy"
            ],
            "templateData": "<div class='accordion-container'>\r\n  <ng-content></ng-content>\r\n</div>"
        },
        {
            "name": "SqButtonComponent",
            "id": "component-SqButtonComponent-d00d0962c10c1fd489187393be2c3e23539e854e8329868132821bb75147829d1ad1e767c5cca3efe7f7170a3af99b034d5f824815245f1654c3789355c30ea9",
            "file": "src/components/sq-button/sq-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-button",
            "styleUrls": [
                "./sq-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "block",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the button should occupy the full width of its container.\n",
                    "description": "<p>Indicates whether the button should occupy the full width of its container.</p>\n",
                    "line": 89,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe border color of the button.\n",
                    "description": "<p>The border color of the button.</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderRadius",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe border radius of the button.\n",
                    "description": "<p>The border radius of the button.</p>\n",
                    "line": 64,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderStyle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe border style of the button.\n",
                    "description": "<p>The border style of the button.</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderWidth",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe width of the button border.\n",
                    "description": "<p>The width of the button border.</p>\n",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "boxShadow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe box shadow of the button.\n",
                    "description": "<p>The box shadow of the button.</p>\n",
                    "line": 124,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonAsLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the button should be styled as a link.\n",
                    "description": "<p>Indicates whether the button should be styled as a link.</p>\n",
                    "line": 104,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'pink'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the button.\n",
                    "description": "<p>The background color of the button.</p>\n",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the button is disabled.\n",
                    "description": "<p>Indicates whether the button is disabled.</p>\n",
                    "line": 84,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe font size of the button.\n",
                    "description": "<p>The font size of the button.</p>\n",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideOnLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the button should be hidden during the loading state.\n",
                    "description": "<p>Indicates whether the button should be hidden during the loading state.</p>\n",
                    "line": 109,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe ID attribute of the button.\n",
                    "description": "<p>The ID attribute of the button.</p>\n",
                    "line": 99,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "invertedHover",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the button should have inverted hover colors.\n",
                    "description": "<p>Indicates whether the button should have inverted hover colors.</p>\n",
                    "line": 114,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the button is in a loading state.\n",
                    "description": "<p>Indicates whether the button is in a loading state.</p>\n",
                    "line": 79,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "noPadding",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to remove padding from the button.\n",
                    "description": "<p>Indicates whether to remove padding from the button.</p>\n",
                    "line": 94,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "noUnderline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the button text should have no underline.\n",
                    "description": "<p>Indicates whether the button text should have no underline.</p>\n",
                    "line": 119,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe size of the button ('sm', 'md', 'lg', 'xl').\n",
                    "description": "<p>The size of the button (&#39;sm&#39;, &#39;md&#39;, &#39;lg&#39;, &#39;xl&#39;).</p>\n",
                    "line": 69,
                    "type": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
                    "decorators": []
                },
                {
                    "name": "textColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe text color of the button.\n",
                    "description": "<p>The text color of the button.</p>\n",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textTransform",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe text transformation of the button text (e.g., 'uppercase', 'lowercase').\n",
                    "description": "<p>The text transformation of the button text (e.g., &#39;uppercase&#39;, &#39;lowercase&#39;).</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe type of the button (e.g., 'button', 'submit', 'reset').\n",
                    "description": "<p>The type of the button (e.g., &#39;button&#39;, &#39;submit&#39;, &#39;reset&#39;).</p>\n",
                    "line": 29,
                    "type": "\"submit\" | \"reset\" | \"button\"",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe width of the button.\n",
                    "description": "<p>The width of the button.</p>\n",
                    "line": 129,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for when the button is clicked.\n",
                    "description": "<p>Event emitter for when the button is clicked.</p>\n",
                    "line": 134,
                    "type": "EventEmitter<MouseEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "colorsHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColorsHelper",
                    "optional": false,
                    "description": "- The ColorsHelper service for color manipulation.",
                    "line": 151,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "doHoverAction",
                    "defaultValue": "useMemo((type: 'text' | 'background' | 'border') => {\r\n    if (this.validatePresetColors()) {\r\n      return ''\r\n    }\r\n\r\n    switch (type) {\r\n      case 'text':\r\n        return this.doHoverOnText()\r\n      case 'background':\r\n        return this.doHoverOnBackground()\r\n      case 'border':\r\n        return this.doHoverOnBorder()\r\n      default:\r\n        return ''\r\n    }\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Performs hover-specific actions based on the type (text, background, border).</p>\n",
                    "line": 210,
                    "rawdescription": "\n\nPerforms hover-specific actions based on the type (text, background, border).\n",
                    "jsdoctags": [
                        {
                            "pos": 4960,
                            "end": 5006,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 4961,
                                "end": 4966,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The type of hover action.</li>\n</ul>\n",
                            "name": {
                                "pos": 4967,
                                "end": 4971,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "isNameFirst": true,
                            "isBracketed": false
                        },
                        {
                            "pos": 5006,
                            "end": 5053,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 5007,
                                "end": 5014,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The resulting hover action value.</p>\n"
                        }
                    ]
                },
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "- The ElementRef representing the button element.",
                    "line": 151,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "hover",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the mouse is hovering over the button.</p>\n",
                    "line": 144,
                    "rawdescription": "\n\nIndicates whether the mouse is hovering over the button.\n"
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>The native element of the button.</p>\n",
                    "line": 139,
                    "rawdescription": "\n\nThe native element of the button.\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "doHoverOnBackground",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the background color when hovering.\n",
                    "description": "<p>Determines the background color when hovering.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4400,
                                "end": 4407,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The background color when hovering.</p>\n"
                        }
                    ]
                },
                {
                    "name": "doHoverOnBorder",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the border color when hovering.\n",
                    "description": "<p>Determines the border color when hovering.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4633,
                                "end": 4640,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The border color when hovering.</p>\n"
                        }
                    ]
                },
                {
                    "name": "doHoverOnText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the text color when hovering.\n",
                    "description": "<p>Determines the text color when hovering.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4169,
                                "end": 4176,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The text color when hovering.</p>\n"
                        }
                    ]
                },
                {
                    "name": "executeFunction",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 262,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExecutes a function when the button is clicked.\n",
                    "description": "<p>Executes a function when the button is clicked.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6611,
                                "end": 6616,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6605,
                                "end": 6610,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The MouseEvent associated with the click event.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "setHover",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 232,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the hover color.\n",
                    "description": "<p>Sets the hover color.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5501,
                                "end": 5506,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "color"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5495,
                                "end": 5500,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The color to apply the hover effect.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 5553,
                                "end": 5560,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The color with the hover effect applied.</p>\n"
                        }
                    ]
                },
                {
                    "name": "setHoverBg",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 240,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the hover background color.\n",
                    "description": "<p>Sets the hover background color.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 5800,
                                "end": 5807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The background color with the hover effect applied.</p>\n"
                        }
                    ]
                },
                {
                    "name": "setHoverText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the hover text color.\n",
                    "description": "<p>Sets the hover text color.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 6194,
                                "end": 6201,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The text color with the hover effect applied.</p>\n"
                        }
                    ]
                },
                {
                    "name": "validatePresetColors",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates if the preset colors are set correctly.\n",
                    "description": "<p>Validates if the preset colors are set correctly.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3687,
                                "end": 3694,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the color is set correctly; otherwise, false.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents the SqButtonComponent, a customizable button component.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/button%7D\">https://css.squidit.com.br/components/button}</a></p>\n<br>\n<button type=\"button\" class='button button-pink mb-3'>Click Me</button>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-button type=&quot;button&quot; color=&quot;pink&quot; [loading]=&quot;false&quot; (emitClick)=&quot;onClick($event)&quot;&gt;\n  Click Me\n&lt;/sq-button&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents the SqButtonComponent, a customizable button component.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/button}\n\n<br>\n<button type=\"button\" class='button button-pink mb-3'>Click Me</button>\n\n```html\n<sq-button type=\"button\" color=\"pink\" [loading]=\"false\" (emitClick)=\"onClick($event)\">\n  Click Me\n</sq-button>\n```",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core'\r\nimport { ColorsHelper } from '../../helpers/colors.helper'\r\nimport { useMemo } from '../../helpers/memo.helper'\r\n\r\n/**\r\n * Represents the SqButtonComponent, a customizable button component.\r\n * \r\n * Look the link about the component in original framework and the appearance\r\n * \r\n * @see {@link https://css.squidit.com.br/components/button}\r\n * \r\n * <br>\r\n * <button type=\"button\" class='button button-pink mb-3'>Click Me</button>\r\n * \r\n * @example\r\n * <sq-button type=\"button\" color=\"pink\" [loading]=\"false\" (emitClick)=\"onClick($event)\">\r\n *   Click Me\r\n * </sq-button>\r\n */\r\n@Component({\r\n  selector: 'sq-button',\r\n  templateUrl: './sq-button.component.html',\r\n  styleUrls: ['./sq-button.component.scss'],\r\n})\r\nexport class SqButtonComponent {\r\n  /**\r\n   * The type of the button (e.g., 'button', 'submit', 'reset').\r\n   */\r\n  @Input() type: 'submit' | 'reset' | 'button' = 'button'\r\n\r\n  /**\r\n   * The background color of the button.\r\n   */\r\n  @Input() color = 'pink'\r\n\r\n  /**\r\n   * The text color of the button.\r\n   */\r\n  @Input() textColor = ''\r\n\r\n  /**\r\n   * The border color of the button.\r\n   */\r\n  @Input() borderColor = ''\r\n\r\n  /**\r\n   * The border style of the button.\r\n   */\r\n  @Input() borderStyle = ''\r\n\r\n  /**\r\n   * The text transformation of the button text (e.g., 'uppercase', 'lowercase').\r\n   */\r\n  @Input() textTransform = ''\r\n\r\n  /**\r\n   * The width of the button border.\r\n   */\r\n  @Input() borderWidth = ''\r\n\r\n  /**\r\n   * The border radius of the button.\r\n   */\r\n  @Input() borderRadius = ''\r\n\r\n  /**\r\n   * The size of the button ('sm', 'md', 'lg', 'xl').\r\n   */\r\n  @Input() size: 'sm' | 'md' | 'lg' | 'xl' = 'md'\r\n\r\n  /**\r\n   * The font size of the button.\r\n   */\r\n  @Input() fontSize?: string\r\n\r\n  /**\r\n   * Indicates whether the button is in a loading state.\r\n   */\r\n  @Input() loading?: boolean\r\n\r\n  /**\r\n   * Indicates whether the button is disabled.\r\n   */\r\n  @Input() disabled?: boolean\r\n\r\n  /**\r\n   * Indicates whether the button should occupy the full width of its container.\r\n   */\r\n  @Input() block?: boolean\r\n\r\n  /**\r\n   * Indicates whether to remove padding from the button.\r\n   */\r\n  @Input() noPadding?: boolean\r\n\r\n  /**\r\n   * The ID attribute of the button.\r\n   */\r\n  @Input() id?: string\r\n\r\n  /**\r\n   * Indicates whether the button should be styled as a link.\r\n   */\r\n  @Input() buttonAsLink?: boolean\r\n\r\n  /**\r\n   * Indicates whether the button should be hidden during the loading state.\r\n   */\r\n  @Input() hideOnLoading?: boolean\r\n\r\n  /**\r\n   * Indicates whether the button should have inverted hover colors.\r\n   */\r\n  @Input() invertedHover = false\r\n\r\n  /**\r\n   * Indicates whether the button text should have no underline.\r\n   */\r\n  @Input() noUnderline?: boolean\r\n\r\n  /**\r\n   * The box shadow of the button.\r\n   */\r\n  @Input() boxShadow?: string\r\n\r\n  /**\r\n   * The width of the button.\r\n   */\r\n  @Input() width?: string\r\n\r\n  /**\r\n   * Event emitter for when the button is clicked.\r\n   */\r\n  @Output() emitClick: EventEmitter<MouseEvent> = new EventEmitter()\r\n\r\n  /**\r\n   * The native element of the button.\r\n   */\r\n  nativeElement: ElementRef\r\n\r\n  /**\r\n   * Indicates whether the mouse is hovering over the button.\r\n   */\r\n  hover = false\r\n\r\n  /**\r\n   * Constructor for the SqButtonComponent class.\r\n   * @param element - The ElementRef representing the button element.\r\n   * @param colorsHelper - The ColorsHelper service for color manipulation.\r\n   */\r\n  constructor(public element: ElementRef, public colorsHelper: ColorsHelper) {\r\n    this.nativeElement = element.nativeElement\r\n  }\r\n\r\n  /**\r\n   * Validates if the preset colors are set correctly.\r\n   * @returns True if the color is set correctly; otherwise, false.\r\n   */\r\n  validatePresetColors() {\r\n    if (\r\n      !this.color.startsWith('var(--') &&\r\n      !this.color.startsWith('#') &&\r\n      !this.color.startsWith('rgb') &&\r\n      !this.color.startsWith('hsl') &&\r\n      !this.color.startsWith('transparent')\r\n    ) {\r\n      return !!this.colorsHelper?.getCssVariableValue(this.color)\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Determines the text color when hovering.\r\n   * @returns The text color when hovering.\r\n   */\r\n  doHoverOnText() {\r\n    if (this.hover) {\r\n      return this.setHoverText()\r\n    }\r\n    return this.textColor\r\n  }\r\n\r\n  /**\r\n   * Determines the background color when hovering.\r\n   * @returns The background color when hovering.\r\n   */\r\n  doHoverOnBackground() {\r\n    if (this.hover) {\r\n      return this.setHoverBg()\r\n    }\r\n    return this.color\r\n  }\r\n\r\n  /**\r\n   * Determines the border color when hovering.\r\n   * @returns The border color when hovering.\r\n   */\r\n  doHoverOnBorder() {\r\n    if (this.hover) {\r\n      return this.setHover(this.borderColor || this.textColor || '')\r\n    }\r\n    return this.borderColor || this.textColor || ''\r\n  }\r\n\r\n  /**\r\n   * Performs hover-specific actions based on the type (text, background, border).\r\n   * @param type - The type of hover action.\r\n   * @returns The resulting hover action value.\r\n   */\r\n  doHoverAction = useMemo((type: 'text' | 'background' | 'border') => {\r\n    if (this.validatePresetColors()) {\r\n      return ''\r\n    }\r\n\r\n    switch (type) {\r\n      case 'text':\r\n        return this.doHoverOnText()\r\n      case 'background':\r\n        return this.doHoverOnBackground()\r\n      case 'border':\r\n        return this.doHoverOnBorder()\r\n      default:\r\n        return ''\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Sets the hover color.\r\n   * @param color - The color to apply the hover effect.\r\n   * @returns The color with the hover effect applied.\r\n   */\r\n  setHover(color: string) {\r\n    return this.colorsHelper?.lightenDarkenColor(this.colorsHelper?.getCssVariableValue(color), -25)\r\n  }\r\n\r\n  /**\r\n   * Sets the hover background color.\r\n   * @returns The background color with the hover effect applied.\r\n   */\r\n  setHoverBg() {\r\n    if (this.invertedHover) {\r\n      return this.setHover(this.textColor !== 'transparent' ? this.textColor || '' : 'var(--text_color)')\r\n    }\r\n    return this.setHover(this.color !== 'transparent' ? this.color : 'var(--color_bg_button_inverse-hover)')\r\n  }\r\n\r\n  /**\r\n   * Sets the hover text color.\r\n   * @returns The text color with the hover effect applied.\r\n   */\r\n  setHoverText() {\r\n    if (this.invertedHover) {\r\n      return this.setHover(this.color !== 'transparent' ? this.color : 'var(--color_bg_button_inverse-hover)')\r\n    }\r\n    return this.setHover(this.textColor !== 'transparent' ? this.textColor || '' : 'var(--text_color)')\r\n  }\r\n\r\n  /**\r\n   * Executes a function when the button is clicked.\r\n   * @param event - The MouseEvent associated with the click event.\r\n   */\r\n  executeFunction(event: MouseEvent) {\r\n    const { loading, disabled } = this\r\n    if (!loading && !disabled) {\r\n      this.emitClick.emit(event)\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\r\n  &.p-0 {\r\n    padding: 0;\r\n  }\r\n  &.block {\r\n    width: 100%;\r\n  }\r\n  &.button-as-link {\r\n    border-style: none !important;\r\n    background-color: transparent !important;\r\n    text-decoration: underline;\r\n    color: initial !important;\r\n    white-space: nowrap;\r\n    text-transform: none;\r\n  }\r\n  &.no-underline {\r\n    text-decoration: none;\r\n  }\r\n}\r\n",
                    "styleUrl": "./sq-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructor for the SqButtonComponent class.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "colorsHelper",
                        "type": "ColorsHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 144,
                "rawdescription": "\n\nConstructor for the SqButtonComponent class.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 3340,
                            "end": 3347,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3334,
                            "end": 3339,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ElementRef representing the button element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 3411,
                            "end": 3423,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "colorsHelper"
                        },
                        "type": "ColorsHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3405,
                            "end": 3410,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ColorsHelper service for color manipulation.</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [],
            "templateData": "<button\r\n  id=\"{{ id }}\"\r\n  class=\"button button-{{ color }} button-{{ size }}\"\r\n  [ngStyle]=\"{\r\n    'font-size': fontSize,\r\n    color: doHoverAction('text'),\r\n    'background-color': doHoverAction('background'),\r\n    'border-color': doHoverAction('border'),\r\n    'border-style': borderStyle,\r\n    'border-radius': borderRadius,\r\n    'border-width': borderWidth,\r\n    'box-shadow': boxShadow,\r\n    width: width,\r\n    'text-transform': textTransform\r\n  }\"\r\n  [ngClass]=\"{\r\n    disabled: disabled,\r\n    loading: loading,\r\n    block: block,\r\n    'p-0': noPadding,\r\n    'button-as-link': buttonAsLink,\r\n    'no-underline': noUnderline,\r\n    'inverted': invertedHover\r\n  }\"\r\n  [type]=\"type || 'button'\"\r\n  (click)=\"executeFunction($event)\"\r\n  (mouseover)=\"hover = true\"\r\n  (mouseleave)=\"hover = false\"\r\n  [disabled]=\"disabled\"\r\n>\r\n  <ng-content *ngIf=\"!hideOnLoading || (hideOnLoading && !loading)\"></ng-content>\r\n  <sq-loader\r\n    class=\"{{ hideOnLoading ? 'hide-on-loading' : '' }}\"\r\n    *ngIf=\"loading\"\r\n    customSize=\"1rem\"\r\n    color=\"{{ textColor }}\"\r\n  ></sq-loader>\r\n</button>\r\n"
        },
        {
            "name": "SqCollapseComponent",
            "id": "component-SqCollapseComponent-eca3497928765f3eaed70ab1716644952a1d2cab82a8999d1f615eadbdc7f73b2d448ef724d42c925ae18358d75c99ffbf4d9f46a9d3f004e2b33d77011c9217",
            "file": "src/components/sq-accordion/sq-collapse/sq-collapse.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-collapse",
            "styleUrls": [
                "./sq-collapse.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-collapse.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class to be applied to the collapse component.\n",
                    "description": "<p>Custom CSS class to be applied to the collapse component.</p>\n",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color scheme of the collapse component.\n",
                    "description": "<p>The color scheme of the collapse component.</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "colorBackgroundIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the collapse icon.\n",
                    "description": "<p>The background color of the collapse icon.</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "colorIcons",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color of the collapse icons.\n",
                    "description": "<p>The color of the collapse icons.</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the collapse is disabled.\n",
                    "description": "<p>Indicates whether the collapse is disabled.</p>\n",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontSizeIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe font size of the collapse icon.\n",
                    "description": "<p>The font size of the collapse icon.</p>\n",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "heightIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe height of the collapse icon.\n",
                    "description": "<p>The height of the collapse icon.</p>\n",
                    "line": 64,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the collapse is in a loading state.\n",
                    "description": "<p>Indicates whether the collapse is in a loading state.</p>\n",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "noPadding",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to remove padding from the collapse content.\n",
                    "description": "<p>Indicates whether to remove padding from the collapse content.</p>\n",
                    "line": 74,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the collapse is initially open.\n",
                    "description": "<p>Indicates whether the collapse is initially open.</p>\n",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "openedEmitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for when the collapse is opened or closed.\n",
                    "description": "<p>Event emitter for when the collapse is opened or closed.</p>\n",
                    "line": 79,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "colorsHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColorsHelper",
                    "optional": false,
                    "description": "- The ColorsHelper instance",
                    "line": 129,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": true,
                    "description": "<p>Reference to the content element.</p>\n",
                    "line": 98,
                    "rawdescription": "\n\nReference to the content element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'content'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": true,
                    "description": "<p>Reference to the element.</p>\n",
                    "line": 93,
                    "rawdescription": "\n\nReference to the element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'element'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "headerTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to the header content template.</p>\n",
                    "line": 88,
                    "rawdescription": "\n\nReference to the header content template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'header'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "hoverHeader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the mouse is hovering over the header.</p>\n",
                    "line": 113,
                    "rawdescription": "\n\nIndicates whether the mouse is hovering over the header.\n"
                },
                {
                    "name": "hoverIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the mouse is hovering over the collapse icon.</p>\n",
                    "line": 118,
                    "rawdescription": "\n\nIndicates whether the mouse is hovering over the collapse icon.\n"
                },
                {
                    "name": "opening",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Indicates whether the collapse is in the process of opening.</p>\n",
                    "line": 108,
                    "rawdescription": "\n\nIndicates whether the collapse is in the process of opening.\n"
                },
                {
                    "name": "setHover",
                    "defaultValue": "useMemo((color: string) => {\r\n    return this.colorsHelper?.lightenDarkenColor(this.colorsHelper?.getCssVariableValue(color), -25)\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Sets the hover state for a given color.</p>\n",
                    "line": 161,
                    "rawdescription": "\n\nSets the hover state for a given color.\n",
                    "jsdoctags": [
                        {
                            "pos": 3857,
                            "end": 3922,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 3858,
                                "end": 3863,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The color for which to set the hover state.</li>\n</ul>\n",
                            "name": {
                                "pos": 3864,
                                "end": 3869,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "color"
                            },
                            "isNameFirst": true,
                            "isBracketed": false
                        },
                        {
                            "pos": 3922,
                            "end": 3955,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 3923,
                                "end": 3930,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The modified color.</p>\n"
                        }
                    ]
                },
                {
                    "name": "timeout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout handler to open animation</p>\n",
                    "line": 123,
                    "rawdescription": "\n\nTimeout handler to open animation\n"
                },
                {
                    "name": "wrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": true,
                    "description": "<p>Wrapper body element.</p>\n",
                    "line": 103,
                    "rawdescription": "\n\nWrapper body element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wrapper'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits an event when the collapse is opened or closed.\n",
                    "description": "<p>Emits an event when the collapse is opened or closed.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3609,
                                "end": 3616,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "element"
                            },
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3603,
                                "end": 3608,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The HTML element associated with the collapse.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "toggleCollapse",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggles the state of the collapse component.\n",
                    "description": "<p>Toggles the state of the collapse component.</p>\n",
                    "modifierKind": [
                        125,
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents the SqCollapseComponent, a collapsible container component with customizable options.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/accordion-collapse%7D\">https://css.squidit.com.br/components/accordion-collapse}</a></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-collapse [open]=&quot;true&quot; color=&quot;blue&quot; (openedEmitter)=&quot;onOpened($event)&quot;&gt;\n  &lt;ng-container header&gt;\n    &lt;div&gt;Header Content&lt;/div&gt;\n  &lt;/ng-container&gt;\n  &lt;div&gt;Body Content&lt;/div&gt;\n&lt;/sq-collapse&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents the SqCollapseComponent, a collapsible container component with customizable options.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/accordion-collapse}\n\n```html\n<sq-collapse [open]=\"true\" color=\"blue\" (openedEmitter)=\"onOpened($event)\">\n  <ng-container header>\n    <div>Header Content</div>\n  </ng-container>\n  <div>Body Content</div>\n</sq-collapse>\n```",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core'\r\nimport { ColorsHelper } from '../../../helpers/colors.helper'\r\nimport { useMemo } from '../../../helpers/memo.helper'\r\n\r\n/**\r\n * Represents the SqCollapseComponent, a collapsible container component with customizable options.\r\n *\r\n * Look the link about the component in original framework and the appearance\r\n * \r\n * @see {@link https://css.squidit.com.br/components/accordion-collapse}\r\n * \r\n * @example\r\n * <sq-collapse [open]=\"true\" color=\"blue\" (openedEmitter)=\"onOpened($event)\">\r\n *   <ng-container header>\r\n *     <div>Header Content</div>\r\n *   </ng-container>\r\n *   <div>Body Content</div>\r\n * </sq-collapse>\r\n */\r\n@Component({\r\n  selector: 'sq-collapse',\r\n  templateUrl: './sq-collapse.component.html',\r\n  styleUrls: ['./sq-collapse.component.scss'],\r\n})\r\nexport class SqCollapseComponent {\r\n  /**\r\n   * Indicates whether the collapse is initially open.\r\n   */\r\n  @Input() open = false\r\n\r\n  /**\r\n   * Indicates whether the collapse is in a loading state.\r\n   */\r\n  @Input() loading?: boolean\r\n\r\n  /**\r\n   * Indicates whether the collapse is disabled.\r\n   */\r\n  @Input() disabled?: boolean\r\n\r\n  /**\r\n   * The color scheme of the collapse component.\r\n   */\r\n  @Input() color = ''\r\n\r\n  /**\r\n   * The color of the collapse icons.\r\n   */\r\n  @Input() colorIcons = ''\r\n\r\n  /**\r\n   * The background color of the collapse icon.\r\n   */\r\n  @Input() colorBackgroundIcon = ''\r\n\r\n  /**\r\n   * The font size of the collapse icon.\r\n   */\r\n  @Input() fontSizeIcon?: string\r\n\r\n  /**\r\n   * The height of the collapse icon.\r\n   */\r\n  @Input() heightIcon?: string\r\n\r\n  /**\r\n   * Custom CSS class to be applied to the collapse component.\r\n   */\r\n  @Input() class = ''\r\n\r\n  /**\r\n   * Indicates whether to remove padding from the collapse content.\r\n   */\r\n  @Input() noPadding = false\r\n\r\n  /**\r\n   * Event emitter for when the collapse is opened or closed.\r\n   */\r\n  @Output() openedEmitter: EventEmitter<{\r\n    open: boolean;\r\n    element: HTMLElement | ElementRef<any> | null;\r\n  }> = new EventEmitter()\r\n\r\n  /**\r\n   * Reference to the header content template.\r\n   */\r\n  @ContentChild('header')\r\n  headerTemplate: TemplateRef<HTMLElement> | null = null\r\n\r\n  /**\r\n   * Reference to the element.\r\n   */\r\n  @ViewChild('element') element?: ElementRef\r\n\r\n  /**\r\n   * Reference to the content element.\r\n   */\r\n  @ViewChild('content') content?: ElementRef\r\n\r\n  /**\r\n   * Wrapper body element.\r\n   */\r\n  @ViewChild('wrapper') wrapper?: ElementRef\r\n\r\n  /**\r\n   * Indicates whether the collapse is in the process of opening.\r\n   */\r\n  opening: boolean | string = false\r\n\r\n  /**\r\n   * Indicates whether the mouse is hovering over the header.\r\n   */\r\n  hoverHeader = false\r\n\r\n  /**\r\n   * Indicates whether the mouse is hovering over the collapse icon.\r\n   */\r\n  hoverIcon = false\r\n\r\n  /**\r\n   * Timeout handler to open animation\r\n   */\r\n  timeout!: ReturnType<typeof setTimeout>\r\n\r\n  /**\r\n   * Component Constructor\r\n   * @param colorsHelper - The ColorsHelper instance\r\n   */\r\n  constructor(public colorsHelper: ColorsHelper) { }\r\n\r\n  /**\r\n   * Toggles the state of the collapse component.\r\n   */\r\n  public async toggleCollapse() {\r\n    if (!this.disabled && !this.loading && !this.opening) {\r\n      this.opening = this.wrapper?.nativeElement?.clientHeight + 'px'\r\n      clearTimeout(this.timeout)\r\n      this.timeout = setTimeout(() => {\r\n        this.opening = false\r\n        this.open = !this.open\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emits an event when the collapse is opened or closed.\r\n   * @param element - The HTML element associated with the collapse.\r\n   */\r\n  emit(element: HTMLElement): void {\r\n    this.openedEmitter.emit({\r\n      open: !this.open,\r\n      element,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sets the hover state for a given color.\r\n   * @param color - The color for which to set the hover state.\r\n   * @returns The modified color.\r\n   */\r\n  setHover = useMemo((color: string) => {\r\n    return this.colorsHelper?.lightenDarkenColor(this.colorsHelper?.getCssVariableValue(color), -25)\r\n  })\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-collapse {\r\n  display: block;\r\n  margin: 0.35rem auto;\r\n  .header-collapse {\r\n    display: flex;\r\n    align-items: stretch;\r\n    border-radius: 5px;\r\n    padding: 0.7rem 1.1rem;\r\n    background: var(--lilac_light);\r\n    transition: var(--transition);\r\n    &:hover,\r\n    &:focus {\r\n      background: var(--cian);\r\n    }\r\n    &.p-0 {\r\n      padding: 0;\r\n    }\r\n    span.html {\r\n      cursor: pointer;\r\n      display: inline-block;\r\n      width: calc(100% - 50px);\r\n      font-size: 1.1rem;\r\n      font-weight: 300;\r\n      transition: var(--transition);\r\n      margin: 0 1.1rem 0 0;\r\n      line-height: 25px;\r\n    }\r\n    .wrapper-icons {\r\n      cursor: pointer;\r\n      padding: 0;\r\n      margin: 0;\r\n      font-size: 1.1rem;\r\n      width: 45px;\r\n      height: 25px;\r\n      line-height: 25px;\r\n      transition: var(--transition);\r\n      position: relative;\r\n      overflow: hidden;\r\n      border-radius: 5px;\r\n      .icon {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        transition: var(--transition);\r\n        &.spinner-border {\r\n          color: inherit;\r\n          position: relative;\r\n          top: -3px;\r\n          width: 17px;\r\n          height: 17px;\r\n        }\r\n      }\r\n    }\r\n    &.disabled,\r\n    &.disabled:hover,\r\n    &.disabled:focus {\r\n      color: var(--color_text-icon_neutral_disabled) !important;\r\n      border-color: var(--color_border_input_disabled) !important;\r\n      background: var(--color_bg_input_disabled) !important;\r\n      span.html {\r\n        cursor: not-allowed;\r\n        color: var(--color_text-icon_neutral_disabled) !important;\r\n      }\r\n      .wrapper-icons {\r\n        cursor: not-allowed;\r\n        background: var(--color_bg_input_disabled) !important;\r\n      }\r\n    }\r\n    sq-loader {\r\n      display: inline-block;\r\n    }\r\n    &.loading {\r\n      .wrapper-icons,\r\n      span.html {\r\n        cursor: wait;\r\n      }\r\n    }\r\n    &.not-header {\r\n      width: 100%;\r\n      padding: 0.35rem;\r\n      display: inline-block;\r\n      text-align: center;\r\n      span.html {\r\n        width: calc(100% - 50px);\r\n      }\r\n      .wrapper-icons {\r\n        line-height: 35px;\r\n      }\r\n    }\r\n  }\r\n  .content {\r\n    border-radius: 5px;\r\n    margin: 0;\r\n    transition: all 0.5s ease;\r\n    height: 0;\r\n    overflow: hidden;\r\n    visibility: hidden;\r\n    position: relative;\r\n    &.opening {\r\n      visibility: visible;\r\n      margin: 0 auto;\r\n    }\r\n    &.open {\r\n      margin: 0 auto;\r\n      height: auto;\r\n      visibility: visible;\r\n      overflow-y: auto;\r\n    }\r\n    &.loading,\r\n    &.disabled {\r\n      height: 0 !important;\r\n      max-height: 0;\r\n      opacity: 0;\r\n      margin: 0;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./sq-collapse.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Component Constructor</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "colorsHelper",
                        "type": "ColorsHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 123,
                "rawdescription": "\n\nComponent Constructor\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 3027,
                            "end": 3039,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "colorsHelper"
                        },
                        "type": "ColorsHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3021,
                            "end": 3026,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ColorsHelper instance</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [],
            "templateData": "<div [class]=\"'wrapper-collapse ' + class\">\r\n  <header\r\n    #element\r\n    (click)=\"emit(element); toggleCollapse()\"\r\n    class=\"header-collapse\"\r\n    [ngStyle]=\"{\r\n      'background-color': hoverHeader ? setHover(color) : color,\r\n      'border-color': hoverHeader ? setHover(color) : color,\r\n    }\"\r\n    [ngClass]=\"{\r\n      disabled: disabled,\r\n      loading: loading,\r\n      'not-header': !headerTemplate,\r\n      opened: open,\r\n      'p-0': noPadding\r\n    }\"\r\n    (mouseover)=\"hoverHeader = true\"\r\n    (mouseleave)=\"hoverHeader = false\"\r\n  >\r\n    <span class=\"html\" *ngIf=\"headerTemplate\">\r\n      <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n    </span>\r\n    <div\r\n      class=\"wrapper-icons\"\r\n      [ngStyle]=\"{\r\n        color: colorIcons,\r\n        'background-color': hoverIcon ? setHover(colorBackgroundIcon) : colorBackgroundIcon,\r\n        'font-size': fontSizeIcon,\r\n        height: heightIcon,\r\n        'line-height': heightIcon\r\n      }\"\r\n      (mouseover)=\"hoverIcon = true\"\r\n      (mouseleave)=\"hoverIcon = false\"\r\n    >\r\n      <i\r\n        class=\"fa-solid fa-chevron-down icon\"\r\n        [ngClass]=\"{\r\n          'fa-rotate-180': !disabled && open\r\n        }\"\r\n        *ngIf=\"!loading\"\r\n      ></i>\r\n      <div *ngIf=\"loading\" class=\"display-flex justify-content-center align-items-center\" style=\"height: 100%\">\r\n        <sq-loader color=\"inherit\"></sq-loader>\r\n      </div>\r\n    </div>\r\n  </header>\r\n  <div\r\n    class=\"content animated scrollbar\"\r\n    [ngClass]=\"{\r\n      open: open && !disabled && !loading,\r\n      disabled: disabled,\r\n      loading: loading,\r\n      opening: opening\r\n    }\"\r\n    [ngStyle]=\"{\r\n      height: this.opening ? this.opening : null\r\n    }\"\r\n    #content\r\n  >\r\n    <div #wrapper>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SqCountdownComponent",
            "id": "component-SqCountdownComponent-dd72aa5b87afb78cbd1da69d9cfadbc0c42e3a32d7132b23aaa7878b38019ba060b25071423834df5c7ae4a8da410680885d050375617b69dcf94810ea07f9a6",
            "file": "src/components/sq-countdown/sq-countdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-countdown",
            "styleUrls": [
                "./sq-countdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-countdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "format",
                    "defaultValue": "'mm:ss'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormats a date value, pls refer to [Accepted patterns](https://angular.io/api/common/DatePipe#usage-notes).\n",
                    "description": "<p>Formats a date value, pls refer to <a href=\"https://angular.io/api/common/DatePipe#usage-notes\">Accepted patterns</a>.</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftTime",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStarting time to countdown (e.g., 5.5, 30) (Unit: seconds).\n",
                    "description": "<p>Starting time to countdown (e.g., 5.5, 30) (Unit: seconds).</p>\n",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "notify",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShould be trigger type `notify` event on the x second. When values is `0` will be trigger every time.\n",
                    "description": "<p>Should be trigger type <code>notify</code> event on the x second. When values is <code>0</code> will be trigger every time.</p>\n",
                    "line": 42,
                    "type": "number[] | number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "doneEmitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for when the countdown ends.\n",
                    "description": "<p>Event emitter for when the countdown ends.</p>\n",
                    "line": 57,
                    "type": "EventEmitter<ReturnEvent>"
                },
                {
                    "name": "notifyEmitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for when the count reaches the input notify times.\n",
                    "description": "<p>Event emitter for when the count reaches the input notify times.</p>\n",
                    "line": 52,
                    "type": "EventEmitter<ReturnEvent>"
                },
                {
                    "name": "startEmitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for when the countdown starts.\n",
                    "description": "<p>Event emitter for when the countdown starts.</p>\n",
                    "line": 47,
                    "type": "EventEmitter<ReturnEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "eventMap",
                    "args": [
                        {
                            "name": "event",
                            "type": "CountdownEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMap the CountdownEvents to emit startEmitter, notifyEmitter or doneEmitter.\n",
                    "description": "<p>Map the CountdownEvents to emit startEmitter, notifyEmitter or doneEmitter.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1617,
                                "end": 1622,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "CountdownEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1611,
                                "end": 1616,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The event associated with the CountdownEvents.</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CountdownComponent",
                    "type": "component"
                }
            ],
            "description": "<p>Represents the SqCountdownComponent, a component for countdown.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-countdown [leftTime]=&quot;10&quot;&gt;&lt;/sq-countdown&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents the SqCountdownComponent, a component for countdown.\n\n```html\n<sq-countdown [leftTime]=\"10\"></sq-countdown>\n```",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core'\nimport { CountdownComponent, CountdownEvent } from 'ngx-countdown'\n\n/**\n * Interface for the return event os emitters.\n * @interface\n */\ninterface ReturnEvent {\n  /**\n   * The time left in the countdown.\n   */\n  left: number\n}\n\n/**\n * Represents the SqCountdownComponent, a component for countdown.\n * \n * @example\n * <sq-countdown [leftTime]=\"10\"></sq-countdown>\n */\n@Component({\n  selector: 'sq-countdown',\n  templateUrl: './sq-countdown.component.html',\n  styleUrls: ['./sq-countdown.component.scss'],\n  standalone: true,\n  imports: [CountdownComponent],\n})\nexport class SqCountdownComponent {\n  /**\n   * Starting time to countdown (e.g., 5.5, 30) (Unit: seconds).\n   */\n  @Input() leftTime = 10\n\n  /**\n   * Formats a date value, pls refer to [Accepted patterns](https://angular.io/api/common/DatePipe#usage-notes).\n   */\n  @Input() format?: string = 'mm:ss'\n\n  /**\n   * Should be trigger type `notify` event on the x second. When values is `0` will be trigger every time.\n   */\n  @Input() notify?: number[] | number\n\n  /**\n   * Event emitter for when the countdown starts.\n   */\n  @Output() startEmitter: EventEmitter<ReturnEvent> = new EventEmitter()\n\n  /**\n   * Event emitter for when the count reaches the input notify times.\n   */\n  @Output() notifyEmitter: EventEmitter<ReturnEvent> = new EventEmitter()\n\n  /**\n   * Event emitter for when the countdown ends.\n   */\n  @Output() doneEmitter: EventEmitter<ReturnEvent> = new EventEmitter()\n\n  /**\n   * Map the CountdownEvents to emit startEmitter, notifyEmitter or doneEmitter.\n   * @param event - The event associated with the CountdownEvents.\n   */\n  eventMap(event: CountdownEvent) {\n    const action = event.action as \"start\" | \"notify\" | \"done\"\n    if (action && this[`${action}Emitter`]) {\n      const returnEvent: ReturnEvent = {\n        left: event.left\n      }\n      this[`${action}Emitter`].emit(returnEvent)\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep {\n  sq-countdown {\n    min-width: min-content;\n    countdown.count-down {\n      span {\n        color: var(--text_color);\n      }\n    }\n  }\n}",
                    "styleUrl": "./sq-countdown.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<countdown \n  [config]=\"{\n    leftTime: leftTime, \n    format: format, \n    notify: notify\n  }\" \n  (event)=\"eventMap($event)\"\n/>"
        },
        {
            "name": "SqInfinityComponent",
            "id": "component-SqInfinityComponent-2a1d5e2b35229212d1fd1bfb91555709697cf137a64fa2e39ad7f74626bfd0717f417241a37aff79d98092faecfc879a5bc427b58b3cf2e58d045c2fec4c15f8",
            "file": "src/components/sq-infinity-scroll/sq-infinity-scroll.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-infinity-scroll",
            "styleUrls": [
                "./sq-infinity-scroll.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-infinity-scroll.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "elementToScrollId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe ID of the element to scroll (if using a custom scrolling element).\n",
                    "description": "<p>The ID of the element to scroll (if using a custom scrolling element).</p>\n",
                    "line": 56,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "endMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe message to display when reaching the end of the list.\n",
                    "description": "<p>The message to display when reaching the end of the list.</p>\n",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hasMore",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether there are more items to load.\n",
                    "description": "<p>Indicates whether there are more items to load.</p>\n",
                    "line": 41,
                    "type": "boolean | string",
                    "decorators": []
                },
                {
                    "name": "length",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe total number of items in the list.\n",
                    "description": "<p>The total number of items in the list.</p>\n",
                    "line": 31,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "loaderColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color of the loader.\n",
                    "description": "<p>The color of the loader.</p>\n",
                    "line": 51,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether data is currently being loaded.\n",
                    "description": "<p>Indicates whether data is currently being loaded.</p>\n",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "scrolledEmitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for when the user scrolls to trigger loading more items.\n",
                    "description": "<p>Event emitter for when the user scrolls to trigger loading more items.</p>\n",
                    "line": 61,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "document",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Document",
                    "optional": false,
                    "description": "<p>Reference to the Document object for interacting with the DOM.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nReference to the Document object for interacting with the DOM.\n"
                },
                {
                    "name": "documentImported",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Document",
                    "optional": false,
                    "description": "Reference to the Document object for interacting with the DOM.",
                    "line": 79,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DOCUMENT"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "elementToScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null | ",
                    "optional": true,
                    "description": "<p>Element that have the scroll listener</p>\n",
                    "line": 66,
                    "rawdescription": "\n\nElement that have the scroll listener\n"
                },
                {
                    "name": "getWindow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GetWindow",
                    "optional": false,
                    "description": "Reference to the GetWindow service for safely accessing the window object.",
                    "line": 79,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onScroll",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Handles the scroll event and triggers loading more items if applicable.</p>\n",
                    "line": 123,
                    "rawdescription": "\n\nHandles the scroll event and triggers loading more items if applicable.\n"
                },
                {
                    "name": "scrollElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": true,
                    "description": "<p>Reference to the scroll element.</p>\n",
                    "line": 26,
                    "rawdescription": "\n\nReference to the scroll element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'scroll', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPerforms actions after content has been checked.\n",
                    "description": "<p>Performs actions after content has been checked.</p>\n"
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPerforms actions after the view has been initialized.\n",
                    "description": "<p>Performs actions after the view has been initialized.</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPerforms actions before the component is destroyed.\n",
                    "description": "<p>Performs actions before the component is destroyed.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents the SqInfinityComponent, a component for infinite scrolling.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-infinity-scroll [length]=&quot;totalItems&quot; [hasMore]=&quot;hasMoreData&quot; [loading]=&quot;isLoading&quot; (scrolledEmitter)=&quot;loadMoreItems()&quot;&gt;\n   &lt;!-- Content Here --&gt;\n&lt;/sq-infinity-scroll&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents the SqInfinityComponent, a component for infinite scrolling.\n\n\n```html\n<sq-infinity-scroll [length]=\"totalItems\" [hasMore]=\"hasMoreData\" [loading]=\"isLoading\" (scrolledEmitter)=\"loadMoreItems()\">\n   <!-- Content Here -->\n</sq-infinity-scroll>\n```",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common'\r\nimport { AfterContentChecked, AfterViewInit, Component, ElementRef, EventEmitter, Inject, Input, OnDestroy, Output, ViewChild } from '@angular/core'\r\nimport { GetWindow } from '../../helpers/window.helper'\r\n\r\n/**\r\n * Represents the SqInfinityComponent, a component for infinite scrolling.\r\n *\r\n * @implements {AfterViewInit}\r\n * @implements {AfterContentChecked}\r\n * @implements {OnDestroy}\r\n *\r\n * @example\r\n * <sq-infinity-scroll [length]=\"totalItems\" [hasMore]=\"hasMoreData\" [loading]=\"isLoading\" (scrolledEmitter)=\"loadMoreItems()\">\r\n *    <!-- Content Here -->\r\n * </sq-infinity-scroll>\r\n */\r\n@Component({\r\n  selector: 'sq-infinity-scroll',\r\n  templateUrl: './sq-infinity-scroll.component.html',\r\n  styleUrls: ['./sq-infinity-scroll.component.scss']\r\n})\r\nexport class SqInfinityComponent implements AfterViewInit, AfterContentChecked, OnDestroy {\r\n  /**\r\n   * Reference to the scroll element.\r\n   */\r\n  @ViewChild('scroll', { static: true }) scrollElement?: ElementRef\r\n\r\n  /**\r\n   * The total number of items in the list.\r\n   */\r\n  @Input() length = 0\r\n\r\n  /**\r\n   * The message to display when reaching the end of the list.\r\n   */\r\n  @Input() endMessage?: string\r\n\r\n  /**\r\n   * Indicates whether there are more items to load.\r\n   */\r\n  @Input() hasMore?: boolean | string = true\r\n\r\n  /**\r\n   * Indicates whether data is currently being loaded.\r\n   */\r\n  @Input() loading?: boolean\r\n\r\n  /**\r\n   * The color of the loader.\r\n   */\r\n  @Input() loaderColor?: string\r\n\r\n  /**\r\n   * The ID of the element to scroll (if using a custom scrolling element).\r\n   */\r\n  @Input() elementToScrollId?: string\r\n\r\n  /**\r\n   * Event emitter for when the user scrolls to trigger loading more items.\r\n   */\r\n  @Output() scrolledEmitter: EventEmitter<void> = new EventEmitter()\r\n\r\n  /**\r\n   * Element that have the scroll listener\r\n   */\r\n  elementToScroll?: HTMLElement | null | Window & typeof globalThis\r\n\r\n  /**\r\n   * Reference to the Document object for interacting with the DOM.\r\n   */\r\n  document: Document\r\n\r\n  /**\r\n   * Creates an instance of SqInfinityComponent.\r\n   * @constructor\r\n   * @param {Document} documentImported Reference to the Document object for interacting with the DOM.\r\n   * @param {GetWindow} getWindow Reference to the GetWindow service for safely accessing the window object.\r\n   */\r\n  constructor(@Inject(DOCUMENT) public documentImported: Document, public getWindow: GetWindow) {\r\n    this.document = this.documentImported || document\r\n  }\r\n\r\n  /**\r\n   * Performs actions after the view has been initialized.\r\n   */\r\n  ngAfterViewInit(): void {\r\n    const { elementToScrollId } = this\r\n\r\n    if (elementToScrollId) {\r\n      this.elementToScroll = this.document.getElementById(elementToScrollId)\r\n    }\r\n\r\n    if (!elementToScrollId || !this.elementToScroll) {\r\n      this.elementToScroll = this.getWindow.window()\r\n    }\r\n    this.elementToScroll?.addEventListener('scroll', this.onScroll, false)\r\n  }\r\n\r\n  /**\r\n   * Performs actions after content has been checked.\r\n   */\r\n  ngAfterContentChecked(): void {\r\n    if (this.elementToScrollId && this.elementToScroll && this.elementToScroll instanceof HTMLElement && typeof this.elementToScroll.getAttribute === 'undefined') {\r\n      const element = this.document.getElementById(this.elementToScrollId)\r\n      if (element) {\r\n        this.elementToScroll.removeEventListener('scroll', this.onScroll, false)\r\n        element.addEventListener('scroll', this.onScroll, false)\r\n        this.elementToScroll = element\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Performs actions before the component is destroyed.\r\n   */\r\n  ngOnDestroy(): void {\r\n    this.elementToScroll?.removeEventListener('scroll', this.onScroll, false)\r\n  }\r\n\r\n  /**\r\n   * Handles the scroll event and triggers loading more items if applicable.\r\n   */\r\n  onScroll = () => {\r\n    if (!this.loading && this.length > 0 && this.hasMore) {\r\n      if (this.elementToScrollId && this.elementToScroll instanceof HTMLElement) {\r\n        const allScroll = this.elementToScroll?.scrollTop + this.elementToScroll?.scrollHeight\r\n        if (allScroll >= this.elementToScroll?.scrollHeight) {\r\n          this.elementToScroll?.removeEventListener('scroll', this.onScroll, false)\r\n          this.scrolledEmitter.emit()\r\n          this.elementToScroll?.addEventListener('scroll', this.onScroll, false)\r\n        }\r\n      } else if (this.elementToScroll instanceof Window) {\r\n        const elementHeight = this.elementToScroll?.innerHeight\r\n        const elementY = this.elementToScroll?.scrollY\r\n        if (elementHeight + elementY >= this.scrollElement?.nativeElement.offsetHeight + this.scrollElement?.nativeElement.offsetTop) {\r\n          this.elementToScroll?.removeEventListener('scroll', this.onScroll, false)\r\n          this.scrolledEmitter.emit()\r\n          this.elementToScroll?.addEventListener('scroll', this.onScroll, false)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".scroll {\r\n  width: 100%;\r\n  height: auto;\r\n  .wrapper-message {\r\n    p {\r\n      text-align: center;\r\n      font-size: 0.86rem;\r\n      margin: 1.1rem auto;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./sq-infinity-scroll.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Creates an instance of SqInfinityComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "documentImported",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getWindow",
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "rawdescription": "\n\nCreates an instance of SqInfinityComponent.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2145,
                            "end": 2161,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "documentImported"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2128,
                            "end": 2133,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Reference to the Document object for interacting with the DOM.</p>\n",
                        "typeExpression": {
                            "pos": 2134,
                            "end": 2144,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2135,
                                "end": 2143,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2135,
                                    "end": 2143,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Document"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2250,
                            "end": 2259,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "getWindow"
                        },
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2232,
                            "end": 2237,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Reference to the GetWindow service for safely accessing the window object.</p>\n",
                        "typeExpression": {
                            "pos": 2238,
                            "end": 2249,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2239,
                                "end": 2248,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2239,
                                    "end": 2248,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "GetWindow"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "AfterContentChecked",
                "OnDestroy"
            ],
            "templateData": "<div #scroll class=\"scroll\">\r\n  <ng-content></ng-content>\r\n  <div *ngIf=\"loading\" class=\"display-flex justify-content-center\">\r\n    <sq-loader color=\"{{ loaderColor }}\"></sq-loader>\r\n  </div>\r\n  <div class=\"wrapper-message\" *ngIf=\"!hasMore && endMessage\">\r\n    <p>\r\n      {{ endMessage || '' }}\r\n    </p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SqInputComponent",
            "id": "component-SqInputComponent-671a43e0e4a32bd1299aadfcecf9f542d4070443c65133610d27c394dba3279eff6350355879eed99cd003b8257e2c656a4117d615f470330599c5b2d7989121",
            "file": "src/components/sq-input/sq-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-input",
            "styleUrls": [
                "./sq-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color of the input element.\n",
                    "description": "<p>Background color of the input element.</p>\n",
                    "line": 141,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color of the input element.\n",
                    "description": "<p>Border color of the input element.</p>\n",
                    "line": 146,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for the input element.\n",
                    "description": "<p>Custom CSS class for the input element.</p>\n",
                    "line": 60,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the input element.\n",
                    "description": "<p>Flag to disable the input element.</p>\n",
                    "line": 101,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to display an error span.\n",
                    "description": "<p>Flag to display an error span.</p>\n",
                    "line": 96,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message to display.\n",
                    "description": "<p>External error message to display.</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon to display.\n",
                    "description": "<p>External icon to display.</p>\n",
                    "line": 75,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the input element.\n",
                    "description": "<p>The id attribute for the input element.</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputMode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput mode for mobile devices.\n",
                    "description": "<p>Input mode for mobile devices.</p>\n",
                    "line": 171,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn optional label for the input.\n",
                    "description": "<p>An optional label for the input.</p>\n",
                    "line": 55,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the input label.\n",
                    "description": "<p>Color of the input label.</p>\n",
                    "line": 151,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum length for the input element.\n",
                    "description": "<p>Maximum length for the input element.</p>\n",
                    "line": 161,
                    "type": "number | null",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1127,
                            "end": 1172,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1128,
                                "end": 1135,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the input element.\n\n",
                    "description": "<p>The name attribute for the input element.</p>\n",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pattern",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRegular expression pattern for input validation.\n",
                    "description": "<p>Regular expression pattern for input validation.</p>\n",
                    "line": 166,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the input element.\n",
                    "description": "<p>Placeholder text for the input element.</p>\n",
                    "line": 65,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to make the input element readonly.\n",
                    "description": "<p>Flag to make the input element readonly.</p>\n",
                    "line": 106,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to mark the input as required.\n",
                    "description": "<p>Flag to mark the input as required.</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTime in milliseconds before triggering input timeout.\n",
                    "description": "<p>Time in milliseconds before triggering input timeout.</p>\n",
                    "line": 91,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the tooltip.\n",
                    "description": "<p>Color of the tooltip.</p>\n",
                    "line": 131,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIcon for the tooltip.\n",
                    "description": "<p>Icon for the tooltip.</p>\n",
                    "line": 136,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message to display.\n",
                    "description": "<p>Tooltip message to display.</p>\n",
                    "line": 121,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlacement of the tooltip.\n",
                    "description": "<p>Placement of the tooltip.</p>\n",
                    "line": 126,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nType of the input element (e.g., text, email, password).\n",
                    "description": "<p>Type of the input element (e.g., text, email, password).</p>\n",
                    "line": 156,
                    "type": "\"text\" | \"email\" | \"hidden\" | \"password\" | \"tel\" | \"url\" | \"file\"",
                    "decorators": []
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to use form errors for validation messages.\n",
                    "description": "<p>Flag to use form errors for validation messages.</p>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe value of the input element.\n",
                    "description": "<p>The value of the input element.</p>\n",
                    "line": 81,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input focus events.\n",
                    "description": "<p>Event emitter for input focus events.</p>\n",
                    "line": 186,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "keyPressDown",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keydown events.\n",
                    "description": "<p>Event emitter for keydown events.</p>\n",
                    "line": 176,
                    "type": "EventEmitter<KeyboardEvent>"
                },
                {
                    "name": "keyPressUp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keyup events.\n",
                    "description": "<p>Event emitter for keyup events.</p>\n",
                    "line": 181,
                    "type": "EventEmitter<KeyboardEvent>"
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for validation status.\n",
                    "description": "<p>Event emitter for validation status.</p>\n",
                    "line": 191,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input value changes.\n",
                    "description": "<p>Event emitter for input value changes.</p>\n",
                    "line": 196,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The internal value of the input element.</p>\n",
                    "line": 219,
                    "rawdescription": "\n\nThe internal value of the input element.\n"
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Error message to display.</p>\n",
                    "line": 224,
                    "rawdescription": "\n\nError message to display.\n"
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 214,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a left-aligned label template.</p>\n",
                    "line": 202,
                    "rawdescription": "\n\nReference to a left-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Reference to the native element.</p>\n",
                    "line": 229,
                    "rawdescription": "\n\nReference to the native element.\n"
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 208,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 234,
                    "rawdescription": "\n\nTimeout for input changes.\n"
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- The TranslateService for internationalization (optional).",
                    "line": 245,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "validatorHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorHelper",
                    "optional": false,
                    "description": "- The ValidatorHelper service for input validation.",
                    "line": 243,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle input value changes.\n",
                    "description": "<p>Handle input value changes.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6331,
                                "end": 6336,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6325,
                                "end": 6330,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input change event.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "keyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keydown events.\n",
                    "description": "<p>Handle keydown events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7041,
                                "end": 7046,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7035,
                                "end": 7040,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keydown event.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "keyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keyup events.\n",
                    "description": "<p>Handle keyup events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7191,
                                "end": 7196,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7185,
                                "end": 7190,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyup event.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interpolateParams",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6674,
                                "end": 6677,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6659,
                                "end": 6664,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6665,
                                "end": 6673,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6666,
                                    "end": 6672,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 6735,
                                "end": 6752,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "interpolateParams"
                            },
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "pos": 6729,
                                "end": 6734,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Value to interpolate with translation.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAsynchronously validate the input value.\n",
                    "description": "<p>Asynchronously validate the input value.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5422,
                                "end": 5428,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "isBlur"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 5416,
                                "end": 5421,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Indicates if the input has lost focus.</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents the SqInputComponent, a customizable input component.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/forms/input%7D\">https://css.squidit.com.br/forms/input}</a></p>\n<br>\n<label for='id-exemple'>\n Example Input\n</label>\n<input\n  class='input mb-3'\n  name=\"name-exemple\"\n  id=\"id-exemple\"\n  placeholder=\"Enter text\"\n></input>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-input\n  [name]=&quot;&#39;name-exemple&#39;&quot;\n  [id]=&quot;&#39;id-exemple&#39;&quot;\n  [label]=&quot;&#39;Example Input&#39;&quot;\n  [placeholder]=&quot;&#39;Enter text&#39;&quot;\n  [(value)]=&quot;inputValue&quot;\n  [required]=&quot;true&quot;\n  (valueChange)=&quot;onInputChange($event)&quot;\n&gt;&lt;/sq-input&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents the SqInputComponent, a customizable input component.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/forms/input}\n\n<br>\n<label for='id-exemple'>\n Example Input\n</label>\n<input\n  class='input mb-3'\n  name=\"name-exemple\"\n  id=\"id-exemple\"\n  placeholder=\"Enter text\"\n></input>\n\n```html\n<sq-input\n  [name]=\"'name-exemple'\"\n  [id]=\"'id-exemple'\"\n  [label]=\"'Example Input'\"\n  [placeholder]=\"'Enter text'\"\n  [(value)]=\"inputValue\"\n  [required]=\"true\"\n  (valueChange)=\"onInputChange($event)\"\n></sq-input>\n```",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, EventEmitter, Input, Optional, Output, TemplateRef } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { ValidatorHelper } from '../../helpers/validator.helper'\n\n/**\n * Represents the SqInputComponent, a customizable input component.\n *\n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/forms/input}\n *\n * <br>\n * <label for='id-exemple'>\n *  Example Input\n * </label>\n * <input\n *   class='input mb-3'\n *   name=\"name-exemple\"\n *   id=\"id-exemple\"\n *   placeholder=\"Enter text\"\n * ></input>\n *\n * @example\n * <sq-input\n *   [name]=\"'name-exemple'\"\n *   [id]=\"'id-exemple'\"\n *   [label]=\"'Example Input'\"\n *   [placeholder]=\"'Enter text'\"\n *   [(value)]=\"inputValue\"\n *   [required]=\"true\"\n *   (valueChange)=\"onInputChange($event)\"\n * ></sq-input>\n */\n@Component({\n  selector: 'sq-input',\n  templateUrl: './sq-input.component.html',\n  styleUrls: ['./sq-input.component.scss']\n})\nexport class SqInputComponent {\n  /**\n   * The name attribute for the input element.\n   *\n   * @default 'random-name-[hash-random-code]'\n   */\n  @Input() name = `random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`\n\n  /**\n   * The id attribute for the input element.\n   */\n  @Input() id?: string\n\n  /**\n   * An optional label for the input.\n   */\n  @Input() label?: string\n\n  /**\n   * Custom CSS class for the input element.\n   */\n  @Input() customClass = ''\n\n  /**\n   * Placeholder text for the input element.\n   */\n  @Input() placeholder = ''\n\n  /**\n   * External error message to display.\n   */\n  @Input() externalError = ''\n\n  /**\n   * External icon to display.\n   */\n  @Input() externalIcon = ''\n\n  /**\n   * The value of the input element.\n   */\n  @Input()\n  public set value(value: any) {\n    this._value = value\n  }\n  public get value(): any {\n    return this._value\n  }\n\n  /**\n   * Time in milliseconds before triggering input timeout.\n   */\n  @Input() timeToChange = 0\n\n  /**\n   * Flag to display an error span.\n   */\n  @Input() errorSpan = true\n\n  /**\n   * Flag to disable the input element.\n   */\n  @Input() disabled = false\n\n  /**\n   * Flag to make the input element readonly.\n   */\n  @Input() readonly = false\n\n  /**\n   * Flag to mark the input as required.\n   */\n  @Input() required = false\n\n  /**\n   * Flag to use form errors for validation messages.\n   */\n  @Input() useFormErrors = true\n\n  /**\n   * Tooltip message to display.\n   */\n  @Input() tooltipMessage = ''\n\n  /**\n   * Placement of the tooltip.\n   */\n  @Input() tooltipPlacement: 'center top' | 'center bottom' | 'left center' | 'right center' = 'right center'\n\n  /**\n   * Color of the tooltip.\n   */\n  @Input() tooltipColor = 'inherit'\n\n  /**\n   * Icon for the tooltip.\n   */\n  @Input() tooltipIcon = ''\n\n  /**\n   * Background color of the input element.\n   */\n  @Input() backgroundColor = ''\n\n  /**\n   * Border color of the input element.\n   */\n  @Input() borderColor = ''\n\n  /**\n   * Color of the input label.\n   */\n  @Input() labelColor = ''\n\n  /**\n   * Type of the input element (e.g., text, email, password).\n   */\n  @Input() type: 'text' | 'email' | 'hidden' | 'password' | 'tel' | 'url' | 'file' = 'text'\n\n  /**\n   * Maximum length for the input element.\n   */\n  @Input() maxLength: number | null = null\n\n  /**\n   * Regular expression pattern for input validation.\n   */\n  @Input() pattern = ''\n\n  /**\n   * Input mode for mobile devices.\n   */\n  @Input() inputMode = ''\n\n  /**\n   * Event emitter for keydown events.\n   */\n  @Output() keyPressDown: EventEmitter<KeyboardEvent> = new EventEmitter()\n\n  /**\n   * Event emitter for keyup events.\n   */\n  @Output() keyPressUp: EventEmitter<KeyboardEvent> = new EventEmitter()\n\n  /**\n   * Event emitter for input focus events.\n   */\n  @Output() inFocus: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * Event emitter for validation status.\n   */\n  @Output() valid: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * Event emitter for input value changes.\n   */\n  @Output() valueChange: EventEmitter<any> = new EventEmitter()\n\n  /**\n   * Reference to a left-aligned label template.\n   */\n  @ContentChild('leftLabel')\n  leftLabel: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to a right-aligned label template.\n   */\n  @ContentChild('rightLabel')\n  rightLabel: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to a label template.\n   */\n  @ContentChild('labelTemplate')\n  labelTemplate: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * The internal value of the input element.\n   */\n  _value: any = ''\n\n  /**\n   * Error message to display.\n   */\n  error: boolean | string = false\n\n  /**\n   * Reference to the native element.\n   */\n  nativeElement: ElementRef\n\n  /**\n   * Timeout for input changes.\n   */\n  timeoutInput!: ReturnType<typeof setTimeout>\n\n  /**\n   * Constructor for the SqInputComponent class.\n   * @param validatorHelper - The ValidatorHelper service for input validation.\n   * @param element - The ElementRef representing the input element.\n   * @param translate - The TranslateService for internationalization (optional).\n   */\n  constructor(\n    public validatorHelper: ValidatorHelper,\n    element: ElementRef,\n    @Optional() public translate: TranslateService,\n  ) {\n    this.nativeElement = element.nativeElement\n  }\n\n  /**\n   * Asynchronously validate the input value.\n   * @param isBlur - Indicates if the input has lost focus.\n   */\n  async validate(isBlur = false) {\n    if (this.externalError) {\n      this.error = false\n    } else if (!!this.required && !this.value) {\n      this.valid.emit(false)\n      this.setError('forms.required')\n    } else if (this.type === 'email' && !this.validatorHelper.email(this.value)) {\n      this.valid.emit(false)\n      this.setError('forms.email')\n    } else if (this.type === 'tel' && !this.validatorHelper.phone(this.value)) {\n      this.valid.emit(false)\n      this.setError('forms.phone')\n    } else if (this.type === 'url' && this.value && this.value.length && !this.validatorHelper.url(this.value)) {\n      this.valid.emit(false)\n      this.setError('forms.url')\n    } else {\n      this.valid.emit(true)\n      this.error = ''\n    }\n\n    if (isBlur) {\n      this.inFocus.emit(false)\n    }\n  }\n\n  /**\n   * Handle input value changes.\n   * @param event - The input change event.\n   */\n  async change(event: any) {\n    this.inFocus.emit(true)\n    this.value = event\n    clearTimeout(this.timeoutInput)\n    this.timeoutInput = setTimeout(() => {\n      this.valueChange.emit(event)\n    }, this.timeToChange)\n    this.validate()\n  }\n\n  /**\n   * Sets an error message.\n   *\n   * @param {string} key - The translation key for the error message.\n   * @param interpolateParams - Value to interpolate with translation.\n   */\n  async setError(key: string, interpolateParams: Object = {}) {\n    if (this.useFormErrors && this.translate) {\n      this.error = await this.translate.instant(key, interpolateParams)\n    }\n  }\n\n  /**\n   * Handle keydown events.\n   * @param event - The keydown event.\n   */\n  keyDown(event: KeyboardEvent) {\n    this.keyPressDown.emit(event)\n  }\n\n  /**\n   * Handle keyup events.\n   * @param event - The keyup event.\n   */\n  keyUp(event: KeyboardEvent) {\n    this.keyPressUp.emit(event)\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-all-inside-input {\r\n  position: relative;\r\n  .icon {\r\n    margin: 0;\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    position: absolute;\r\n    right: 24px;\r\n    top: 40px;\r\n    &.no-label {\r\n      top: 12px;\r\n    }\r\n  }\r\n  .icon-external {\r\n    color: inherit !important;\r\n  }\r\n  .max-length-name {\r\n    font-size: inherit;\r\n    float: right;\r\n  }\r\n}\r\n",
                    "styleUrl": "./sq-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructor for the SqInputComponent class.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validatorHelper",
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 234,
                "rawdescription": "\n\nConstructor for the SqInputComponent class.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4938,
                            "end": 4953,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "validatorHelper"
                        },
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4932,
                            "end": 4937,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ValidatorHelper service for input validation.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 5018,
                            "end": 5025,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5012,
                            "end": 5017,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ElementRef representing the input element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 5087,
                            "end": 5096,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5081,
                            "end": 5086,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The TranslateService for internationalization (optional).</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 81,
                        "rawdescription": "\n\nThe value of the input element.\n",
                        "description": "<p>The value of the input element.</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "any",
                        "returnType": "any",
                        "line": 84
                    }
                }
            },
            "templateData": "<div class=\"wrapper-all-inside-input {{ customClass }}\">\r\n  <label\r\n    class=\"display-flex\"\r\n    *ngIf=\"label?.length || tooltipMessage || labelTemplate\"\r\n    [ngClass]=\"{\r\n      readonly: readonly\r\n    }\"\r\n    [for]=\"id\"\r\n  >\r\n    <div *ngIf=\"label && !labelTemplate\" [ngStyle]=\"{ 'color': labelColor }\" [innerHtml]=\"label | universalSafe\"></div>\r\n    <div *ngIf=\"labelTemplate\">\r\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\r\n    </div>\r\n    <sq-tooltip\r\n      *ngIf=\"tooltipMessage\"\r\n      class=\"ml-1\"\r\n      [message]=\"tooltipMessage\"\r\n      [placement]=\"tooltipPlacement\"\r\n      [color]=\"tooltipColor\"\r\n      [icon]=\"tooltipIcon\"\r\n    ></sq-tooltip>\r\n  </label>\r\n  <div\r\n    class=\"p-0 wrapper-input wrapper-input-squid text-ellipsisarea\"\r\n    [ngClass]=\"{\r\n      error: (externalError && externalError !== '') || (error && error !== ''),\r\n      readonly: readonly\r\n    }\"\r\n  >\r\n    <span class=\"input-group-text m-0\" *ngIf=\"leftLabel\">\r\n      <ng-container *ngTemplateOutlet=\"leftLabel\"></ng-container>\r\n    </span>\r\n    <input\r\n      class=\"col input\"\r\n      [ngClass]=\"{\r\n        'has-icon': error || externalError,\r\n        disabled: disabled,\r\n        readonly: readonly\r\n      }\"\r\n      [ngStyle]=\"{\r\n        'background-color': backgroundColor,\r\n        'border-color': borderColor\r\n      }\"\r\n      [id]=\"id\"\r\n      [type]=\"type || 'text'\"\r\n      [name]=\"name\"\r\n      [placeholder]=\"placeholder || ''\"\r\n      [required]=\"required\"\r\n      [disabled]=\"disabled\"\r\n      [readonly]=\"readonly\"\r\n      (blur)=\"validate(true)\"\r\n      [ngModel]=\"_value\"\r\n      [maxlength]=\"maxLength\"\r\n      (ngModelChange)=\"change($event)\"\r\n      (keydown)=\"keyDown($event)\"\r\n      (keyup)=\"keyUp($event)\"\r\n      [pattern]=\"pattern\"\r\n      [attr.inputmode]=\"inputMode\"\r\n      ngDefaultControl\r\n    />\r\n    <span class=\"input-group-text m-0\" *ngIf=\"rightLabel\">\r\n      <ng-container *ngTemplateOutlet=\"rightLabel\"></ng-container>\r\n    </span>\r\n  </div>\r\n  <span\r\n    *ngIf=\"externalIcon\"\r\n    class=\"icon icon-external textarea-icon\"\r\n    [ngClass]=\"{\r\n      'no-label': !label?.length\r\n    }\"\r\n    [innerHtml]=\"externalIcon || '' | universalSafe\"\r\n  ></span>\r\n  <div\r\n    class=\"box-validation box-invalid show\"\r\n    *ngIf=\"errorSpan\"\r\n    [ngClass]=\"{\r\n      'has-max-length': maxLength\r\n    }\"\r\n  >\r\n    <i [ngClass]=\"{\r\n      'visibility-hidden-force': !error && !externalError\r\n    }\" class=\"fa-solid fa-triangle-exclamation\"></i>\r\n    {{ externalError ? externalError : '' }}\r\n    {{ error && !externalError ? error : '' }}\r\n    <span\r\n      class=\"max-length-name\"\r\n      [ngClass]=\"{\r\n        'visibility-hidden-force': disabled || readonly\r\n      }\"\r\n      *ngIf=\"maxLength\"\r\n    >\r\n      {{ maxLength - (value?.length || 0) }}\r\n    </span>\r\n  </div>\r\n</div>"
        },
        {
            "name": "SqInputDateComponent",
            "id": "component-SqInputDateComponent-abe328151c09912292b4eceaaf75d6602c58fd3fdae6c9271860ebc6e0a868810dff8e0ab1e7eb1e4f8394f80be377d38e807913558cafc7b6d4245065c3f51e",
            "file": "src/components/sq-input-date/sq-input-date.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-input-date",
            "styleUrls": [
                "./sq-input-date.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-input-date.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "maxDate",
                    "defaultValue": "'9999-12-31'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum allowed date in 'yyyy-mm-dd' format.\n",
                    "description": "<p>Maximum allowed date in &#39;yyyy-mm-dd&#39; format.</p>\n",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "minDate",
                    "defaultValue": "'0001-01-01'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMinimum allowed date in 'yyyy-mm-dd' format.\n",
                    "description": "<p>Minimum allowed date in &#39;yyyy-mm-dd&#39; format.</p>\n",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'dd-mm-yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the date input.\n",
                    "description": "<p>Placeholder text for the date input.</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe value of the input element in 'yyyy-mm-dd' format.\n",
                    "description": "<p>The value of the input element in &#39;yyyy-mm-dd&#39; format.</p>\n",
                    "line": 50,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color of the input element.\n",
                    "description": "<p>Background color of the input element.</p>\n",
                    "line": 141,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color of the input element.\n",
                    "description": "<p>Border color of the input element.</p>\n",
                    "line": 146,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for the input element.\n",
                    "description": "<p>Custom CSS class for the input element.</p>\n",
                    "line": 60,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the input element.\n",
                    "description": "<p>Flag to disable the input element.</p>\n",
                    "line": 101,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to display an error span.\n",
                    "description": "<p>Flag to display an error span.</p>\n",
                    "line": 96,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message to display.\n",
                    "description": "<p>External error message to display.</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon to display.\n",
                    "description": "<p>External icon to display.</p>\n",
                    "line": 75,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the input element.\n",
                    "description": "<p>The id attribute for the input element.</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "inputMode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput mode for mobile devices.\n",
                    "description": "<p>Input mode for mobile devices.</p>\n",
                    "line": 171,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn optional label for the input.\n",
                    "description": "<p>An optional label for the input.</p>\n",
                    "line": 55,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the input label.\n",
                    "description": "<p>Color of the input label.</p>\n",
                    "line": 151,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum length for the input element.\n",
                    "description": "<p>Maximum length for the input element.</p>\n",
                    "line": 161,
                    "type": "number | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1127,
                            "end": 1172,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1128,
                                "end": 1135,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the input element.\n\n",
                    "description": "<p>The name attribute for the input element.</p>\n",
                    "line": 45,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "pattern",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRegular expression pattern for input validation.\n",
                    "description": "<p>Regular expression pattern for input validation.</p>\n",
                    "line": 166,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to make the input element readonly.\n",
                    "description": "<p>Flag to make the input element readonly.</p>\n",
                    "line": 106,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to mark the input as required.\n",
                    "description": "<p>Flag to mark the input as required.</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTime in milliseconds before triggering input timeout.\n",
                    "description": "<p>Time in milliseconds before triggering input timeout.</p>\n",
                    "line": 91,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the tooltip.\n",
                    "description": "<p>Color of the tooltip.</p>\n",
                    "line": 131,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIcon for the tooltip.\n",
                    "description": "<p>Icon for the tooltip.</p>\n",
                    "line": 136,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message to display.\n",
                    "description": "<p>Tooltip message to display.</p>\n",
                    "line": 121,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlacement of the tooltip.\n",
                    "description": "<p>Placement of the tooltip.</p>\n",
                    "line": 126,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nType of the input element (e.g., text, email, password).\n",
                    "description": "<p>Type of the input element (e.g., text, email, password).</p>\n",
                    "line": 156,
                    "type": "\"text\" | \"email\" | \"hidden\" | \"password\" | \"tel\" | \"url\" | \"file\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to use form errors for validation messages.\n",
                    "description": "<p>Flag to use form errors for validation messages.</p>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input focus events.\n",
                    "description": "<p>Event emitter for input focus events.</p>\n",
                    "line": 186,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressDown",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keydown events.\n",
                    "description": "<p>Event emitter for keydown events.</p>\n",
                    "line": 176,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressUp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keyup events.\n",
                    "description": "<p>Event emitter for keyup events.</p>\n",
                    "line": 181,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for validation status.\n",
                    "description": "<p>Event emitter for validation status.</p>\n",
                    "line": 191,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input value changes.\n",
                    "description": "<p>Event emitter for input value changes.</p>\n",
                    "line": 196,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- The TranslateService for translation support (optional).",
                    "line": 73,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "validatorHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorHelper",
                    "optional": false,
                    "description": "- The ValidatorHelper service for input validation.",
                    "line": 71,
                    "modifierKind": [
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The internal value of the input element.</p>\n",
                    "line": 219,
                    "rawdescription": "\n\nThe internal value of the input element.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Error message to display.</p>\n",
                    "line": 224,
                    "rawdescription": "\n\nError message to display.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a left-aligned label template.</p>\n",
                    "line": 202,
                    "rawdescription": "\n\nReference to a left-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Reference to the native element.</p>\n",
                    "line": 229,
                    "rawdescription": "\n\nReference to the native element.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 208,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 234,
                    "rawdescription": "\n\nTimeout for input changes.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle the change event for the date input.\n",
                    "description": "<p>Handle the change event for the date input.</p>\n",
                    "modifierKind": [
                        164,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3216,
                                "end": 3221,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3210,
                                "end": 3215,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input change event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormat a value as an ISO date string.\n",
                    "description": "<p>Format a value as an ISO date string.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4227,
                                "end": 4232,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4221,
                                "end": 4226,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The value to format as an ISO date string.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 4284,
                                "end": 4291,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The ISO date string.</p>\n"
                        }
                    ]
                },
                {
                    "name": "getISOValidDate",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the ISO-formatted valid date from a Date object.\n",
                    "description": "<p>Get the ISO-formatted valid date from a Date object.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3769,
                                "end": 3774,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3763,
                                "end": 3768,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The Date object to format.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 3810,
                                "end": 3817,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The ISO-formatted date string.</p>\n"
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAsynchronously validate the date input value.\n",
                    "description": "<p>Asynchronously validate the date input value.</p>\n",
                    "modifierKind": [
                        164,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2368,
                                "end": 2374,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "isBlur"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 2362,
                                "end": 2367,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Indicates if the input has lost focus.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keydown events.\n",
                    "description": "<p>Handle keydown events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7041,
                                "end": 7046,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7035,
                                "end": 7040,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keydown event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keyup events.\n",
                    "description": "<p>Handle keyup events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7191,
                                "end": 7196,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7185,
                                "end": 7190,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyup event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interpolateParams",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6674,
                                "end": 6677,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6659,
                                "end": 6664,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6665,
                                "end": 6673,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6666,
                                    "end": 6672,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 6735,
                                "end": 6752,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "interpolateParams"
                            },
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "pos": 6729,
                                "end": 6734,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Value to interpolate with translation.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a date input component that extends SqInputComponent.</p>\n<p>This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.</p>\n<br>\n<label for='id-exemple-date'>\n Example Input\n</label>\n<input\n  class='input mb-3'\n  name=\"name-exemple-date\"\n  id=\"id-exemple-date\"\n  type=\"date\"\n></input>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-input-date [name]=&quot;&#39;date-input&#39;&quot; [id]=&quot;&#39;date-input&#39;&quot; [label]=&quot;&#39;Date&#39;&quot; [(value)]=&#39;date&#39;&gt;&lt;/sq-input-date&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a date input component that extends SqInputComponent.\n\nThis component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.\n\n<br>\n<label for='id-exemple-date'>\n Example Input\n</label>\n<input\n  class='input mb-3'\n  name=\"name-exemple-date\"\n  id=\"id-exemple-date\"\n  type=\"date\"\n></input>\n\n```html\n<sq-input-date [name]=\"'date-input'\" [id]=\"'date-input'\" [label]=\"'Date'\" [(value)]='date'></sq-input-date>\n```",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, Input, Optional, TemplateRef } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { ValidatorHelper } from '../../helpers/validator.helper'\nimport { SqInputComponent } from '../sq-input/sq-input.component'\n\n/**\n * Represents a date input component that extends SqInputComponent.\n * \n * This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.\n * \n * <br>\n * <label for='id-exemple-date'>\n *  Example Input\n * </label>\n * <input\n *   class='input mb-3'\n *   name=\"name-exemple-date\"\n *   id=\"id-exemple-date\"\n *   type=\"date\"\n * ></input>\n * \n * @example\n * <sq-input-date [name]=\"'date-input'\" [id]=\"'date-input'\" [label]=\"'Date'\" [(value)]='date'></sq-input-date>\n */\n@Component({\n  selector: 'sq-input-date',\n  templateUrl: './sq-input-date.component.html',\n  styleUrls: ['./sq-input-date.component.scss']\n})\nexport class SqInputDateComponent extends SqInputComponent {\n  /**\n   * Minimum allowed date in 'yyyy-mm-dd' format.\n   */\n  @Input() minDate = '0001-01-01'\n\n  /**\n   * Maximum allowed date in 'yyyy-mm-dd' format.\n   */\n  @Input() maxDate = '9999-12-31'\n\n  /**\n   * Placeholder text for the date input.\n   */\n  @Input() override placeholder = 'dd-mm-yyyy'\n\n  /**\n   * The value of the input element in 'yyyy-mm-dd' format.\n   */\n  @Input()\n  public override set value(value: any) {\n    value = value.split('T')[0] || value\n    this._value = new Date(value)\n  }\n  public override get value(): any {\n    return this._value.toISOString().split('T')[0]\n  }\n\n  /**\n   * Reference to a label template.\n   */\n  @ContentChild('labelTemplate')\n  override labelTemplate: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Constructs a new instance of SqInputDateComponent.\n   * @param validatorHelper - The ValidatorHelper service for input validation.\n   * @param element - Reference to the native element.\n   * @param translate - The TranslateService for translation support (optional).\n   */\n  constructor(\n    public override validatorHelper: ValidatorHelper,\n    element: ElementRef,\n    @Optional() public override translate: TranslateService,\n  ) {\n    super(validatorHelper, element, translate)\n    this.nativeElement = element.nativeElement\n  }\n\n  /**\n   * Asynchronously validate the date input value.\n   * @param isBlur - Indicates if the input has lost focus.\n   */\n  override async validate(isBlur = false) {\n    if (this.externalError) {\n      this.error = false\n    } else if (!!this.required && !this._value) {\n      this.valid.emit(false)\n      this.setError('forms.required')\n    } else if (!this.validatorHelper.date(this._value)) {\n      this.valid.emit(false)\n      this.setError('forms.date')\n    } else if (this.formatDate(this.minDate) > this._value) {\n      this.valid.emit(false)\n      this.setError('forms.rangeDate')\n    } else if (this.formatDate(this.maxDate) < this._value) {\n      this.valid.emit(false)\n      this.setError('forms.rangeDate')\n    } else {\n      this.valid.emit(true)\n      this.error = ''\n    }\n\n    if (isBlur) {\n      this.inFocus.emit(false)\n    }\n  }\n\n  /**\n   * Handle the change event for the date input.\n   * @param event - The input change event.\n   */\n  override async change(event: any) {\n    event = event?.target?.valueAsDate ? event.target.valueAsDate : event?.target?.value || event\n    if (!this.disabled && !this.readonly) {\n      this.inFocus.emit(true)\n      this._value = event\n      clearTimeout(this.timeoutInput)\n      this.timeoutInput = setTimeout(() => {\n        this.valueChange.emit(this.getISOValidDate(event))\n      }, this.timeToChange)\n      this.validate()\n    }\n  }\n\n  /**\n   * Get the ISO-formatted valid date from a Date object.\n   * @param value - The Date object to format.\n   * @returns The ISO-formatted date string.\n   */\n  getISOValidDate(value: Date) {\n    try {\n      let isoDate = ''\n      if (value) {\n        isoDate = new Date(value)?.toISOString().split('T')[0] + 'T00:00:00.000Z'\n      }\n      if (isoDate === 'Invalid date') {\n        return ''\n      }\n      return isoDate\n    } catch (error) {\n      return ''\n    }\n  }\n\n  /**\n   * Format a value as an ISO date string.\n   * @param value - The value to format as an ISO date string.\n   * @returns The ISO date string.\n   */\n  formatDate(value: any) {\n    if (!value) {\n      return ''\n    }\n    try {\n      return new Date(value).toISOString().split('T')[0]\n    } catch (error) {\n      return ''\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-all-inside-input {\n  .icon {\n    margin: 0;\n    font-size: 1rem;\n    font-weight: 700;\n    position: absolute;\n    right: 24px;\n    top: 40px;\n    &.no-label {\n      top: 75px;\n    }\n  }\n  .icon-external {\n    color: inherit !important;\n  }\n  .max-length-name {\n    font-size: inherit;\n    float: right;\n  }\n}\n",
                    "styleUrl": "./sq-input-date.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new instance of SqInputDateComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validatorHelper",
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "rawdescription": "\n\nConstructs a new instance of SqInputDateComponent.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1829,
                            "end": 1844,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "validatorHelper"
                        },
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1823,
                            "end": 1828,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ValidatorHelper service for input validation.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 1909,
                            "end": 1916,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1903,
                            "end": 1908,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Reference to the native element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 1964,
                            "end": 1973,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1958,
                            "end": 1963,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The TranslateService for translation support (optional).</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [
                "SqInputComponent"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "rawdescription": "\n\nThe value of the input element in 'yyyy-mm-dd' format.\n",
                        "description": "<p>The value of the input element in &#39;yyyy-mm-dd&#39; format.</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "any",
                        "returnType": "any",
                        "line": 54
                    }
                }
            },
            "templateData": "<div class=\"wrapper-all-inside-input {{ customClass }}\">\n  <label\n    class=\"display-flex\"\n    *ngIf=\"label?.length || tooltipMessage || labelTemplate\"\n    [ngClass]=\"{\n      readonly: readonly\n    }\"\n    [for]=\"id\"\n  >\n    <div *ngIf=\"label && !labelTemplate\" [ngStyle]=\"{ 'color': labelColor }\" [innerHtml]=\"label | universalSafe\"></div>\n    <div *ngIf=\"labelTemplate\">\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n    </div>\n    <sq-tooltip\n      *ngIf=\"tooltipMessage\"\n      class=\"ml-1\"\n      [message]=\"tooltipMessage\"\n      [placement]=\"tooltipPlacement\"\n      [color]=\"tooltipColor\"\n      [icon]=\"tooltipIcon\"\n    ></sq-tooltip>\n  </label>\n  <div\n    class=\"p-0 wrapper-input wrapper-input-squid text-ellipsisarea\"\n    [ngClass]=\"{\n      error: (externalError && externalError !== '') || (error && error !== ''),\n      readonly: readonly\n    }\"\n  >\n    <span class=\"input-group-text m-0\" *ngIf=\"leftLabel\">\n      <ng-container *ngTemplateOutlet=\"leftLabel\"></ng-container>\n    </span>\n    <input\n      class=\"col input\"\n      [ngClass]=\"{\n        'has-icon': error || externalError,\n        disabled: disabled,\n        readonly: readonly\n      }\"\n      [ngStyle]=\"{\n        'background-color': backgroundColor,\n        'border-color': borderColor\n      }\"\n      [min]=\"formatDate(minDate)\"\n      [max]=\"formatDate(maxDate)\"\n      [id]=\"id\"\n      [type]=\"'date'\"\n      [name]=\"name\"\n      [placeholder]=\"placeholder || ''\"\n      [required]=\"required\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n      (blur)=\"validate(true)\"\n      [valueAsDate]=\"_value\"\n      (change)=\"change($event)\"\n      (keydown)=\"keyDown($event)\"\n      (keyup)=\"keyUp($event)\"\n    />\n    <span class=\"input-group-text m-0\" *ngIf=\"rightLabel\">\n      <ng-container *ngTemplateOutlet=\"rightLabel\"></ng-container>\n    </span>\n  </div>\n  <span\n    *ngIf=\"externalIcon\"\n    class=\"icon icon-external textarea-icon\"\n    [ngClass]=\"{\n      'no-label': !label?.length\n    }\"\n    [innerHtml]=\"externalIcon || '' | universalSafe\"\n  ></span>\n  <div\n    class=\"box-validation box-invalid show\"\n    *ngIf=\"errorSpan\"\n  >\n    <i [ngClass]=\"{\n      'visibility-hidden-force': !error && !externalError\n    }\" class=\"fa-solid fa-triangle-exclamation\"></i>\n    {{ externalError ? externalError : '' }}\n    {{ error && !externalError ? error : '' }}\n  </div>\n</div>"
        },
        {
            "name": "SqInputFileComponent",
            "id": "component-SqInputFileComponent-9a3ca63b03b56fdbc15a27e8bd9a5f51a18c4ee5d7252fa770c63d0c195adbe2ab110ed9080c6a8dead20417698d4219d0bf7f35324f261ac26fb9c19dc03058",
            "file": "src/components/sq-input-file/sq-input-file.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-input-file",
            "styleUrls": [
                "./sq-input-file.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-input-file.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "block",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplay the file input as a block element.\n",
                    "description": "<p>Display the file input as a block element.</p>\n",
                    "line": 68,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "'var(--pink)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color for the file input.\n",
                    "description": "<p>Border color for the file input.</p>\n",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'var(--pink)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor for the file input.\n",
                    "description": "<p>Color for the file input.</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "fileType",
                    "defaultValue": "'*.*'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAllowed file types pattern (e.g., '*.jpg, *.png').\n",
                    "description": "<p>Allowed file types pattern (e.g., &#39;*.jpg, *.png&#39;).</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "fontSize",
                    "defaultValue": "'1rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFont size for the file input.\n",
                    "description": "<p>Font size for the file input.</p>\n",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the file input is in a loading state.\n",
                    "description": "<p>Indicates whether the file input is in a loading state.</p>\n",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum allowed file size in bytes.\n",
                    "description": "<p>Maximum allowed file size in bytes.</p>\n",
                    "line": 43,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether multiple files can be selected.\n",
                    "description": "<p>Indicates whether multiple files can be selected.</p>\n",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "noPadding",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether padding should be removed from the file input.\n",
                    "description": "<p>Indicates whether padding should be removed from the file input.</p>\n",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "textColor",
                    "defaultValue": "'var(--white-html)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nText color for the file input.\n",
                    "description": "<p>Text color for the file input.</p>\n",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color of the input element.\n",
                    "description": "<p>Background color of the input element.</p>\n",
                    "line": 141,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for the input element.\n",
                    "description": "<p>Custom CSS class for the input element.</p>\n",
                    "line": 60,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the input element.\n",
                    "description": "<p>Flag to disable the input element.</p>\n",
                    "line": 101,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to display an error span.\n",
                    "description": "<p>Flag to display an error span.</p>\n",
                    "line": 96,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message to display.\n",
                    "description": "<p>External error message to display.</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon to display.\n",
                    "description": "<p>External icon to display.</p>\n",
                    "line": 75,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the input element.\n",
                    "description": "<p>The id attribute for the input element.</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "inputMode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput mode for mobile devices.\n",
                    "description": "<p>Input mode for mobile devices.</p>\n",
                    "line": 171,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn optional label for the input.\n",
                    "description": "<p>An optional label for the input.</p>\n",
                    "line": 55,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the input label.\n",
                    "description": "<p>Color of the input label.</p>\n",
                    "line": 151,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum length for the input element.\n",
                    "description": "<p>Maximum length for the input element.</p>\n",
                    "line": 161,
                    "type": "number | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1127,
                            "end": 1172,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1128,
                                "end": 1135,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the input element.\n\n",
                    "description": "<p>The name attribute for the input element.</p>\n",
                    "line": 45,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "pattern",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRegular expression pattern for input validation.\n",
                    "description": "<p>Regular expression pattern for input validation.</p>\n",
                    "line": 166,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the input element.\n",
                    "description": "<p>Placeholder text for the input element.</p>\n",
                    "line": 65,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to make the input element readonly.\n",
                    "description": "<p>Flag to make the input element readonly.</p>\n",
                    "line": 106,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to mark the input as required.\n",
                    "description": "<p>Flag to mark the input as required.</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTime in milliseconds before triggering input timeout.\n",
                    "description": "<p>Time in milliseconds before triggering input timeout.</p>\n",
                    "line": 91,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the tooltip.\n",
                    "description": "<p>Color of the tooltip.</p>\n",
                    "line": 131,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIcon for the tooltip.\n",
                    "description": "<p>Icon for the tooltip.</p>\n",
                    "line": 136,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message to display.\n",
                    "description": "<p>Tooltip message to display.</p>\n",
                    "line": 121,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlacement of the tooltip.\n",
                    "description": "<p>Placement of the tooltip.</p>\n",
                    "line": 126,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nType of the input element (e.g., text, email, password).\n",
                    "description": "<p>Type of the input element (e.g., text, email, password).</p>\n",
                    "line": 156,
                    "type": "\"text\" | \"email\" | \"hidden\" | \"password\" | \"tel\" | \"url\" | \"file\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to use form errors for validation messages.\n",
                    "description": "<p>Flag to use form errors for validation messages.</p>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe value of the input element.\n",
                    "description": "<p>The value of the input element.</p>\n",
                    "line": 81,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input focus events.\n",
                    "description": "<p>Event emitter for input focus events.</p>\n",
                    "line": 186,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressDown",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keydown events.\n",
                    "description": "<p>Event emitter for keydown events.</p>\n",
                    "line": 176,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressUp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keyup events.\n",
                    "description": "<p>Event emitter for keyup events.</p>\n",
                    "line": 181,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for validation status.\n",
                    "description": "<p>Event emitter for validation status.</p>\n",
                    "line": 191,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input value changes.\n",
                    "description": "<p>Event emitter for input value changes.</p>\n",
                    "line": 196,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "customContent",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Custom content to be displayed within the file input.</p>\n",
                    "line": 74,
                    "rawdescription": "\n\nCustom content to be displayed within the file input.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'customContent', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Reference to the native element.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nReference to the native element.\n",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- The TranslateService for translation support (optional).",
                    "line": 90,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "validatorHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorHelper",
                    "optional": false,
                    "description": "- The ValidatorHelper service for input validation.",
                    "line": 88,
                    "modifierKind": [
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The internal value of the input element.</p>\n",
                    "line": 219,
                    "rawdescription": "\n\nThe internal value of the input element.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Error message to display.</p>\n",
                    "line": 224,
                    "rawdescription": "\n\nError message to display.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 214,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a left-aligned label template.</p>\n",
                    "line": 202,
                    "rawdescription": "\n\nReference to a left-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 208,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 234,
                    "rawdescription": "\n\nTimeout for input changes.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle the change event for the file input.\n",
                    "description": "<p>Handle the change event for the file input.</p>\n",
                    "modifierKind": [
                        164,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3678,
                                "end": 3683,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3672,
                                "end": 3677,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input change event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAsynchronously validate the file input value.\n",
                    "description": "<p>Asynchronously validate the file input value.</p>\n",
                    "modifierKind": [
                        164,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2748,
                                "end": 2754,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "isBlur"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 2742,
                                "end": 2747,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Indicates if the input has lost focus.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keydown events.\n",
                    "description": "<p>Handle keydown events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7041,
                                "end": 7046,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7035,
                                "end": 7040,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keydown event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keyup events.\n",
                    "description": "<p>Handle keyup events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7191,
                                "end": 7196,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7185,
                                "end": 7190,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyup event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interpolateParams",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6674,
                                "end": 6677,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6659,
                                "end": 6664,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6665,
                                "end": 6673,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6666,
                                    "end": 6672,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 6735,
                                "end": 6752,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "interpolateParams"
                            },
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "pos": 6729,
                                "end": 6734,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Value to interpolate with translation.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a file input component that extends SqInputComponent.</p>\n<p>This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-input-file [name]=&quot;&#39;file-input&#39;&quot; [id]=&quot;&#39;file-input&#39;&quot; [label]=&quot;&#39;Upload File&#39;&quot; [(value)]=&#39;files&#39;&gt;&lt;/sq-input-file&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a file input component that extends SqInputComponent.\n\nThis component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.\n\n```html\n<sq-input-file [name]=\"'file-input'\" [id]=\"'file-input'\" [label]=\"'Upload File'\" [(value)]='files'></sq-input-file>\n```",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, Input, Optional, TemplateRef } from '@angular/core'\r\nimport { TranslateService } from '@ngx-translate/core'\r\nimport { ValidatorHelper } from '../../helpers/validator.helper'\r\nimport { SqInputComponent } from '../sq-input/sq-input.component'\r\n\r\n/**\r\n * Represents a file input component that extends SqInputComponent.\r\n * \r\n * This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.\r\n * \r\n * @example\r\n * <sq-input-file [name]=\"'file-input'\" [id]=\"'file-input'\" [label]=\"'Upload File'\" [(value)]='files'></sq-input-file>\r\n */\r\n@Component({\r\n  selector: 'sq-input-file',\r\n  templateUrl: './sq-input-file.component.html',\r\n  styleUrls: ['./sq-input-file.component.scss']\r\n})\r\nexport class SqInputFileComponent extends SqInputComponent {\r\n  /**\r\n   * Text color for the file input.\r\n   */\r\n  @Input() textColor = 'var(--white-html)'\r\n\r\n  /**\r\n   * Border color for the file input.\r\n   */\r\n  @Input() override borderColor = 'var(--pink)'\r\n\r\n  /**\r\n   * Color for the file input.\r\n   */\r\n  @Input() color = 'var(--pink)'\r\n\r\n  /**\r\n   * Font size for the file input.\r\n   */\r\n  @Input() fontSize = '1rem'\r\n\r\n  /**\r\n   * Maximum allowed file size in bytes.\r\n   */\r\n  @Input() maxSize?: number\r\n\r\n  /**\r\n   * Indicates whether the file input is in a loading state.\r\n   */\r\n  @Input() loading = false\r\n\r\n  /**\r\n   * Allowed file types pattern (e.g., '*.jpg, *.png').\r\n   */\r\n  @Input() fileType = '*.*'\r\n\r\n  /**\r\n   * Indicates whether multiple files can be selected.\r\n   */\r\n  @Input() multiple = false\r\n\r\n  /**\r\n   * Indicates whether padding should be removed from the file input.\r\n   */\r\n  @Input() noPadding = false\r\n\r\n  /**\r\n   * Display the file input as a block element.\r\n   */\r\n  @Input() block = false\r\n\r\n  /**\r\n   * Custom content to be displayed within the file input.\r\n   */\r\n  @ContentChild('customContent', { static: true })\r\n  customContent: TemplateRef<HTMLElement> | null = null\r\n\r\n  /**\r\n   * Reference to the native element.\r\n   */\r\n  override nativeElement: ElementRef\r\n\r\n  /**\r\n   * Constructs a new instance of SqInputFileComponent.\r\n   * @param validatorHelper - The ValidatorHelper service for input validation.\r\n   * @param element - Reference to the native element.\r\n   * @param translate - The TranslateService for translation support (optional).\r\n   */\r\n  constructor(\r\n    public override validatorHelper: ValidatorHelper,\r\n    element: ElementRef,\r\n    @Optional() public override translate: TranslateService,\r\n  ) {\r\n    super(validatorHelper, element, translate)\r\n    this.nativeElement = element.nativeElement\r\n    this.type = 'file'\r\n  }\r\n\r\n  /**\r\n   * Asynchronously validate the file input value.\r\n   * @param isBlur - Indicates if the input has lost focus.\r\n   */\r\n  override async validate(isBlur = false) {\r\n    if (this.externalError) {\r\n      this.error = false\r\n    } else if (!!this.required && (!this.value || this.value.length < 1) && this.value !== 0) {\r\n      this.setError('forms.required')\r\n      this.valid.emit(false)\r\n    } else if (this.maxSize && this.value && this.value.length > 0) {\r\n      let bigFiles = 0\r\n      for (const file of this.value) {\r\n        if (file.size > this.maxSize) {\r\n          bigFiles++\r\n        }\r\n      }\r\n      if (bigFiles > 0) {\r\n        this.setError('forms.fileSize')\r\n        this.valid.emit(false)\r\n      } else {\r\n        this.valid.emit(true)\r\n        this.error = ''\r\n      }\r\n    } else {\r\n      this.valid.emit(true)\r\n      this.error = ''\r\n    }\r\n    if (isBlur) {\r\n      this.inFocus.emit(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the change event for the file input.\r\n   * @param event - The input change event.\r\n   */\r\n  override async change(event: any) {\r\n    this.value = event.target?.files || event\r\n    this.valueChange.emit(this.value)\r\n    this.validate()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-input-file-squid {\r\n  display: inline-block;\r\n  &.block {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  label {\r\n    color: inherit;\r\n    width: 100%;\r\n    margin: 0;\r\n    font-size: 0.86rem;\r\n    line-height: 10px;\r\n    margin: 0 auto 0.35rem;\r\n    &.label-custom {\r\n      margin: 0;\r\n    }\r\n    &.placeholder {\r\n      line-height: initial;\r\n      width: initial;\r\n      display: inline-flex;\r\n      text-align: center;\r\n      position: relative;\r\n      text-transform: capitalize;\r\n      font-weight: 500;\r\n      font-size: 0.86rem;\r\n      border-radius: 7px;\r\n      overflow: hidden;\r\n      box-shadow: none;\r\n      border: 2px solid transparent;\r\n      transition: var(--transition);\r\n      opacity: 1;\r\n      cursor: pointer;\r\n      margin: 0;\r\n      sq-loader {\r\n        display: inline-block;\r\n        margin-left: 0.35rem;\r\n      }\r\n      span {\r\n        color: inherit;\r\n        width: 100%;\r\n        display: inline-block;\r\n        margin: 0;\r\n        font-weight: inherit;\r\n      }\r\n      &.p-0 {\r\n        padding: 0;\r\n      }\r\n      &:hover,\r\n      &:focus {\r\n        outline: none;\r\n        cursor: pointer;\r\n        color: inherit;\r\n        border-color: inherit;\r\n        &:before {\r\n          border-color: inherit;\r\n        }\r\n      }\r\n      &.loading {\r\n        cursor: wait;\r\n        &:hover,\r\n        &:focus {\r\n          border-color: transparent !important;\r\n        }\r\n      }\r\n      &.disabled {\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n  }\r\n  input {\r\n    display: none;\r\n  }\r\n  .icon {\r\n    position: absolute;\r\n    right: 35px;\r\n    bottom: 3px;\r\n    color: var(--color_text-icon_system_success);\r\n  }\r\n  &.error {\r\n    background: transparent;\r\n    border-color: var(--color_border_input_error) !important;\r\n    .icon {\r\n      color: var(--color_text-icon_system_danger);\r\n    }\r\n    label.label {\r\n      color: var(--color_text-icon_system_danger) !important;\r\n    }\r\n  }\r\n}\r\n.error-name {\r\n  display: block;\r\n  margin: 0 auto;\r\n  min-height: 22px;\r\n  color: var(--color_text-icon_system_danger);\r\n  font-weight: 700;\r\n  font-size: 0.86rem;\r\n}\r\n",
                    "styleUrl": "./sq-input-file.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new instance of SqInputFileComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validatorHelper",
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 79,
                "rawdescription": "\n\nConstructs a new instance of SqInputFileComponent.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2170,
                            "end": 2185,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "validatorHelper"
                        },
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2164,
                            "end": 2169,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ValidatorHelper service for input validation.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 2251,
                            "end": 2258,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2245,
                            "end": 2250,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Reference to the native element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 2307,
                            "end": 2316,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2301,
                            "end": 2306,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The TranslateService for translation support (optional).</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [
                "SqInputComponent"
            ],
            "templateData": "<div\r\n  class=\"wrapper-input-file-squid\"\r\n  [ngClass]=\"{\r\n    error: (externalError && externalError !== '') || (error && error !== ''),\r\n    block: block\r\n  }\"\r\n>\r\n  <label\r\n    *ngIf=\"label?.length\"\r\n    class=\"label\"\r\n    [ngClass]=\"{\r\n      loading: loading\r\n    }\"\r\n  >\r\n    {{ label }}\r\n  </label>\r\n  <label *ngIf=\"customContent\" [for]=\"id\" class=\"label-custom\">\r\n    <ng-container *ngTemplateOutlet=\"customContent\"></ng-container>\r\n  </label>\r\n  <label\r\n    *ngIf=\"!customContent\"\r\n    class=\"placeholder button\"\r\n    [for]=\"id\"\r\n    [ngStyle]=\"{\r\n      'font-size': fontSize,\r\n      color: textColor,\r\n      'background-color': color,\r\n      'border-color': borderColor || textColor\r\n    }\"\r\n    [ngClass]=\"{\r\n      loading: loading,\r\n      'p-0': noPadding\r\n    }\"\r\n  >\r\n    <span\r\n      [innerHtml]=\"placeholder || '' | universalSafe\"\r\n      [ngStyle]=\"{\r\n        'font-size': fontSize\r\n      }\"\r\n    ></span>\r\n    <sq-loader *ngIf=\"loading\" color=\"{{ textColor }}\"></sq-loader>\r\n  </label>\r\n  <input\r\n    #inputFile\r\n    type=\"file\"\r\n    [id]=\"id\"\r\n    [name]=\"name\"\r\n    [required]=\"required\"\r\n    [disabled]=\"disabled || loading\"\r\n    [readonly]=\"disabled || loading\"\r\n    [accept]=\"fileType\"\r\n    (click)=\"inputFile.value = ''\"\r\n    (change)=\"change($event)\"\r\n    (keydown)=\"keyDown($event)\"\r\n    [multiple]=\"multiple\"\r\n  />\r\n  <div\r\n    class=\"box-validation box-invalid show\"\r\n    *ngIf=\"errorSpan\"\r\n    [ngClass]=\"{\r\n      'visibility-hidden-force': ((!externalError || externalError === '') && (!error || error === '')) || disabled || readonly\r\n    }\"\r\n  >\r\n    <i [ngClass]=\"{\r\n      'visibility-hidden-force': !error && !externalError\r\n    }\" class=\"fa-solid fa-triangle-exclamation\"></i>\r\n    {{ externalError ? externalError : '' }}\r\n    {{ error && !externalError ? error : '' }}\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SqInputMaskComponent",
            "id": "component-SqInputMaskComponent-f966097d158eb556d3d8adbf1beeebb0c732dffb91032fb7114594d11b016c4e183cc74dce0bd616d5265b144a087b4ee96718e251241e0bb4769936b92e08c8",
            "file": "src/components/sq-input-mask/sq-input-mask.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-input-mask",
            "styleUrls": [
                "./sq-input-mask.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-input-mask.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "allowNegativeNumbers",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether negative numbers are allowed.\n",
                    "description": "<p>Indicates whether negative numbers are allowed.</p>\n",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "decimalMarker",
                    "defaultValue": "[\".\", \",\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe decimal marker character or an array of characters to represent decimal values.\n",
                    "description": "<p>The decimal marker character or an array of characters to represent decimal values.</p>\n",
                    "line": 56,
                    "type": "\".\" | \",\" | ",
                    "decorators": []
                },
                {
                    "name": "leadZero",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether leading zeros should be preserved.\n",
                    "description": "<p>Indicates whether leading zeros should be preserved.</p>\n",
                    "line": 66,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mask",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe mask pattern for input validation and formatting.\n",
                    "description": "<p>The mask pattern for input validation and formatting.</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines the maximum value that can be accepted as input.\n",
                    "description": "<p>Defines the maximum value that can be accepted as input.</p>\n",
                    "line": 76,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines the minimum value that can be accepted as input.\n",
                    "description": "<p>Defines the minimum value that can be accepted as input.</p>\n",
                    "line": 71,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeHolderCharacter",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe character to use as a placeholder in empty mask slots.\n",
                    "description": "<p>The character to use as a placeholder in empty mask slots.</p>\n",
                    "line": 61,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "prefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe prefix to be prepended to the input value.\n",
                    "description": "<p>The prefix to be prepended to the input value.</p>\n",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showMaskTyped",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the mask should be visible while typing.\n",
                    "description": "<p>Indicates whether the mask should be visible while typing.</p>\n",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "suffix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe suffix to be appended to the input value.\n",
                    "description": "<p>The suffix to be appended to the input value.</p>\n",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "thousandSeparator",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe character used as a thousand separator in numeric input.\n",
                    "description": "<p>The character used as a thousand separator in numeric input.</p>\n",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color of the input element.\n",
                    "description": "<p>Background color of the input element.</p>\n",
                    "line": 141,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color of the input element.\n",
                    "description": "<p>Border color of the input element.</p>\n",
                    "line": 146,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for the input element.\n",
                    "description": "<p>Custom CSS class for the input element.</p>\n",
                    "line": 60,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the input element.\n",
                    "description": "<p>Flag to disable the input element.</p>\n",
                    "line": 101,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to display an error span.\n",
                    "description": "<p>Flag to display an error span.</p>\n",
                    "line": 96,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message to display.\n",
                    "description": "<p>External error message to display.</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon to display.\n",
                    "description": "<p>External icon to display.</p>\n",
                    "line": 75,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the input element.\n",
                    "description": "<p>The id attribute for the input element.</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "inputMode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput mode for mobile devices.\n",
                    "description": "<p>Input mode for mobile devices.</p>\n",
                    "line": 171,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn optional label for the input.\n",
                    "description": "<p>An optional label for the input.</p>\n",
                    "line": 55,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the input label.\n",
                    "description": "<p>Color of the input label.</p>\n",
                    "line": 151,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum length for the input element.\n",
                    "description": "<p>Maximum length for the input element.</p>\n",
                    "line": 161,
                    "type": "number | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1127,
                            "end": 1172,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1128,
                                "end": 1135,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the input element.\n\n",
                    "description": "<p>The name attribute for the input element.</p>\n",
                    "line": 45,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "pattern",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRegular expression pattern for input validation.\n",
                    "description": "<p>Regular expression pattern for input validation.</p>\n",
                    "line": 166,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the input element.\n",
                    "description": "<p>Placeholder text for the input element.</p>\n",
                    "line": 65,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to make the input element readonly.\n",
                    "description": "<p>Flag to make the input element readonly.</p>\n",
                    "line": 106,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to mark the input as required.\n",
                    "description": "<p>Flag to mark the input as required.</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTime in milliseconds before triggering input timeout.\n",
                    "description": "<p>Time in milliseconds before triggering input timeout.</p>\n",
                    "line": 91,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the tooltip.\n",
                    "description": "<p>Color of the tooltip.</p>\n",
                    "line": 131,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIcon for the tooltip.\n",
                    "description": "<p>Icon for the tooltip.</p>\n",
                    "line": 136,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message to display.\n",
                    "description": "<p>Tooltip message to display.</p>\n",
                    "line": 121,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlacement of the tooltip.\n",
                    "description": "<p>Placement of the tooltip.</p>\n",
                    "line": 126,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nType of the input element (e.g., text, email, password).\n",
                    "description": "<p>Type of the input element (e.g., text, email, password).</p>\n",
                    "line": 156,
                    "type": "\"text\" | \"email\" | \"hidden\" | \"password\" | \"tel\" | \"url\" | \"file\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to use form errors for validation messages.\n",
                    "description": "<p>Flag to use form errors for validation messages.</p>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe value of the input element.\n",
                    "description": "<p>The value of the input element.</p>\n",
                    "line": 81,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input focus events.\n",
                    "description": "<p>Event emitter for input focus events.</p>\n",
                    "line": 186,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressDown",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keydown events.\n",
                    "description": "<p>Event emitter for keydown events.</p>\n",
                    "line": 176,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressUp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keyup events.\n",
                    "description": "<p>Event emitter for keyup events.</p>\n",
                    "line": 181,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for validation status.\n",
                    "description": "<p>Event emitter for validation status.</p>\n",
                    "line": 191,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input value changes.\n",
                    "description": "<p>Event emitter for input value changes.</p>\n",
                    "line": 196,
                    "type": "EventEmitter<any>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Reference to the native element.</p>\n",
                    "line": 87,
                    "rawdescription": "\n\nReference to the native element.\n",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- The TranslateService for translation support (optional).",
                    "line": 98,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "validatorHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorHelper",
                    "optional": false,
                    "description": "- The ValidatorHelper service for input validation.",
                    "line": 96,
                    "modifierKind": [
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The internal value of the input element.</p>\n",
                    "line": 219,
                    "rawdescription": "\n\nThe internal value of the input element.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Error message to display.</p>\n",
                    "line": 224,
                    "rawdescription": "\n\nError message to display.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a left-aligned label template.</p>\n",
                    "line": 202,
                    "rawdescription": "\n\nReference to a left-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 208,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 234,
                    "rawdescription": "\n\nTimeout for input changes.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAsynchronously validate the date input value.\n",
                    "description": "<p>Asynchronously validate the date input value.</p>\n",
                    "modifierKind": [
                        164,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2998,
                                "end": 3004,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "isBlur"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 2992,
                                "end": 2997,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Indicates if the input has lost focus.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle input value changes.\n",
                    "description": "<p>Handle input value changes.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6331,
                                "end": 6336,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6325,
                                "end": 6330,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input change event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keydown events.\n",
                    "description": "<p>Handle keydown events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7041,
                                "end": 7046,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7035,
                                "end": 7040,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keydown event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keyup events.\n",
                    "description": "<p>Handle keyup events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7191,
                                "end": 7196,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7185,
                                "end": 7190,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyup event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interpolateParams",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6674,
                                "end": 6677,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6659,
                                "end": 6664,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6665,
                                "end": 6673,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6666,
                                    "end": 6672,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 6735,
                                "end": 6752,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "interpolateParams"
                            },
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "pos": 6729,
                                "end": 6734,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Value to interpolate with translation.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents an input field with mask functionality that extends SqInputComponent.</p>\n<p>This component uses ngx-mask library\nSee {@link <a href=\"https://github.com/JsDaddy/ngx-mask%7D\">https://github.com/JsDaddy/ngx-mask}</a></p>\n<p>This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-input-mask [(value)]=&#39;phone&#39; [name]=&quot;&#39;masked-input&#39;&quot; [id]=&quot;&#39;masked-input&#39;&quot; [label]=&quot;&#39;Masked Input&#39;&quot; [mask]=&quot;&#39;(999) 999-9999&#39;&quot;&gt;&lt;/sq-input-mask&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents an input field with mask functionality that extends SqInputComponent.\n\nThis component uses ngx-mask library\nSee {@link https://github.com/JsDaddy/ngx-mask}\n\nThis component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.\n\n```html\n<sq-input-mask [(value)]='phone' [name]=\"'masked-input'\" [id]=\"'masked-input'\" [label]=\"'Masked Input'\" [mask]=\"'(999) 999-9999'\"></sq-input-mask>\n```",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, Input, Optional, TemplateRef } from \"@angular/core\"\nimport { ValidatorHelper } from '../../helpers/validator.helper'\nimport { TranslateService } from \"@ngx-translate/core\"\nimport { SqInputComponent } from \"../sq-input/sq-input.component\"\n\n/**\n * Represents an input field with mask functionality that extends SqInputComponent.\n *\n * This component uses ngx-mask library\n * @see {@link https://github.com/JsDaddy/ngx-mask}\n *\n * This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.\n *\n * @example\n * <sq-input-mask [(value)]='phone' [name]=\"'masked-input'\" [id]=\"'masked-input'\" [label]=\"'Masked Input'\" [mask]=\"'(999) 999-9999'\"></sq-input-mask>\n */\n@Component({\n  selector: 'sq-input-mask',\n  templateUrl: './sq-input-mask.component.html',\n  styleUrls: ['./sq-input-mask.component.scss']\n})\nexport class SqInputMaskComponent extends SqInputComponent {\n  /**\n   * The mask pattern for input validation and formatting.\n   */\n  @Input() mask = ''\n\n  /**\n   * The character used as a thousand separator in numeric input.\n   */\n  @Input() thousandSeparator = ''\n\n  /**\n   * The suffix to be appended to the input value.\n   */\n  @Input() suffix = ''\n\n  /**\n   * The prefix to be prepended to the input value.\n   */\n  @Input() prefix = ''\n\n  /**\n   * Indicates whether the mask should be visible while typing.\n   */\n  @Input() showMaskTyped = false\n\n  /**\n   * Indicates whether negative numbers are allowed.\n   */\n  @Input() allowNegativeNumbers = false\n\n  /**\n   * The decimal marker character or an array of characters to represent decimal values.\n   */\n  @Input() decimalMarker: \".\" | \",\" | [\".\", \",\"] = [\".\", \",\"]\n\n  /**\n   * The character to use as a placeholder in empty mask slots.\n   */\n  @Input() placeHolderCharacter = ''\n\n  /**\n   * Indicates whether leading zeros should be preserved.\n   */\n  @Input() leadZero = false\n\n  /**\n   * Defines the minimum value that can be accepted as input.\n   */\n  @Input() minValue?: number\n\n  /**\n   * Defines the maximum value that can be accepted as input.\n   */\n  @Input() maxValue?: number\n\n  /**\n   * Reference to a label template.\n   */\n  @ContentChild('labelTemplate')\n  override labelTemplate: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to the native element.\n   */\n  override nativeElement: ElementRef\n\n  /**\n   * Constructs a new instance of SqInputMaskComponent.\n   * @param validatorHelper - The ValidatorHelper service for input validation.\n   * @param element - Reference to the native element.\n   * @param translate - The TranslateService for translation support (optional).\n   */\n  constructor(\n    public override validatorHelper: ValidatorHelper,\n    element: ElementRef,\n    @Optional() public override translate: TranslateService,\n  ) {\n    super(validatorHelper, element, translate)\n    this.nativeElement = element.nativeElement\n  }\n\n  /**\n   * Asynchronously validate the date input value.\n   * @param isBlur - Indicates if the input has lost focus.\n   */\n  override async validate(isBlur = false) {\n    const numericValue = Number(this.value)\n\n    if (this.externalError) {\n      this.error = false\n    } else if (this.required && (this.value === null || this.value === undefined || this.value === '')) {\n      this.valid.emit(false)\n      this.setError('forms.required')\n    } else if (this.maxValue && numericValue > this.maxValue) {\n      this.valid.emit(false)\n      this.setError('forms.maxValueAllowed', { max: this.maxValue })\n    } else if (this.minValue && numericValue < this.minValue) {\n      this.valid.emit(false)\n      this.setError('forms.minValueAllowed', { min: this.minValue })\n    } else {\n      this.valid.emit(true)\n      this.error = ''\n    }\n\n    if (isBlur) {\n      this.inFocus.emit(false)\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-all-inside-input {\n  .icon {\n    margin: 0;\n    font-size: 1rem;\n    font-weight: 700;\n    position: absolute;\n    right: 24px;\n    top: 40px;\n    &.no-label {\n      top: 75px;\n    }\n  }\n  .icon-external {\n    color: inherit !important;\n  }\n  .max-length-name {\n    font-size: inherit;\n    float: right;\n  }\n}\n",
                    "styleUrl": "./sq-input-mask.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new instance of SqInputMaskComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validatorHelper",
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 87,
                "rawdescription": "\n\nConstructs a new instance of SqInputMaskComponent.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2459,
                            "end": 2474,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "validatorHelper"
                        },
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2453,
                            "end": 2458,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ValidatorHelper service for input validation.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 2539,
                            "end": 2546,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2533,
                            "end": 2538,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Reference to the native element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 2594,
                            "end": 2603,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2588,
                            "end": 2593,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The TranslateService for translation support (optional).</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [
                "SqInputComponent"
            ],
            "templateData": "<div class=\"wrapper-all-inside-input {{ customClass }}\">\n  <label\n    class=\"display-flex\"\n    *ngIf=\"label?.length || tooltipMessage || labelTemplate\"\n    [ngClass]=\"{\n      readonly: readonly\n    }\"\n    [for]=\"id\"\n  >\n    <div *ngIf=\"label && !labelTemplate\" [ngStyle]=\"{ 'color': labelColor }\" [innerHtml]=\"label | universalSafe\"></div>\n    <div *ngIf=\"labelTemplate\">\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n    </div>\n    <sq-tooltip\n      *ngIf=\"tooltipMessage\"\n      class=\"ml-1\"\n      [message]=\"tooltipMessage\"\n      [placement]=\"tooltipPlacement\"\n      [color]=\"tooltipColor\"\n      [icon]=\"tooltipIcon\"\n    ></sq-tooltip>\n  </label>\n  <div\n    class=\"p-0 wrapper-input wrapper-input-squid text-ellipsisarea\"\n    [ngClass]=\"{\n      error: (externalError && externalError !== '') || (error && error !== ''),\n      readonly: readonly\n    }\"\n  >\n    <span class=\"input-group-text m-0\" *ngIf=\"leftLabel\">\n      <ng-container *ngTemplateOutlet=\"leftLabel\"></ng-container>\n    </span>\n    <input\n      class=\"col input\"\n      [ngClass]=\"{\n        'has-icon': error || externalError,\n        disabled: disabled,\n        readonly: readonly\n      }\"\n      [ngStyle]=\"{\n        'background-color': backgroundColor,\n        'border-color': borderColor\n      }\"\n      [id]=\"id\"\n      [type]=\"'text'\"\n      [name]=\"name\"\n      [placeholder]=\"placeholder || ''\"\n      [required]=\"required\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n      (blur)=\"validate(true)\"\n      [ngModel]=\"_value\"\n      [maxlength]=\"maxLength\"\n      (ngModelChange)=\"change($event)\"\n      (keydown)=\"keyDown($event)\"\n      (keyup)=\"keyUp($event)\"\n      [pattern]=\"pattern\"\n      [attr.inputmode]=\"inputMode\"\n      [mask]=\"mask\"\n      [showMaskTyped]=\"showMaskTyped\"\n      [thousandSeparator]=\"thousandSeparator\"\n      [suffix]=\"suffix\"\n      [prefix]=\"prefix\"\n      [allowNegativeNumbers]=\"allowNegativeNumbers\"\n      [decimalMarker]=\"decimalMarker\"\n      [placeHolderCharacter]=\"placeHolderCharacter\"\n      [leadZero]=\"leadZero\"\n      ngDefaultControl\n    />\n    <span class=\"input-group-text m-0\" *ngIf=\"rightLabel\">\n      <ng-container *ngTemplateOutlet=\"rightLabel\"></ng-container>\n    </span>\n  </div>\n  <span\n    *ngIf=\"externalIcon\"\n    class=\"icon icon-external textarea-icon\"\n    [ngClass]=\"{\n      'no-label': !label?.length\n    }\"\n    [innerHtml]=\"externalIcon || '' | universalSafe\"\n  ></span>\n  <div\n    class=\"box-validation box-invalid show\"\n    *ngIf=\"errorSpan\"\n    [ngClass]=\"{\n      'has-max-length': maxLength\n    }\"\n  >\n    <i [ngClass]=\"{\n      'visibility-hidden-force': !error && !externalError\n    }\" class=\"fa-solid fa-triangle-exclamation\"></i>\n    {{ externalError ? externalError : '' }}\n    {{ error && !externalError ? error : '' }}\n    <span\n      class=\"max-length-name\"\n      [ngClass]=\"{\n        'visibility-hidden-force': disabled || readonly\n      }\"\n      *ngIf=\"maxLength\"\n    >\n      {{ maxLength - (value?.length || 0) }}\n    </span>\n  </div>\n</div>\n"
        },
        {
            "name": "SqInputMoneyComponent",
            "id": "component-SqInputMoneyComponent-bd189945ac6d396d863b99dd929e79b3cec6920faa7d42dbbc9ae1011d278c699a4fcd5b53244f3a958275e04eb94689bb7797c719e5ebe837abd5d9e9eba006",
            "file": "src/components/sq-input-money/sq-input-money.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-input-money",
            "styleUrls": [
                "./sq-input-money.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-input-money.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "allowNegativeNumbers",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to allow negative numbers.\n",
                    "description": "<p>Whether to allow negative numbers.</p>\n",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "currency",
                    "defaultValue": "'BRL'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe currency symbol (e.g., 'USD', 'EUR', 'BRL').\n",
                    "description": "<p>The currency symbol (e.g., &#39;USD&#39;, &#39;EUR&#39;, &#39;BRL&#39;).</p>\n",
                    "line": 68,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "decimalMarker",
                    "defaultValue": "\",\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe character used as a decimal marker (e.g., ',' or '.').\n",
                    "description": "<p>The character used as a decimal marker (e.g., &#39;,&#39; or &#39;.&#39;).</p>\n",
                    "line": 63,
                    "type": "\".\" | \",\" | ",
                    "decorators": []
                },
                {
                    "name": "placeHolderCharacter",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe character used as a placeholder for empty positions.\n",
                    "description": "<p>The character used as a placeholder for empty positions.</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showMaskTyped",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to display the input mask as the user types.\n",
                    "description": "<p>Whether to display the input mask as the user types.</p>\n",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "thousandSeparator",
                    "defaultValue": "'.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe character used for thousand separators (e.g., ',' or '.').\n",
                    "description": "<p>The character used for thousand separators (e.g., &#39;,&#39; or &#39;.&#39;).</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe value of the input element.\n",
                    "description": "<p>The value of the input element.</p>\n",
                    "line": 29,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color of the input element.\n",
                    "description": "<p>Background color of the input element.</p>\n",
                    "line": 141,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color of the input element.\n",
                    "description": "<p>Border color of the input element.</p>\n",
                    "line": 146,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for the input element.\n",
                    "description": "<p>Custom CSS class for the input element.</p>\n",
                    "line": 60,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the input element.\n",
                    "description": "<p>Flag to disable the input element.</p>\n",
                    "line": 101,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to display an error span.\n",
                    "description": "<p>Flag to display an error span.</p>\n",
                    "line": 96,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message to display.\n",
                    "description": "<p>External error message to display.</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon to display.\n",
                    "description": "<p>External icon to display.</p>\n",
                    "line": 75,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the input element.\n",
                    "description": "<p>The id attribute for the input element.</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "inputMode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput mode for mobile devices.\n",
                    "description": "<p>Input mode for mobile devices.</p>\n",
                    "line": 171,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn optional label for the input.\n",
                    "description": "<p>An optional label for the input.</p>\n",
                    "line": 55,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the input label.\n",
                    "description": "<p>Color of the input label.</p>\n",
                    "line": 151,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum length for the input element.\n",
                    "description": "<p>Maximum length for the input element.</p>\n",
                    "line": 161,
                    "type": "number | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1127,
                            "end": 1172,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1128,
                                "end": 1135,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the input element.\n\n",
                    "description": "<p>The name attribute for the input element.</p>\n",
                    "line": 45,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "pattern",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRegular expression pattern for input validation.\n",
                    "description": "<p>Regular expression pattern for input validation.</p>\n",
                    "line": 166,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the input element.\n",
                    "description": "<p>Placeholder text for the input element.</p>\n",
                    "line": 65,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to make the input element readonly.\n",
                    "description": "<p>Flag to make the input element readonly.</p>\n",
                    "line": 106,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to mark the input as required.\n",
                    "description": "<p>Flag to mark the input as required.</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTime in milliseconds before triggering input timeout.\n",
                    "description": "<p>Time in milliseconds before triggering input timeout.</p>\n",
                    "line": 91,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the tooltip.\n",
                    "description": "<p>Color of the tooltip.</p>\n",
                    "line": 131,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIcon for the tooltip.\n",
                    "description": "<p>Icon for the tooltip.</p>\n",
                    "line": 136,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message to display.\n",
                    "description": "<p>Tooltip message to display.</p>\n",
                    "line": 121,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlacement of the tooltip.\n",
                    "description": "<p>Placement of the tooltip.</p>\n",
                    "line": 126,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nType of the input element (e.g., text, email, password).\n",
                    "description": "<p>Type of the input element (e.g., text, email, password).</p>\n",
                    "line": 156,
                    "type": "\"text\" | \"email\" | \"hidden\" | \"password\" | \"tel\" | \"url\" | \"file\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to use form errors for validation messages.\n",
                    "description": "<p>Flag to use form errors for validation messages.</p>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for changes in the money value.\n",
                    "description": "<p>Event emitter for changes in the money value.</p>\n",
                    "line": 73,
                    "type": "EventEmitter<number>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input focus events.\n",
                    "description": "<p>Event emitter for input focus events.</p>\n",
                    "line": 186,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressDown",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keydown events.\n",
                    "description": "<p>Event emitter for keydown events.</p>\n",
                    "line": 176,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressUp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keyup events.\n",
                    "description": "<p>Event emitter for keyup events.</p>\n",
                    "line": 181,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for validation status.\n",
                    "description": "<p>Event emitter for validation status.</p>\n",
                    "line": 191,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "labelTemplateOverwrite",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 95,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Reference to the native element.</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nReference to the native element.\n",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "prefix",
                    "defaultValue": "this.getCurrencyPrefix()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The currency prefix based on the current currency.</p>\n",
                    "line": 83,
                    "rawdescription": "\n\nThe currency prefix based on the current currency.\n"
                },
                {
                    "name": "rightLabelOverwrite",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Content child template for the right label override.</p>\n",
                    "line": 89,
                    "rawdescription": "\n\nContent child template for the right label override.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabelOverwrite'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- The TranslateService for translation support (optional).",
                    "line": 106,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "validatorHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorHelper",
                    "optional": false,
                    "description": "- The ValidatorHelper service for input validation.",
                    "line": 104,
                    "modifierKind": [
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The internal value of the input element.</p>\n",
                    "line": 219,
                    "rawdescription": "\n\nThe internal value of the input element.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Error message to display.</p>\n",
                    "line": 224,
                    "rawdescription": "\n\nError message to display.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 214,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a left-aligned label template.</p>\n",
                    "line": 202,
                    "rawdescription": "\n\nReference to a left-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 208,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 234,
                    "rawdescription": "\n\nTimeout for input changes.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getCurrencyPrefix",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the currency prefix based on the current currency.\n",
                    "description": "<p>Get the currency prefix based on the current currency.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3685,
                                "end": 3692,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The currency prefix as a string.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook that is called when input property values change.\n",
                    "description": "<p>Lifecycle hook that is called when input property values change.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3281,
                                "end": 3288,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3275,
                                "end": 3280,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>An object containing changed properties and their previous and current values.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle input value changes.\n",
                    "description": "<p>Handle input value changes.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6331,
                                "end": 6336,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6325,
                                "end": 6330,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input change event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keydown events.\n",
                    "description": "<p>Handle keydown events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7041,
                                "end": 7046,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7035,
                                "end": 7040,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keydown event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keyup events.\n",
                    "description": "<p>Handle keyup events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7191,
                                "end": 7196,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7185,
                                "end": 7190,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyup event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interpolateParams",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6674,
                                "end": 6677,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6659,
                                "end": 6664,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6665,
                                "end": 6673,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6666,
                                    "end": 6672,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 6735,
                                "end": 6752,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "interpolateParams"
                            },
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "pos": 6729,
                                "end": 6734,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Value to interpolate with translation.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAsynchronously validate the input value.\n",
                    "description": "<p>Asynchronously validate the input value.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5422,
                                "end": 5428,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "isBlur"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 5416,
                                "end": 5421,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Indicates if the input has lost focus.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents an input component for handling money values.</p>\n<p>This component uses ngx-mask library\nSee {@link <a href=\"https://github.com/JsDaddy/ngx-mask%7D\">https://github.com/JsDaddy/ngx-mask}</a></p>\n<p>This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-input-money [(value)]=&#39;payment&#39; [name]=&quot;&#39;money-input&#39;&quot; [id]=&quot;&#39;money-input&#39;&quot; [label]=&quot;&#39;Money Input&#39;&quot; currency=&#39;USD&#39;&gt;&lt;/sq-input-money&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents an input component for handling money values.\n\n\nThis component uses ngx-mask library\nSee {@link https://github.com/JsDaddy/ngx-mask}\n\nThis component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.\n\n```html\n<sq-input-money [(value)]='payment' [name]=\"'money-input'\" [id]=\"'money-input'\" [label]=\"'Money Input'\" currency='USD'></sq-input-money>\n```",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, EventEmitter, Input, OnChanges, Optional, Output, SimpleChanges, TemplateRef } from \"@angular/core\"\nimport { ValidatorHelper } from '../../helpers/validator.helper'\nimport { TranslateService } from \"@ngx-translate/core\"\nimport { SqInputComponent } from \"../sq-input/sq-input.component\"\n\n/**\n * Represents an input component for handling money values.\n *\n * @implements {OnChanges}\n *\n * This component uses ngx-mask library\n * @see {@link https://github.com/JsDaddy/ngx-mask}\n *\n * This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling money input.\n *\n * @example\n * <sq-input-money [(value)]='payment' [name]=\"'money-input'\" [id]=\"'money-input'\" [label]=\"'Money Input'\" currency='USD'></sq-input-money>\n */\n@Component({\n  selector: 'sq-input-money',\n  templateUrl: './sq-input-money.component.html',\n  styleUrls: ['./sq-input-money.component.scss']\n})\nexport class SqInputMoneyComponent extends SqInputComponent implements OnChanges {\n  /**\n   * The value of the input element.\n   */\n  @Input()\n  public override set value(value: any) {\n    if (typeof value === 'number') {\n      this._value = value.toString()\n    } else {\n      this._value = value || ''\n    }\n  }\n  public override get value(): any {\n    return parseFloat(this._value)\n  }\n\n  /**\n   * The character used for thousand separators (e.g., ',' or '.').\n   */\n  @Input() thousandSeparator = '.'\n\n  /**\n   * Whether to display the input mask as the user types.\n   */\n  @Input() showMaskTyped = false\n\n  /**\n   * Whether to allow negative numbers.\n   */\n  @Input() allowNegativeNumbers = false\n\n  /**\n   * The character used as a placeholder for empty positions.\n   */\n  @Input() placeHolderCharacter = ''\n\n  /**\n   * The character used as a decimal marker (e.g., ',' or '.').\n   */\n  @Input() decimalMarker: \".\" | \",\" | [\".\", \",\"] = \",\"\n\n  /**\n   * The currency symbol (e.g., 'USD', 'EUR', 'BRL').\n   */\n  @Input() currency = 'BRL'\n\n  /**\n   * Event emitter for changes in the money value.\n   */\n  @Output() override valueChange: EventEmitter<number> = new EventEmitter()\n\n  /**\n   * Reference to the native element.\n   */\n  override nativeElement: ElementRef\n\n  /**\n   * The currency prefix based on the current currency.\n   */\n  prefix = this.getCurrencyPrefix()\n\n  /**\n   * Content child template for the right label override.\n   */\n  @ContentChild('rightLabelOverwrite')\n  rightLabelOverwrite: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to a label template.\n   */\n  @ContentChild('labelTemplate')\n  labelTemplateOverwrite: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Constructs a new instance of SqInputMaskComponent.\n   * @param validatorHelper - The ValidatorHelper service for input validation.\n   * @param element - Reference to the native element.\n   * @param translate - The TranslateService for translation support (optional).\n   */\n  constructor(\n    public override validatorHelper: ValidatorHelper,\n    element: ElementRef,\n    @Optional() public override translate: TranslateService,\n  ) {\n    super(validatorHelper, element, translate)\n    this.nativeElement = element.nativeElement\n  }\n\n  /**\n   * Lifecycle hook that is called when input property values change.\n   * @param changes - An object containing changed properties and their previous and current values.\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes[\"currency\"] && changes[\"currency\"].currentValue !== changes[\"currency\"].previousValue && changes[\"currency\"].currentValue) {\n      this.prefix = this.getCurrencyPrefix()\n    }\n  }\n\n  /**\n   * Get the currency prefix based on the current currency.\n   * @returns The currency prefix as a string.\n   */\n  getCurrencyPrefix() {\n    return Intl.NumberFormat(undefined, { style: 'currency', currency: this.currency, }).format(0).replace(/\\d/g, '').replace('.', '').replace(',', '')\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sq-input-money.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new instance of SqInputMaskComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validatorHelper",
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 95,
                "rawdescription": "\n\nConstructs a new instance of SqInputMaskComponent.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2723,
                            "end": 2738,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "validatorHelper"
                        },
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2717,
                            "end": 2722,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ValidatorHelper service for input validation.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 2803,
                            "end": 2810,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2797,
                            "end": 2802,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Reference to the native element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 2858,
                            "end": 2867,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2852,
                            "end": 2857,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The TranslateService for translation support (optional).</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [
                "SqInputComponent"
            ],
            "implements": [
                "OnChanges"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "rawdescription": "\n\nThe value of the input element.\n",
                        "description": "<p>The value of the input element.</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "any",
                        "returnType": "any",
                        "line": 36
                    }
                }
            },
            "templateData": "<sq-input-mask\n  [value]=\"_value\"\n  [id]=\"id\"\n  [name]=\"name\"\n  mask=\"separator.2\"\n  [thousandSeparator]=\"thousandSeparator\"\n  [decimalMarker]=\"decimalMarker\"\n  [placeHolderCharacter]=\"placeHolderCharacter\"\n  [timeToChange]=\"timeToChange\"\n  [label]=\"label\"\n  [customClass]=\"customClass\"\n  [placeholder]=\"placeholder\"\n  [externalError]=\"externalError\"\n  [externalIcon]=\"externalIcon\"\n  [errorSpan]=\"errorSpan\"\n  [disabled]=\"disabled\"\n  [readonly]=\"readonly\"\n  [required]=\"required\"\n  [useFormErrors]=\"useFormErrors\"\n  [tooltipMessage]=\"tooltipMessage\"\n  [tooltipPlacement]=\"tooltipPlacement\"\n  [tooltipColor]=\"tooltipColor\"\n  [tooltipIcon]=\"tooltipIcon\"\n  [backgroundColor]=\"backgroundColor\"\n  [allowNegativeNumbers]=\"allowNegativeNumbers\"\n  [borderColor]=\"borderColor\"\n  [leadZero]=\"true\"\n  [showMaskTyped]=\"showMaskTyped\"\n  [labelColor]=\"labelColor\"\n  [borderColor]=\"borderColor\"\n  inputMode=\"numeric\"\n  pattern=\"[0-9]*\"\n  (valueChange)=\"change($event)\"\n  (valid)=\"valid.emit($event)\"\n  (inFocus)=\"inFocus.emit($event)\"\n  (keyPressUp)=\"keyPressUp.emit($event)\"\n  (keyPressDown)=\"keyPressDown.emit($event)\"\n>\n  <ng-container *ngIf=\"labelTemplateOverwrite\">\n    <ng-template #labelTemplate>\n      <ng-container *ngTemplateOutlet=\"labelTemplateOverwrite\"></ng-container>\n    </ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"prefix\">\n    <ng-template #leftLabel>\n      {{ prefix }}\n    </ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"rightLabelOverwrite\">\n    <ng-template #rightLabel>\n      <ng-container *ngTemplateOutlet=\"rightLabelOverwrite\"></ng-container>\n    </ng-template>\n  </ng-container>\n</sq-input-mask>\n"
        },
        {
            "name": "SqInputNumberComponent",
            "id": "component-SqInputNumberComponent-ba59c50c286e0354ca6d66fd36da8dab42149f6f3ac8654f4a2390b89fcef7ed58a94dc29e77f9a0b5c4762070c8ebabad43d9fcefee52e6eab55e85c1ea468f",
            "file": "src/components/sq-input-number/sq-input-number.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-input-number",
            "styleUrls": [
                "./sq-input-number.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-input-number.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "allowNegativeNumbers",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to allow negative numbers.\n",
                    "description": "<p>Whether to allow negative numbers.</p>\n",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "decimalMarker",
                    "defaultValue": "','",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe character used as a decimal marker (e.g., ',' or '.').\n",
                    "description": "<p>The character used as a decimal marker (e.g., &#39;,&#39; or &#39;.&#39;).</p>\n",
                    "line": 63,
                    "type": "\".\" | \",\" | ",
                    "decorators": []
                },
                {
                    "name": "leadZero",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to add a leading zero for single-digit numbers (e.g., '01' instead of '1').\n",
                    "description": "<p>Whether to add a leading zero for single-digit numbers (e.g., &#39;01&#39; instead of &#39;1&#39;).</p>\n",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines the maximum value that can be accepted as input.\n",
                    "description": "<p>Defines the maximum value that can be accepted as input.</p>\n",
                    "line": 73,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines the minimum value that can be accepted as input.\n",
                    "description": "<p>Defines the minimum value that can be accepted as input.</p>\n",
                    "line": 68,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeHolderCharacter",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe character used as a placeholder for empty positions.\n",
                    "description": "<p>The character used as a placeholder for empty positions.</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showMaskTyped",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to display the input mask as the user types.\n",
                    "description": "<p>Whether to display the input mask as the user types.</p>\n",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "thousandSeparator",
                    "defaultValue": "'.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe character used for thousand separators (e.g., ',' or '.').\n",
                    "description": "<p>The character used for thousand separators (e.g., &#39;,&#39; or &#39;.&#39;).</p>\n",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe value of the input element.\n",
                    "description": "<p>The value of the input element.</p>\n",
                    "line": 24,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color of the input element.\n",
                    "description": "<p>Background color of the input element.</p>\n",
                    "line": 141,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color of the input element.\n",
                    "description": "<p>Border color of the input element.</p>\n",
                    "line": 146,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for the input element.\n",
                    "description": "<p>Custom CSS class for the input element.</p>\n",
                    "line": 60,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the input element.\n",
                    "description": "<p>Flag to disable the input element.</p>\n",
                    "line": 101,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to display an error span.\n",
                    "description": "<p>Flag to display an error span.</p>\n",
                    "line": 96,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message to display.\n",
                    "description": "<p>External error message to display.</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon to display.\n",
                    "description": "<p>External icon to display.</p>\n",
                    "line": 75,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the input element.\n",
                    "description": "<p>The id attribute for the input element.</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "inputMode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput mode for mobile devices.\n",
                    "description": "<p>Input mode for mobile devices.</p>\n",
                    "line": 171,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn optional label for the input.\n",
                    "description": "<p>An optional label for the input.</p>\n",
                    "line": 55,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the input label.\n",
                    "description": "<p>Color of the input label.</p>\n",
                    "line": 151,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum length for the input element.\n",
                    "description": "<p>Maximum length for the input element.</p>\n",
                    "line": 161,
                    "type": "number | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1127,
                            "end": 1172,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1128,
                                "end": 1135,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the input element.\n\n",
                    "description": "<p>The name attribute for the input element.</p>\n",
                    "line": 45,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "pattern",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRegular expression pattern for input validation.\n",
                    "description": "<p>Regular expression pattern for input validation.</p>\n",
                    "line": 166,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the input element.\n",
                    "description": "<p>Placeholder text for the input element.</p>\n",
                    "line": 65,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to make the input element readonly.\n",
                    "description": "<p>Flag to make the input element readonly.</p>\n",
                    "line": 106,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to mark the input as required.\n",
                    "description": "<p>Flag to mark the input as required.</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTime in milliseconds before triggering input timeout.\n",
                    "description": "<p>Time in milliseconds before triggering input timeout.</p>\n",
                    "line": 91,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor of the tooltip.\n",
                    "description": "<p>Color of the tooltip.</p>\n",
                    "line": 131,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIcon for the tooltip.\n",
                    "description": "<p>Icon for the tooltip.</p>\n",
                    "line": 136,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message to display.\n",
                    "description": "<p>Tooltip message to display.</p>\n",
                    "line": 121,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlacement of the tooltip.\n",
                    "description": "<p>Placement of the tooltip.</p>\n",
                    "line": 126,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nType of the input element (e.g., text, email, password).\n",
                    "description": "<p>Type of the input element (e.g., text, email, password).</p>\n",
                    "line": 156,
                    "type": "\"text\" | \"email\" | \"hidden\" | \"password\" | \"tel\" | \"url\" | \"file\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to use form errors for validation messages.\n",
                    "description": "<p>Flag to use form errors for validation messages.</p>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for changes in the numeric value.\n",
                    "description": "<p>Event emitter for changes in the numeric value.</p>\n",
                    "line": 78,
                    "type": "EventEmitter<number>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for input focus events.\n",
                    "description": "<p>Event emitter for input focus events.</p>\n",
                    "line": 186,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressDown",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keydown events.\n",
                    "description": "<p>Event emitter for keydown events.</p>\n",
                    "line": 176,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyPressUp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for keyup events.\n",
                    "description": "<p>Event emitter for keyup events.</p>\n",
                    "line": 181,
                    "type": "EventEmitter<KeyboardEvent>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for validation status.\n",
                    "description": "<p>Event emitter for validation status.</p>\n",
                    "line": 191,
                    "type": "EventEmitter<boolean>",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "labelTemplateOverwrite",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 96,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "leftLabelOverwrite",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Content child template for the left label override.</p>\n",
                    "line": 84,
                    "rawdescription": "\n\nContent child template for the left label override.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabelOverwrite'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Reference to the native element.</p>\n",
                    "line": 101,
                    "rawdescription": "\n\nReference to the native element.\n",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "rightLabelOverwrite",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Content child template for the right label override.</p>\n",
                    "line": 90,
                    "rawdescription": "\n\nContent child template for the right label override.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabelOverwrite'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- The TranslateService for translation support (optional).",
                    "line": 112,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "validatorHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorHelper",
                    "optional": false,
                    "description": "- The ValidatorHelper service for input validation.",
                    "line": 110,
                    "modifierKind": [
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The internal value of the input element.</p>\n",
                    "line": 219,
                    "rawdescription": "\n\nThe internal value of the input element.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Error message to display.</p>\n",
                    "line": 224,
                    "rawdescription": "\n\nError message to display.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 214,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a left-aligned label template.</p>\n",
                    "line": 202,
                    "rawdescription": "\n\nReference to a left-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 208,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 234,
                    "rawdescription": "\n\nTimeout for input changes.\n",
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle input value changes.\n",
                    "description": "<p>Handle input value changes.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6331,
                                "end": 6336,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6325,
                                "end": 6330,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input change event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keydown events.\n",
                    "description": "<p>Handle keydown events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7041,
                                "end": 7046,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7035,
                                "end": 7040,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keydown event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "keyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keyup events.\n",
                    "description": "<p>Handle keyup events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7191,
                                "end": 7196,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7185,
                                "end": 7190,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyup event.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interpolateParams",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6674,
                                "end": 6677,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6659,
                                "end": 6664,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6665,
                                "end": 6673,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6666,
                                    "end": 6672,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 6735,
                                "end": 6752,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "interpolateParams"
                            },
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "pos": 6729,
                                "end": 6734,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Value to interpolate with translation.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAsynchronously validate the input value.\n",
                    "description": "<p>Asynchronously validate the input value.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5422,
                                "end": 5428,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "isBlur"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 5416,
                                "end": 5421,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Indicates if the input has lost focus.</li>\n</ul>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "SqInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents an input component for handling numeric values.</p>\n<p>This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling numeric input.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-input-number [(value)]=&#39;number&#39; [name]=&quot;&#39;number-input&#39;&quot; [id]=&quot;&#39;number-input&#39;&quot;&gt;&lt;/sq-input-number&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents an input component for handling numeric values.\n\nThis component extends the {@link SqInputComponent} and adds additional properties and behavior for handling numeric input.\n\n```html\n<sq-input-number [(value)]='number' [name]=\"'number-input'\" [id]=\"'number-input'\"></sq-input-number>\n```",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, EventEmitter, Input, Optional, Output, TemplateRef } from \"@angular/core\"\nimport { ValidatorHelper } from '../../helpers/validator.helper'\nimport { TranslateService } from \"@ngx-translate/core\"\nimport { SqInputComponent } from \"../sq-input/sq-input.component\"\n\n/**\n * Represents an input component for handling numeric values.\n *\n * This component extends the {@link SqInputComponent} and adds additional properties and behavior for handling numeric input.\n *\n * @example\n * <sq-input-number [(value)]='number' [name]=\"'number-input'\" [id]=\"'number-input'\"></sq-input-number>\n */\n@Component({\n  selector: 'sq-input-number',\n  templateUrl: './sq-input-number.component.html',\n  styleUrls: ['./sq-input-number.component.scss']\n})\nexport class SqInputNumberComponent extends SqInputComponent {\n  /**\n   * The value of the input element.\n   */\n  @Input()\n  public override set value(value: any) {\n    if (typeof value === 'number') {\n      this._value = value.toString()\n    } else {\n      this._value = value || ''\n    }\n  }\n  public override get value(): any {\n    return parseFloat(this._value)\n  }\n\n  /**\n   * The character used for thousand separators (e.g., ',' or '.').\n   */\n  @Input() thousandSeparator = '.'\n\n  /**\n   * Whether to display the input mask as the user types.\n   */\n  @Input() showMaskTyped = false\n\n  /**\n   * Whether to allow negative numbers.\n   */\n  @Input() allowNegativeNumbers = false\n\n  /**\n   * Whether to add a leading zero for single-digit numbers (e.g., '01' instead of '1').\n   */\n  @Input() leadZero = false\n\n  /**\n   * The character used as a placeholder for empty positions.\n   */\n  @Input() placeHolderCharacter = ''\n\n  /**\n   * The character used as a decimal marker (e.g., ',' or '.').\n   */\n  @Input() decimalMarker: \".\" | \",\" | [\".\", \",\"] = ','\n\n  /**\n   * Defines the minimum value that can be accepted as input.\n   */\n  @Input() minValue?: number\n\n  /**\n   * Defines the maximum value that can be accepted as input.\n   */\n  @Input() maxValue?: number\n\n  /**\n   * Event emitter for changes in the numeric value.\n   */\n  @Output() override valueChange: EventEmitter<number> = new EventEmitter()\n\n  /**\n   * Content child template for the left label override.\n   */\n  @ContentChild('leftLabelOverwrite')\n  leftLabelOverwrite: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Content child template for the right label override.\n   */\n  @ContentChild('rightLabelOverwrite')\n  rightLabelOverwrite: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to a label template.\n   */\n  @ContentChild('labelTemplate')\n  labelTemplateOverwrite: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to the native element.\n   */\n  override nativeElement: ElementRef\n\n  /**\n * Constructs a new instance of SqInputMaskComponent.\n * @param validatorHelper - The ValidatorHelper service for input validation.\n * @param element - Reference to the native element.\n * @param translate - The TranslateService for translation support (optional).\n */\n  constructor(\n    public override validatorHelper: ValidatorHelper,\n    element: ElementRef,\n    @Optional() public override translate: TranslateService,\n  ) {\n    super(validatorHelper, element, translate)\n    this.nativeElement = element.nativeElement\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sq-input-number.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new instance of SqInputMaskComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validatorHelper",
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 101,
                "rawdescription": "\n\nConstructs a new instance of SqInputMaskComponent.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2828,
                            "end": 2843,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "validatorHelper"
                        },
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2822,
                            "end": 2827,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ValidatorHelper service for input validation.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 2906,
                            "end": 2913,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2900,
                            "end": 2905,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Reference to the native element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 2959,
                            "end": 2968,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2953,
                            "end": 2958,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The TranslateService for translation support (optional).</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [
                "SqInputComponent"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 24,
                        "rawdescription": "\n\nThe value of the input element.\n",
                        "description": "<p>The value of the input element.</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "any",
                        "returnType": "any",
                        "line": 31
                    }
                }
            },
            "templateData": "<sq-input-mask\n  [value]=\"_value\"\n  [id]=\"id\"\n  [name]=\"name\"\n  mask=\"separator\"\n  [thousandSeparator]=\"thousandSeparator\"\n  [decimalMarker]=\"decimalMarker\"\n  [placeHolderCharacter]=\"placeHolderCharacter\"\n  [timeToChange]=\"timeToChange\"\n  [label]=\"label\"\n  [customClass]=\"customClass\"\n  [placeholder]=\"placeholder\"\n  [externalError]=\"externalError\"\n  [externalIcon]=\"externalIcon\"\n  [errorSpan]=\"errorSpan\"\n  [disabled]=\"disabled\"\n  [readonly]=\"readonly\"\n  [required]=\"required\"\n  [useFormErrors]=\"useFormErrors\"\n  [tooltipMessage]=\"tooltipMessage\"\n  [tooltipPlacement]=\"tooltipPlacement\"\n  [tooltipColor]=\"tooltipColor\"\n  [tooltipIcon]=\"tooltipIcon\"\n  [backgroundColor]=\"backgroundColor\"\n  [allowNegativeNumbers]=\"allowNegativeNumbers\"\n  [borderColor]=\"borderColor\"\n  [leadZero]=\"leadZero\"\n  [showMaskTyped]=\"showMaskTyped\"\n  [labelColor]=\"labelColor\"\n  [maxValue]=\"maxValue\"\n  [minValue]=\"minValue\"\n  inputMode=\"numeric\"\n  pattern=\"[0-9]*\"\n  (valueChange)=\"change($event)\"\n  (valid)=\"valid.emit($event)\"\n  (inFocus)=\"inFocus.emit($event)\"\n  (keyPressUp)=\"keyPressUp.emit($event)\"\n  (keyPressDown)=\"keyPressDown.emit($event)\"\n>\n<ng-container *ngIf=\"labelTemplateOverwrite\">\n  <ng-template #labelTemplate>\n    <ng-container *ngTemplateOutlet=\"labelTemplateOverwrite\"></ng-container>\n  </ng-template>\n</ng-container>\n  <ng-container *ngIf=\"leftLabelOverwrite\">\n    <ng-template #leftLabel>\n      <ng-container *ngTemplateOutlet=\"leftLabelOverwrite\"></ng-container>\n    </ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"rightLabelOverwrite\">\n    <ng-template #rightLabel>\n      <ng-container *ngTemplateOutlet=\"rightLabelOverwrite\"></ng-container>\n    </ng-template>\n  </ng-container>\n</sq-input-mask>\n"
        },
        {
            "name": "SqInputRangeComponent",
            "id": "component-SqInputRangeComponent-bad0c92654206de29334bd8af4882d2b4f0d3599ecc1abd4bd8022485b2bf7aedf5757cafe530df404562c50dd89f18b098a0f463e99c2f5c65cb655cd2b3629",
            "file": "src/components/sq-input-range/sq-input-range.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-input-range",
            "styleUrls": [
                "./sq-input-range.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-input-range.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'var(--pink)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color of the input component.\n",
                    "description": "<p>The color of the input component.</p>\n",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA custom CSS class to apply to the input element.\n",
                    "description": "<p>A custom CSS class to apply to the input element.</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to display an error message below the input.\n",
                    "description": "<p>Whether to display an error message below the input.</p>\n",
                    "line": 84,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "externalError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn external error message, if provided.\n",
                    "description": "<p>An external error message, if provided.</p>\n",
                    "line": 89,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the input element.\n",
                    "description": "<p>The id attribute for the input element.</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe label to display for the input.\n",
                    "description": "<p>The label to display for the input.</p>\n",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color of the input label.\n",
                    "description": "<p>The color of the input label.</p>\n",
                    "line": 79,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxNumber",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe maximum allowed value for the input.\n",
                    "description": "<p>The maximum allowed value for the input.</p>\n",
                    "line": 104,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minNumber",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe minimum allowed value for the input.\n",
                    "description": "<p>The minimum allowed value for the input.</p>\n",
                    "line": 99,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1326,
                            "end": 1371,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1327,
                                "end": 1334,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the input element.\n\n",
                    "description": "<p>The name attribute for the input element.</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether the input is read-only.\n",
                    "description": "<p>Whether the input is read-only.</p>\n",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether the input is required.\n",
                    "description": "<p>Whether the input is required.</p>\n",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe step value for the input.\n",
                    "description": "<p>The step value for the input.</p>\n",
                    "line": 94,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to use form-level error messages.\n",
                    "description": "<p>Whether to use form-level error messages.</p>\n",
                    "line": 109,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe initial value of the input.\n",
                    "description": "<p>The initial value of the input.</p>\n",
                    "line": 54,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for focusing or blurring the input.\n",
                    "description": "<p>Event emitter for focusing or blurring the input.</p>\n",
                    "line": 119,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for indicating the validity of the input.\n",
                    "description": "<p>Event emitter for indicating the validity of the input.</p>\n",
                    "line": 124,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for changes in the input value.\n",
                    "description": "<p>Event emitter for changes in the input value.</p>\n",
                    "line": 114,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>The error message associated with the input.</p>\n",
                    "line": 146,
                    "rawdescription": "\n\nThe error message associated with the input.\n"
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>A reference to the &#39;input&#39; element in the component template.</p>\n",
                    "line": 134,
                    "rawdescription": "\n\nA reference to the 'input' element in the component template.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 140,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>A reference to the native element of the component.</p>\n",
                    "line": 151,
                    "rawdescription": "\n\nA reference to the native element of the component.\n"
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- An optional instance of the `TranslateService` for internationalization.",
                    "line": 163,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "validatorHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorHelper",
                    "optional": false,
                    "description": "- An instance of the `ValidatorHelper` service.",
                    "line": 161,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "valueFloating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>A reference to the &#39;valueFloating&#39; element in the component template.</p>\n",
                    "line": 129,
                    "rawdescription": "\n\nA reference to the 'valueFloating' element in the component template.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'valueFloating'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle input value changes.\n",
                    "description": "<p>Handle input value changes.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5759,
                                "end": 5764,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5753,
                                "end": 5758,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The input change event.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "changeValuePosition",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 213,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the visual position of the input value based on the current value,\nminimum and maximum allowed values.\n",
                    "description": "<p>Changes the visual position of the input value based on the current value,\nminimum and maximum allowed values.</p>\n"
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook that runs after content initialization.\nIt sets a timeout to change the value position.\n",
                    "description": "<p>Lifecycle hook that runs after content initialization.\nIt sets a timeout to change the value position.</p>\n",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook that runs when changes occur in the component's input properties.\nIt recalculates the value position when value-related properties change.\n\n",
                    "description": "<p>Lifecycle hook that runs when changes occur in the component&#39;s input properties.\nIt recalculates the value position when value-related properties change.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4442,
                                "end": 4449,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4436,
                                "end": 4441,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>An object containing changes to input properties.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 239,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet an error message based on a translation key.\n",
                    "description": "<p>Set an error message based on a translation key.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6038,
                                "end": 6041,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6032,
                                "end": 6037,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates the input value.\n\n",
                    "description": "<p>Validates the input value.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4768,
                                "end": 4774,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "isBlur"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 4762,
                                "end": 4767,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Indicates whether the validation is triggered by blurring the input.</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents an input component for selecting a numeric value within a specified range.</p>\n<p>This component allows users to input a numeric value within a defined range and provides visual feedback for the selected value.</p>\n<br>\n<label for='id-exemple-range'>\n Example Input Range\n</label>\n<input\n  class='range mb-3'\n  name=\"name-exemple-range\"\n  id=\"id-exemple-range\"\n  type=\"range\"\n></input>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-input-range [name]=&#39;&quot;input-range&quot;&#39; [(value)]=&#39;number&#39; &gt;&lt;/sq-input-range&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents an input component for selecting a numeric value within a specified range.\n\nThis component allows users to input a numeric value within a defined range and provides visual feedback for the selected value.\n\n\n<br>\n<label for='id-exemple-range'>\n Example Input Range\n</label>\n<input\n  class='range mb-3'\n  name=\"name-exemple-range\"\n  id=\"id-exemple-range\"\n  type=\"range\"\n></input>\n\n```html\n<sq-input-range [name]='\"input-range\"' [(value)]='number' ></sq-input-range>\n```",
            "type": "component",
            "sourceCode": "import { AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, Input, OnChanges, Optional, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { ValidatorHelper } from '../../helpers/validator.helper'\nimport { sleep } from '../../helpers/sleep.helper'\n\n/**\n * Represents an input component for selecting a numeric value within a specified range.\n *\n * This component allows users to input a numeric value within a defined range and provides visual feedback for the selected value.\n * \n * @implements {AfterContentInit}\n * @implements {OnChanges}\n * \n * <br>\n * <label for='id-exemple-range'>\n *  Example Input Range\n * </label>\n * <input\n *   class='range mb-3'\n *   name=\"name-exemple-range\"\n *   id=\"id-exemple-range\"\n *   type=\"range\"\n * ></input>\n * \n * @example\n * <sq-input-range [name]='\"input-range\"' [(value)]='number' ></sq-input-range>\n */\n@Component({\n  selector: 'sq-input-range',\n  templateUrl: './sq-input-range.component.html',\n  styleUrls: ['./sq-input-range.component.scss']\n})\nexport class SqInputRangeComponent implements AfterContentInit, OnChanges {\n  /**\n   * A custom CSS class to apply to the input element.\n   */\n  @Input() customClass = ''\n\n  /**\n   * The name attribute for the input element.\n   * \n   * @default 'random-name-[hash-random-code]'\n   */\n  @Input() name = `random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`\n\n  /**\n   * The id attribute for the input element.\n   */\n  @Input() id?: string\n\n  /**\n   * The initial value of the input.\n   */\n  @Input() value: any = '0'\n\n  /**\n   * Whether the input is read-only.\n   */\n  @Input() readonly = false\n\n  /**\n   * Whether the input is required.\n   */\n  @Input() required = false\n\n  /**\n   * The label to display for the input.\n   */\n  @Input() label = ''\n\n  /**\n   * The color of the input component.\n   */\n  @Input() color = 'var(--pink)'\n\n  /**\n   * The color of the input label.\n   */\n  @Input() labelColor = ''\n\n  /**\n   * Whether to display an error message below the input.\n   */\n  @Input() errorSpan = true\n\n  /**\n   * An external error message, if provided.\n   */\n  @Input() externalError?: any\n\n  /**\n   * The step value for the input.\n   */\n  @Input() step = 1\n\n  /**\n   * The minimum allowed value for the input.\n   */\n  @Input() minNumber = 0\n\n  /**\n   * The maximum allowed value for the input.\n   */\n  @Input() maxNumber = 100\n\n  /**\n   * Whether to use form-level error messages.\n   */\n  @Input() useFormErrors = true\n\n  /**\n   * Event emitter for changes in the input value.\n   */\n  @Output() valueChange: EventEmitter<any> = new EventEmitter()\n\n  /**\n   * Event emitter for focusing or blurring the input.\n   */\n  @Output() inFocus: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * Event emitter for indicating the validity of the input.\n   */\n  @Output() valid: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * A reference to the 'valueFloating' element in the component template.\n   */\n  @ViewChild('valueFloating') valueFloating!: ElementRef\n\n  /**\n   * A reference to the 'input' element in the component template.\n   */\n  @ViewChild('input') input!: ElementRef\n\n  /**\n   * Reference to a label template.\n   */\n  @ContentChild('labelTemplate')\n  labelTemplate: TemplateRef<HTMLElement> | null = null\n\n\n  /**\n   * The error message associated with the input.\n   */\n  error: boolean | string = false\n\n  /**\n   * A reference to the native element of the component.\n   */\n  nativeElement: ElementRef\n\n  /**\n   * Creates an instance of `SqInputRangeComponent`.\n   *\n   * @param validatorHelper - An instance of the `ValidatorHelper` service.\n   * @param element - A reference to the element hosting the component.\n   * @param translate - An optional instance of the `TranslateService` for internationalization.\n   */\n  constructor(\n    public validatorHelper: ValidatorHelper,\n    element: ElementRef,\n    @Optional() public translate: TranslateService,\n  ) {\n    this.nativeElement = element.nativeElement\n  }\n\n  /**\n   * Lifecycle hook that runs after content initialization.\n   * It sets a timeout to change the value position.\n   */\n  async ngAfterContentInit() {\n    await sleep()\n    this.changeValuePosition()\n  }\n\n  /**\n   * Lifecycle hook that runs when changes occur in the component's input properties.\n   * It recalculates the value position when value-related properties change.\n   *\n   * @param changes - An object containing changes to input properties.\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('value') || changes.hasOwnProperty('minNumber') || changes.hasOwnProperty('maxNumber')) {\n      this.changeValuePosition()\n    }\n  }\n\n  /**\n   * Validates the input value.\n   *\n   * @param isBlur - Indicates whether the validation is triggered by blurring the input.\n   */\n  validate(isBlur = false) {\n    if (this.externalError) {\n      this.error = false\n    } else if (!!this.required && !this.value && this.value !== '0') {\n      this.setError('forms.required')\n      this.valid.emit(false)\n    } else {\n      this.valid.emit(true)\n      this.error = ''\n    }\n    if (isBlur) {\n      this.inFocus.emit(false)\n    }\n  }\n\n  /**\n   * Changes the visual position of the input value based on the current value,\n   * minimum and maximum allowed values.\n   */\n  changeValuePosition() {\n    const val = parseFloat(this.value)\n    const min = this.minNumber ? this.minNumber : 0\n    const max = this.maxNumber ? this.maxNumber : 100\n    const newVal = Number(((val - min) * 100) / (max - min))\n    if (this.valueFloating) {\n      this.valueFloating.nativeElement.style.left = `calc(${newVal}% + (${10 - newVal * 0.36}px))`\n    }\n  }\n\n  /**\n   * Handle input value changes.\n   * @param event - The input change event.\n   */\n  change(event: any): void {\n    this.inFocus.emit(true)\n    this.changeValuePosition()\n    this.value = event\n    this.valueChange.emit(event)\n    this.validate()\n  }\n\n  /**\n   * Set an error message based on a translation key.\n   * @param key - The translation key for the error message.\n   */\n  async setError(key: string) {\n    if (this.useFormErrors && this.translate) {\n      this.error = await this.translate.instant(key)\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-all-inside-input {\n  position: relative;\n  &.no-label{\n    margin-top: 2rem;\n  }\n  label {\n    margin: 0 auto 2.5rem;\n  }\n  input[type='range'] {\n    border-radius: 12px;\n  }\n  .value-floating {\n    position: absolute;\n    bottom: 26px;\n    font-size: 0.86rem;\n    line-height: 1;\n    left: 10px;\n  }\n  .box-validation {\n    margin-top: 0.5rem;\n  }\n  .wrapper-input.wrapper-input-squid {\n    position: relative;\n  }\n}\n",
                    "styleUrl": "./sq-input-range.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Creates an instance of <code>SqInputRangeComponent</code>.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validatorHelper",
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 151,
                "rawdescription": "\n\nCreates an instance of `SqInputRangeComponent`.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 3611,
                            "end": 3626,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "validatorHelper"
                        },
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3605,
                            "end": 3610,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>An instance of the <code>ValidatorHelper</code> service.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 3687,
                            "end": 3694,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3681,
                            "end": 3686,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>A reference to the element hosting the component.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 3759,
                            "end": 3768,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3753,
                            "end": 3758,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>An optional instance of the <code>TranslateService</code> for internationalization.</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterContentInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"wrapper-all-inside-input {{ customClass }}\" [ngClass]=\"{\n  'no-label': !label.length\n}\">\n  <label\n    class=\"display-flex\"\n    *ngIf=\"label?.length || labelTemplate\"\n    [ngClass]=\"{\n      readonly: readonly\n    }\"\n    [for]=\"id\"\n  >\n    <div *ngIf=\"label?.length && !labelTemplate\" [ngStyle]=\"{ 'color': labelColor }\" [innerHtml]=\"label | universalSafe\"></div>\n  </label>\n  <div *ngIf=\"labelTemplate\">\n    <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n  </div>\n  <div\n    class=\"p-0 wrapper-input wrapper-input-squid\"\n    [ngClass]=\"{\n      error: (externalError && externalError !== '') || (error && error !== ''),\n    }\"\n  >\n    <output class=\"value-floating\" #valueFloating>\n      {{ value }}\n    </output>\n    <input\n      [id]=\"id\"\n      type=\"range\"\n      class=\"range\"\n      [name]=\"name\"\n      [step]=\"step\"\n      [required]=\"required\"\n      [disabled]=\"readonly\"\n      [min]=\"minNumber || ''\"\n      [max]=\"maxNumber || ''\"\n      (blur)=\"validate(true)\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      ngDefaultControl\n      #input\n    />\n  </div>\n  <div class=\"box-validation box-invalid show\" *ngIf=\"errorSpan\">\n    <i [ngClass]=\"{\n      'visibility-hidden-force': !error && !externalError\n    }\" class=\"fa-solid fa-triangle-exclamation\"></i>\n    {{ externalError ? externalError : '' }}\n    {{ error && !externalError ? error : '' }}\n  </div>\n</div>\n"
        },
        {
            "name": "SqLoaderComponent",
            "id": "component-SqLoaderComponent-00a32650c5c4fff29e2f6e0b55730e71c354054fb9ad39ed08f16b57c297b4827f8263ca6e2c170e810e2f3840fdb14b31b57eba261b5e248b0c6d3431d07a75",
            "file": "src/components/sq-loader/sq-loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-loader",
            "styleUrls": [
                "./sq-loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-loader.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "borderSize",
                    "defaultValue": "'0.20em'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1129,
                            "end": 1150,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1130,
                                "end": 1137,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;0.20em&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe border size of the loading spinner.\n",
                    "description": "<p>The border size of the loading spinner.</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'var(--primary_color)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1237,
                            "end": 1274,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1238,
                                "end": 1245,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;var(--primary_color)&#39;</p>\n"
                        },
                        {
                            "pos": 1274,
                            "end": 1296,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1275,
                                "end": 1282,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "example"
                            },
                            "comment": "<p>&#39;#ff9900&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe color of the loading spinner.\n```html\n```",
                    "description": "<p>The color of the loading spinner.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\"></code></pre></div>",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class to be applied to the loading spinner element.\n",
                    "description": "<p>Custom CSS class to be applied to the loading spinner element.</p>\n",
                    "line": 55,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1019,
                            "end": 1038,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1020,
                                "end": 1027,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "example"
                            },
                            "comment": "<p>&#39;30px&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nCustom size of the loading spinner (apply width and height style rules).\n```html\n```",
                    "description": "<p>Custom size of the loading spinner (apply width and height style rules).</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\"></code></pre></div>",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'small'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 846,
                            "end": 866,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 847,
                                "end": 854,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;small&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe size of the loading spinner.\n",
                    "description": "<p>The size of the loading spinner.</p>\n",
                    "line": 31,
                    "type": "\"small\" | \"bigger\" | \"big\" | string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents the SqLoaderComponent which displays a loading spinner with customizable options.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/loader%7D\">https://css.squidit.com.br/components/loader}</a></p>\n<br>\n<div class=\"loader mb-3\" role=\"status\">\n  <span class=\"visually-hidden\">Loading...</span>\n</div>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-loader size=&quot;small&quot; color=&quot;var(--blue)&quot; customClass=&quot;custom-spinner&quot;&gt;&lt;/sq-loader&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-loader size=&quot;bigger&quot; customSize=&quot;30px&quot; borderSize=&quot;0.15em&quot; color=&quot;#ff9900&quot;&gt;&lt;/sq-loader&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents the SqLoaderComponent which displays a loading spinner with customizable options.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/loader}\n\n<br>\n<div class=\"loader mb-3\" role=\"status\">\n  <span class=\"visually-hidden\">Loading...</span>\n</div>\n\n```html\n<sq-loader size=\"small\" color=\"var(--blue)\" customClass=\"custom-spinner\"></sq-loader>\n```\n```html\n<sq-loader size=\"bigger\" customSize=\"30px\" borderSize=\"0.15em\" color=\"#ff9900\"></sq-loader>\n```",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\n\n/**\n * Represents the SqLoaderComponent which displays a loading spinner with customizable options.\n * \n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/components/loader}\n * \n * <br>\n * <div class=\"loader mb-3\" role=\"status\">\n *   <span class=\"visually-hidden\">Loading...</span>\n * </div>\n * \n * @example\n * <sq-loader size=\"small\" color=\"var(--blue)\" customClass=\"custom-spinner\"></sq-loader>\n *\n * @example\n * <sq-loader size=\"bigger\" customSize=\"30px\" borderSize=\"0.15em\" color=\"#ff9900\"></sq-loader>\n */\n@Component({\n  selector: 'sq-loader',\n  templateUrl: './sq-loader.component.html',\n  styleUrls: ['./sq-loader.component.scss'],\n})\nexport class SqLoaderComponent {\n  /**\n   * The size of the loading spinner.\n   * @default 'small'\n   */\n  @Input() size?: 'small' | 'bigger' | 'big' | '' = 'small'\n\n  /**\n   * Custom size of the loading spinner (apply width and height style rules).\n   * @example '30px'\n   */\n  @Input() customSize?: string\n\n  /**\n   * The border size of the loading spinner.\n   * @default '0.20em'\n   */\n  @Input() borderSize = '0.20em'\n\n  /**\n   * The color of the loading spinner.\n   * @default 'var(--primary_color)'\n   * @example '#ff9900'\n   */\n  @Input() color = 'var(--primary_color)'\n\n  /**\n   * Custom CSS class to be applied to the loading spinner element.\n   */\n  @Input() customClass = ''\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sq-loader.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"loader {{ size }} {{ customClass }}\"\n  role=\"status\"\n  [ngStyle]=\"{\n    'border-width': borderSize,\n    height: customSize,\n    width: customSize,\n    'border-color': color\n  }\"\n>\n  <span class=\"visually-hidden\">Loading...</span>\n</div>\n"
        },
        {
            "name": "SqModalComponent",
            "id": "component-SqModalComponent-da55194763e435b5d60d5165e93138be29122c56ceced76daafa17414e047b4f308bf158fb025bbc8fa8ee719353158d5fad6f37696c4dfffb0334ee65b9f5f1",
            "file": "src/components/sq-modal/sq-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-modal",
            "styleUrls": [
                "./sq-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backdrop",
                    "defaultValue": "'static'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines whether clicking outside the modal closes it. Options: 'static' (no close), 'true' (close).\n",
                    "description": "<p>Determines whether clicking outside the modal closes it. Options: &#39;static&#39; (no close), &#39;true&#39; (close).</p>\n",
                    "line": 79,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "backdropClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdditional CSS classes to apply to the modal backdrop element.\n",
                    "description": "<p>Additional CSS classes to apply to the modal backdrop element.</p>\n",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bodyBackgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the body background color.\n",
                    "description": "<p>Determines the body background color.</p>\n",
                    "line": 109,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bodyPadding",
                    "defaultValue": "'0 1rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the body padding.\n",
                    "description": "<p>Determines the body padding.</p>\n",
                    "line": 94,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonClose",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines whether to display the close button.\n",
                    "description": "<p>Determines whether to display the close button.</p>\n",
                    "line": 84,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "footerBackgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the footer background color.\n",
                    "description": "<p>Determines the footer background color.</p>\n",
                    "line": 114,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "footerPadding",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the footer padding.\n",
                    "description": "<p>Determines the footer padding.</p>\n",
                    "line": 99,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerBackgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the header background color.\n",
                    "description": "<p>Determines the header background color.</p>\n",
                    "line": 104,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerPadding",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines the header padding.\n",
                    "description": "<p>Determines the header padding.</p>\n",
                    "line": 89,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "`modal-random-id-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA unique identifier for the modal component.\n",
                    "description": "<p>A unique identifier for the modal component.</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "modalClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdditional CSS classes to apply to the modal element.\n",
                    "description": "<p>Additional CSS classes to apply to the modal element.</p>\n",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "modalSize",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe size of the modal, which can be 'sm' (small), 'md' (medium), 'lg' (large), or 'xl' (extra large).\n",
                    "description": "<p>The size of the modal, which can be &#39;sm&#39; (small), &#39;md&#39; (medium), &#39;lg&#39; (large), or &#39;xl&#39; (extra large).</p>\n",
                    "line": 64,
                    "type": "\"sm\" | \"md\" | \"lg\" | \"xl\" | string",
                    "decorators": []
                },
                {
                    "name": "open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the modal should be open or closed.\n",
                    "description": "<p>Indicates whether the modal should be open or closed.</p>\n",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "leftPress",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the left arrow key is pressed while the modal is open.\n",
                    "description": "<p>Event emitted when the left arrow key is pressed while the modal is open.</p>\n",
                    "line": 124,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "modalClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the modal is closed.\n",
                    "description": "<p>Event emitted when the modal is closed.</p>\n",
                    "line": 119,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "rightPress",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the right arrow key is pressed while the modal is open.\n",
                    "description": "<p>Event emitted when the right arrow key is pressed while the modal is open.</p>\n",
                    "line": 129,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "document",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Document",
                    "optional": false,
                    "description": "<p>Reference to the Document object for interacting with the DOM.</p>\n",
                    "line": 164,
                    "rawdescription": "\n\nReference to the Document object for interacting with the DOM.\n"
                },
                {
                    "name": "documentImported",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Document",
                    "optional": false,
                    "description": "- The injected Document object for DOM manipulation.",
                    "line": 189,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DOCUMENT"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "footerTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<ElementRef> | null",
                    "optional": true,
                    "description": "<p>Reference to the footer template provided in the component&#39;s content.</p>\n",
                    "line": 144,
                    "rawdescription": "\n\nReference to the footer template provided in the component's content.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'footerModal'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "getWindow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GetWindow",
                    "optional": false,
                    "description": "- The GetWindow service for safely accessing the window object.",
                    "line": 189,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "hasHeader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the modal has a header template.</p>\n",
                    "line": 159,
                    "rawdescription": "\n\nIndicates whether the modal has a header template.\n"
                },
                {
                    "name": "headerTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<ElementRef> | null",
                    "optional": true,
                    "description": "<p>Reference to the header template provided in the component&#39;s content.</p>\n",
                    "line": 139,
                    "rawdescription": "\n\nReference to the header template provided in the component's content.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'headerModal'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "localized",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "URL",
                    "optional": false,
                    "description": "<p>Indicates the origin path from modal.</p>\n",
                    "line": 170,
                    "rawdescription": "\n\nIndicates the origin path from modal.\n\n"
                },
                {
                    "name": "modal",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | null",
                    "optional": false,
                    "description": "<p>Reference to the modal element in the component&#39;s template.</p>\n",
                    "line": 134,
                    "rawdescription": "\n\nReference to the modal element in the component's template.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'modal'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "modalNumber",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>The number of open modals in the document.</p>\n",
                    "line": 154,
                    "rawdescription": "\n\nThe number of open modals in the document.\n"
                },
                {
                    "name": "modals",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLCollectionOf<Element> | undefined",
                    "optional": false,
                    "description": "<p>HTML collection of modal elements in the document.</p>\n",
                    "line": 149,
                    "rawdescription": "\n\nHTML collection of modal elements in the document.\n"
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "- The Router service for programmatic navigation.",
                    "line": 189,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "routerObservable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "<p>A subscription to the router change url.</p>\n",
                    "line": 175,
                    "rawdescription": "\n\nA subscription to the router change url.\n"
                },
                {
                    "name": "scrollY",
                    "defaultValue": "this.getWindow?.window()?.scrollY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates the scroll position of the window.</p>\n",
                    "line": 180,
                    "rawdescription": "\n\nIndicates the scroll position of the window.\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "events",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 295,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles specific keyboard events.\n\n",
                    "description": "<p>Handles specific keyboard events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8279,
                                "end": 8282,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8273,
                                "end": 8278,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The key code of the pressed key.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook that detects changes to the 'open' input property and handles modal behavior accordingly.\n\n",
                    "description": "<p>Lifecycle hook that detects changes to the &#39;open&#39; input property and handles modal behavior accordingly.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5030,
                                "end": 5037,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5024,
                                "end": 5029,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The changes detected in the component&#39;s input properties.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 235,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPerforms actions before the component is destroyed.\n",
                    "description": "<p>Performs actions before the component is destroyed.</p>\n"
                },
                {
                    "name": "observeRouter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFunction that init the routerObservable.\n",
                    "description": "<p>Function that init the routerObservable.</p>\n"
                },
                {
                    "name": "onKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 281,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles keyboard events for the modal component.\n\n",
                    "description": "<p>Handles keyboard events for the modal component.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7949,
                                "end": 7954,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7943,
                                "end": 7948,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyboard event object.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "removeModalFromBody",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 257,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves the modal element from document body.\n",
                    "description": "<p>Removes the modal element from document body.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a modal component with customizable options and event handling.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/modal%7D\">https://css.squidit.com.br/components/modal}</a></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-modal [open]=&quot;isModalOpen&quot; (modalClose)=&quot;onModalClose()&quot;&gt;\n  &lt;ng-template #headerModal&gt;\n    &lt;h2&gt;Title&lt;/h2&gt;\n  &lt;/ng-template&gt;\n  &lt;div&gt;\n    &lt;!-- Your content here --&gt;\n  &lt;/div&gt;\n   &lt;ng-template #footerModal&gt;\n    Footer\n  &lt;/ng-template&gt;\n&lt;/sq-modal&gt;\n&lt;button (click)=&#39;isModalOpen = true&#39;&gt;Open Modal&lt;/button&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a modal component with customizable options and event handling.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/modal}\n\n```html\n<sq-modal [open]=\"isModalOpen\" (modalClose)=\"onModalClose()\">\n  <ng-template #headerModal>\n    <h2>Title</h2>\n  </ng-template>\n  <div>\n    <!-- Your content here -->\n  </div>\n   <ng-template #footerModal>\n    Footer\n  </ng-template>\n</sq-modal>\n<button (click)='isModalOpen = true'>Open Modal</button>\n```\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common'\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core'\nimport { sleep } from '../../helpers/sleep.helper'\nimport { NavigationStart, Router } from '@angular/router'\nimport { Subscription } from 'rxjs'\nimport { GetWindow } from '../../helpers/window.helper'\n\n/**\n * Represents a modal component with customizable options and event handling.\n *\n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/components/modal}\n *\n * @example\n * <sq-modal [open]=\"isModalOpen\" (modalClose)=\"onModalClose()\">\n *   <ng-template #headerModal>\n *     <h2>Title</h2>\n *   </ng-template>\n *   <div>\n *     <!-- Your content here -->\n *   </div>\n*    <ng-template #footerModal>\n *     Footer\n *   </ng-template>\n * </sq-modal>\n * <button (click)='isModalOpen = true'>Open Modal</button>\n *\n * @implements {OnChanges}\n * @implements {OnDestroy}\n */\n@Component({\n  selector: 'sq-modal',\n  templateUrl: './sq-modal.component.html',\n  styleUrls: ['./sq-modal.component.scss'],\n})\nexport class SqModalComponent implements OnChanges, OnDestroy {\n  /**\n   * A unique identifier for the modal component.\n   */\n  @Input() id = `modal-random-id-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`\n\n  /**\n   * Indicates whether the modal should be open or closed.\n   */\n  @Input() open?: boolean\n\n  /**\n   * The size of the modal, which can be 'sm' (small), 'md' (medium), 'lg' (large), or 'xl' (extra large).\n   */\n  @Input() modalSize: 'sm' | 'md' | 'lg' | 'xl' | '' = 'md'\n\n  /**\n   * Additional CSS classes to apply to the modal element.\n   */\n  @Input() modalClass?: string\n\n  /**\n   * Additional CSS classes to apply to the modal backdrop element.\n   */\n  @Input() backdropClass?: string\n\n  /**\n   * Determines whether clicking outside the modal closes it. Options: 'static' (no close), 'true' (close).\n   */\n  @Input() backdrop = 'static'\n\n  /**\n   * Determines whether to display the close button.\n   */\n  @Input() buttonClose = true\n\n  /**\n   * Determines the header padding.\n   */\n  @Input() headerPadding = ''\n\n  /**\n   * Determines the body padding.\n   */\n  @Input() bodyPadding = '0 1rem'\n\n  /**\n   * Determines the footer padding.\n   */\n  @Input() footerPadding = ''\n\n  /**\n   * Determines the header background color.\n   */\n  @Input() headerBackgroundColor = ''\n\n  /**\n   * Determines the body background color.\n   */\n  @Input() bodyBackgroundColor = ''\n\n  /**\n   * Determines the footer background color.\n   */\n  @Input() footerBackgroundColor = ''\n\n  /**\n   * Event emitted when the modal is closed.\n   */\n  @Output() modalClose: EventEmitter<void> = new EventEmitter()\n\n  /**\n   * Event emitted when the left arrow key is pressed while the modal is open.\n   */\n  @Output() leftPress: EventEmitter<void> = new EventEmitter()\n\n  /**\n   * Event emitted when the right arrow key is pressed while the modal is open.\n   */\n  @Output() rightPress: EventEmitter<void> = new EventEmitter()\n\n  /**\n   * Reference to the modal element in the component's template.\n   */\n  @ViewChild('modal') modal: ElementRef | null = null\n\n  /**\n   * Reference to the header template provided in the component's content.\n   */\n  @ContentChild('headerModal') headerTemplate?: TemplateRef<ElementRef> | null = null\n\n  /**\n   * Reference to the footer template provided in the component's content.\n   */\n  @ContentChild('footerModal') footerTemplate?: TemplateRef<ElementRef> | null = null\n\n  /**\n   * HTML collection of modal elements in the document.\n   */\n  modals: HTMLCollectionOf<Element> | undefined\n\n  /**\n   * The number of open modals in the document.\n   */\n  modalNumber = 0\n\n  /**\n   * Indicates whether the modal has a header template.\n   */\n  hasHeader = false\n\n  /**\n   * Reference to the Document object for interacting with the DOM.\n   */\n  document: Document\n\n  /**\n   * Indicates the origin path from modal.\n   *\n   */\n  localized: URL\n\n  /**\n   * A subscription to the router change url.\n   */\n  routerObservable!: Subscription\n\n  /**\n   * Indicates the scroll position of the window.\n   */\n  scrollY = this.getWindow?.window()?.scrollY\n\n  /**\n   * Creates an instance of `SqModalComponent`.\n   * @constructor\n   * @param {Document} documentImported - The injected Document object for DOM manipulation.\n   * @param {Router} router - The Router service for programmatic navigation.\n   * @param {GetWindow} getWindow - The GetWindow service for safely accessing the window object.\n   */\n  constructor(@Inject(DOCUMENT) public documentImported: Document, public router: Router, public getWindow: GetWindow) {\n    this.onKeydown = this.onKeydown.bind(this)\n    this.document = documentImported || document\n    this.localized = new URL(this.getWindow.href())\n  }\n\n  /**\n   * Lifecycle hook that detects changes to the 'open' input property and handles modal behavior accordingly.\n   *\n   * @param changes - The changes detected in the component's input properties.\n   */\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('open')) {\n      const modal = this.modal\n      if (modal) {\n        const body = this.document.getElementsByTagName('body')[0]\n        const backdrop = this.document.getElementById('modal-backdrop') || this.document.createElement('div')\n        if (this.open) {\n          this.scrollY = this.getWindow?.window()?.scrollY\n          body.appendChild(modal.nativeElement)\n          this.observeRouter()\n          this.hasHeader = !!this.headerTemplate\n          body.classList.add('block')\n          modal.nativeElement.style.display = 'flex'\n          this.getWindow?.window()?.addEventListener('keydown', this.onKeydown)\n          this.modals = this.document.getElementsByClassName('modal open')\n          await sleep(10)\n          this.modalNumber = this.modals?.length || 0\n          if (this.modalNumber <= 1) {\n            backdrop.setAttribute('id', 'modal-backdrop')\n            backdrop.setAttribute('class', 'modal-backdrop show')\n            body.appendChild(backdrop)\n          } else if (this.modalNumber > 1) {\n            modal.nativeElement.style.zIndex = 1060 + this.modalNumber + 1\n            backdrop.setAttribute('style', `z-index: ${1060 + this.modalNumber};`)\n          }\n        } else {\n          this.removeModalFromBody()\n        }\n      }\n    }\n  }\n\n  /**\n   * Performs actions before the component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this.routerObservable?.unsubscribe()\n  }\n\n  /**\n   * Function that init the routerObservable.\n   */\n  observeRouter() {\n    this.routerObservable = this.router.events.subscribe(async (event) => {\n      if (event instanceof NavigationStart) {\n        const destinationRoute = new URL(event.url, this.localized.origin)\n        if ((this.localized.origin + this.localized.pathname) !== (destinationRoute.origin + destinationRoute.pathname)) {\n          this.removeModalFromBody()\n          await sleep(1000)\n        }\n      }\n    })\n  }\n\n  /**\n   * Removes the modal element from document body.\n   */\n  removeModalFromBody() {\n    const body = this.document.getElementsByTagName('body')[0]\n    if (this.modalNumber <= 1) {\n      body?.classList?.remove('block')\n      if (this.getWindow?.window()?.scrollY !== this.scrollY) {\n        if (this.scrollY) this.getWindow?.window()?.scrollTo(0, this.scrollY)\n      }\n    }\n    const backdrop = this.document.getElementById('modal-backdrop')\n    const modal = this.document.getElementById(this.id)\n    this.modalClose.emit()\n    backdrop?.removeAttribute('style')\n    modal?.parentNode?.removeChild(modal)\n    if (this.modalNumber <= 1) {\n      backdrop?.parentNode?.removeChild(backdrop)\n    }\n    this.getWindow?.window()?.removeEventListener('keydown', this.onKeydown)\n  }\n\n  /**\n   * Handles keyboard events for the modal component.\n   *\n   * @param event - The keyboard event object.\n   */\n  onKeydown(event: KeyboardEvent) {\n    if (this.open) {\n      this.modals = this.document.getElementsByClassName('modal')\n      if (this.modals?.length === this.modalNumber) {\n        this.events(event.key)\n      }\n    }\n  }\n\n  /**\n   * Handles specific keyboard events.\n   *\n   * @param key - The key code of the pressed key.\n   */\n  events(key: string) {\n    switch (key) {\n      case 'Escape':\n        this.modalClose.emit()\n        break\n      case 'ArrowLeft':\n        this.leftPress.emit()\n        break\n      case 'ArrowRight':\n        this.rightPress.emit()\n        break\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".modal {\r\n  &.need-priority {\r\n    z-index: 1081;\r\n  }\r\n  .modal-sq {\r\n    border-radius: 4px;\r\n    .modal-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    .without-header {\r\n      padding: 0 0.08rem;\r\n      border: none;\r\n      justify-content: flex-end;\r\n      button.close {\r\n        z-index: 1;\r\n        position: relative;\r\n        top: 5px;\r\n        left: -4px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./sq-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Creates an instance of <code>SqModalComponent</code>.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "documentImported",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getWindow",
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 180,
                "rawdescription": "\n\nCreates an instance of `SqModalComponent`.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4371,
                            "end": 4387,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "documentImported"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4354,
                            "end": 4359,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The injected Document object for DOM manipulation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4360,
                            "end": 4370,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4361,
                                "end": 4369,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4361,
                                    "end": 4369,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Document"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 4462,
                            "end": 4468,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4447,
                            "end": 4452,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Router service for programmatic navigation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4453,
                            "end": 4461,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4454,
                                "end": 4460,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4454,
                                    "end": 4460,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Router"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 4543,
                            "end": 4552,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "getWindow"
                        },
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4525,
                            "end": 4530,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The GetWindow service for safely accessing the window object.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4531,
                            "end": 4542,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4532,
                                "end": 4541,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4532,
                                    "end": 4541,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "GetWindow"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<div\r\n  class=\"modal align-items-center {{ backdropClass }}\"\r\n  [id]=\"id\"\r\n  [ngClass]=\"{\r\n    open: open,\r\n  }\"\r\n  #modal\r\n>\r\n  <div\r\n    class=\"modal-dialog modal-{{ modalSize }} {{ modalClass }}\"\r\n    [clickOutsideEnabled]=\"!!(open && backdrop !== 'static' && modal)\"\r\n    (clickOutside)=\"modalClose.emit()\"\r\n  >\r\n    <div class=\"modal-content modal-sq\">\r\n      <div\r\n        class=\"modal-header\"\r\n        [ngClass]=\"{\r\n          'without-header': !hasHeader\r\n        }\"\r\n        [ngStyle]=\"{\r\n          background: headerBackgroundColor,\r\n          padding: headerPadding\r\n        }\"\r\n      >\r\n        <ng-container *ngIf=\"headerTemplate\">\r\n          <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n        </ng-container>\r\n        <button\r\n          *ngIf=\"buttonClose\"\r\n          type=\"button\"\r\n          class=\"close button-close\"\r\n          aria-label=\"Close\"\r\n          (click)=\"modalClose.emit()\"\r\n        >\r\n          <i class=\"fa-solid fa-xmark fa-lg\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"modal-body scrollbar\"\r\n        [ngStyle]=\"{ background: bodyBackgroundColor, padding: bodyPadding }\"\r\n      >\r\n        <ng-content></ng-content>\r\n      </div>\r\n\r\n      <div\r\n        class=\"modal-footer\"\r\n        [ngStyle]=\"{\r\n          background: footerBackgroundColor,\r\n          padding: footerPadding\r\n        }\"\r\n        *ngIf=\"footerTemplate\"\r\n      >\r\n        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SqOverlayComponent",
            "id": "component-SqOverlayComponent-00b6955c84d7fba0c48b0c364fc13919a2e318456bf020a5b5e07cc8dc01b90ba6e6312aa4f26713a2082a40b6ef69e09c44cb743f8030706b90ee8423732200",
            "file": "src/components/sq-overlay/sq-overlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-overlay",
            "styleUrls": [
                "./sq-overlay.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-overlay.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backdrop",
                    "defaultValue": "'static'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSpecifies the behavior of the backdrop when clicked.\n\n",
                    "description": "<p>Specifies the behavior of the backdrop when clicked.</p>\n",
                    "line": 110,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bodyColor",
                    "defaultValue": "'var(--background_secondary)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the overlay body.\n\n",
                    "description": "<p>The background color of the overlay body.</p>\n",
                    "line": 98,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderless",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines whether the overlay has a border.\n\n",
                    "description": "<p>Determines whether the overlay has a border.</p>\n",
                    "line": 74,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "footerColor",
                    "defaultValue": "'var(--background_secondary)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the overlay footer.\n\n",
                    "description": "<p>The background color of the overlay footer.</p>\n",
                    "line": 92,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerColor",
                    "defaultValue": "'var(--background_secondary)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the overlay header.\n\n",
                    "description": "<p>The background color of the overlay header.</p>\n",
                    "line": 80,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerItemsColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe text color of items within the overlay header.\n\n",
                    "description": "<p>The text color of items within the overlay header.</p>\n",
                    "line": 86,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "`overlay-random-id-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA unique identifier for the overlay.\n",
                    "description": "<p>A unique identifier for the overlay.</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the overlay is open or closed.\n\n",
                    "description": "<p>Indicates whether the overlay is open or closed.</p>\n",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "overlayDirection",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe direction in which the overlay slides in when opened.\n\n",
                    "description": "<p>The direction in which the overlay slides in when opened.</p>\n",
                    "line": 62,
                    "type": "\"right\" | \"left\"",
                    "decorators": []
                },
                {
                    "name": "showClose",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermines whether the close button is shown.\n\n",
                    "description": "<p>Determines whether the close button is shown.</p>\n",
                    "line": 104,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "'475px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe width of the overlay.\n\n",
                    "description": "<p>The width of the overlay.</p>\n",
                    "line": 68,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "leftPress",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits an event when the left arrow key is pressed.\n\n",
                    "description": "<p>Emits an event when the left arrow key is pressed.</p>\n",
                    "line": 122,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "overlayClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits an event when the overlay is closed.\n\n",
                    "description": "<p>Emits an event when the overlay is closed.</p>\n",
                    "line": 116,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "rightPress",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits an event when the right arrow key is pressed.\n\n",
                    "description": "<p>Emits an event when the right arrow key is pressed.</p>\n",
                    "line": 128,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "document",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Document",
                    "optional": false,
                    "description": "<p>A reference to the Document object.</p>\n",
                    "line": 176,
                    "rawdescription": "\n\nA reference to the Document object.\n\n"
                },
                {
                    "name": "documentImported",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Document",
                    "optional": false,
                    "description": "- The injected Document object for DOM manipulation.",
                    "line": 213,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DOCUMENT"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "finishOpening",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the overlay has finished opening.</p>\n",
                    "line": 188,
                    "rawdescription": "\n\nIndicates whether the overlay has finished opening.\n\n"
                },
                {
                    "name": "footerTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<ElementRef> | null",
                    "optional": true,
                    "description": "<p>A reference to the footer template.</p>\n",
                    "line": 146,
                    "rawdescription": "\n\nA reference to the footer template.\n\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'footerTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "getWindow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GetWindow",
                    "optional": false,
                    "description": "- The GetWindow service for safely accessing the window object.",
                    "line": 213,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "hasFooter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the overlay has a footer.</p>\n",
                    "line": 170,
                    "rawdescription": "\n\nIndicates whether the overlay has a footer.\n\n"
                },
                {
                    "name": "hasHeader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the overlay has a header.</p>\n",
                    "line": 164,
                    "rawdescription": "\n\nIndicates whether the overlay has a header.\n\n"
                },
                {
                    "name": "headerTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<ElementRef> | null",
                    "optional": true,
                    "description": "<p>A reference to the header template.</p>\n",
                    "line": 140,
                    "rawdescription": "\n\nA reference to the header template.\n\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'headerTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "localized",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "URL",
                    "optional": false,
                    "description": "<p>Indicates the origin path from overlay.</p>\n",
                    "line": 194,
                    "rawdescription": "\n\nIndicates the origin path from overlay.\n\n"
                },
                {
                    "name": "modalNumber",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>The number of modal elements.</p>\n",
                    "line": 158,
                    "rawdescription": "\n\nThe number of modal elements.\n\n"
                },
                {
                    "name": "modals",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLCollectionOf<Element> | undefined",
                    "optional": false,
                    "description": "<p>A collection of modal elements.</p>\n",
                    "line": 152,
                    "rawdescription": "\n\nA collection of modal elements.\n\n"
                },
                {
                    "name": "overlay",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | null",
                    "optional": false,
                    "description": "<p>A reference to the overlay element.</p>\n",
                    "line": 134,
                    "rawdescription": "\n\nA reference to the overlay element.\n\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'overlay'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "- The Router service for programmatic navigation.",
                    "line": 213,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "routerObservable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "<p>A subscription to the router change url.</p>\n",
                    "line": 199,
                    "rawdescription": "\n\nA subscription to the router change url.\n"
                },
                {
                    "name": "scrollY",
                    "defaultValue": "this.getWindow?.window()?.scrollY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates the scroll position of the window.</p>\n",
                    "line": 204,
                    "rawdescription": "\n\nIndicates the scroll position of the window.\n"
                },
                {
                    "name": "styleId",
                    "defaultValue": "`overlay-style-random-id-${new Date().getTime()}-${Math.random().toString(36).substring(7)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>A unique style identifier.</p>\n",
                    "line": 182,
                    "rawdescription": "\n\nA unique style identifier.\n\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "doCssWidth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies CSS styles to set the width of the overlay.\n",
                    "description": "<p>Applies CSS styles to set the width of the overlay.</p>\n"
                },
                {
                    "name": "events",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 359,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles specific keyboard events.\n\n",
                    "description": "<p>Handles specific keyboard events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9341,
                                "end": 9344,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9335,
                                "end": 9340,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The key code of the pressed key.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook that detects changes to the 'open' input property and handles modal behavior accordingly.\n\n",
                    "description": "<p>Lifecycle hook that detects changes to the &#39;open&#39; input property and handles modal behavior accordingly.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4975,
                                "end": 4982,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4969,
                                "end": 4974,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The changes detected in the component&#39;s input properties.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 265,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPerforms actions before the component is destroyed.\n",
                    "description": "<p>Performs actions before the component is destroyed.</p>\n"
                },
                {
                    "name": "observeRouter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFunction that init the routerObservable.\n",
                    "description": "<p>Function that init the routerObservable.</p>\n"
                },
                {
                    "name": "onKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 345,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles keyboard events for the modal component.\n\n",
                    "description": "<p>Handles keyboard events for the modal component.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9006,
                                "end": 9011,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9000,
                                "end": 9005,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyboard event object.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "removeOverlayFromBody",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves the overlay element from document body.\n",
                    "description": "<p>Removes the overlay element from document body.</p>\n"
                },
                {
                    "name": "toCloseOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 376,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCloses the overlay logic.\n",
                    "description": "<p>Closes the overlay logic.</p>\n"
                },
                {
                    "name": "undoCssWidth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 333,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves the CSS styles that set the width of the overlay.\n",
                    "description": "<p>Removes the CSS styles that set the width of the overlay.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents an overlay component, an abstraction with differente style but still a modal.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-overlay [open]=&quot;isOverlayOpen&quot; overlayDirection=&quot;right&quot; (overlayClose)=&quot;onOverlayClose()&quot;&gt;\n  &lt;ng-template #headerTemplate&gt;\n    &lt;h2&gt;Overlay Header&lt;/h2&gt;\n  &lt;/ng-template&gt;\n  &lt;ng-template #footerTemplate&gt;\n    Footer\n  &lt;/ng-template&gt;\n  &lt;div&gt;\n    &lt;!-- Your content here --&gt;\n  &lt;/div&gt;\n&lt;/sq-overlay&gt;\n&lt;button (click)=&#39;isOverlayOpen = true&#39;&gt;Open Modal&lt;/button&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents an overlay component, an abstraction with differente style but still a modal.\n\n```html\n<sq-overlay [open]=\"isOverlayOpen\" overlayDirection=\"right\" (overlayClose)=\"onOverlayClose()\">\n  <ng-template #headerTemplate>\n    <h2>Overlay Header</h2>\n  </ng-template>\n  <ng-template #footerTemplate>\n    Footer\n  </ng-template>\n  <div>\n    <!-- Your content here -->\n  </div>\n</sq-overlay>\n<button (click)='isOverlayOpen = true'>Open Modal</button>\n```\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common'\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core'\nimport { sleep } from '../../helpers/sleep.helper'\nimport { NavigationStart, Router } from '@angular/router'\nimport { Subscription } from 'rxjs'\nimport { GetWindow } from '../../helpers/window.helper'\n\n/**\n * Represents an overlay component, an abstraction with differente style but still a modal.\n *\n * @example\n * <sq-overlay [open]=\"isOverlayOpen\" overlayDirection=\"right\" (overlayClose)=\"onOverlayClose()\">\n *   <ng-template #headerTemplate>\n *     <h2>Overlay Header</h2>\n *   </ng-template>\n *   <ng-template #footerTemplate>\n *     Footer\n *   </ng-template>\n *   <div>\n *     <!-- Your content here -->\n *   </div>\n * </sq-overlay>\n * <button (click)='isOverlayOpen = true'>Open Modal</button>\n *\n * @implements {OnChanges}\n * @implements {OnDestroy}\n */\n@Component({\n  selector: 'sq-overlay',\n  templateUrl: './sq-overlay.component.html',\n  styleUrls: ['./sq-overlay.component.scss'],\n})\nexport class SqOverlayComponent implements OnChanges, OnDestroy {\n  /**\n   * A unique identifier for the overlay.\n   */\n  @Input() id = `overlay-random-id-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`\n\n  /**\n   * Indicates whether the overlay is open or closed.\n   *\n   */\n  @Input() open?: boolean\n\n  /**\n   * The direction in which the overlay slides in when opened.\n   *\n   */\n  @Input() overlayDirection: 'right' | 'left' = 'right'\n\n  /**\n   * The width of the overlay.\n   *\n   */\n  @Input() width = '475px'\n\n  /**\n   * Determines whether the overlay has a border.\n   *\n   */\n  @Input() borderless = false\n\n  /**\n   * The background color of the overlay header.\n   *\n   */\n  @Input() headerColor = 'var(--background_secondary)'\n\n  /**\n   * The text color of items within the overlay header.\n   *\n   */\n  @Input() headerItemsColor = ''\n\n  /**\n   * The background color of the overlay footer.\n   *\n   */\n  @Input() footerColor = 'var(--background_secondary)'\n\n  /**\n   * The background color of the overlay body.\n   *\n  */\n  @Input() bodyColor = 'var(--background_secondary)'\n\n  /**\n   * Determines whether the close button is shown.\n   *\n   */\n  @Input() showClose = true\n\n  /**\n   * Specifies the behavior of the backdrop when clicked.\n   *\n   */\n  @Input() backdrop = 'static'\n\n  /**\n   * Emits an event when the overlay is closed.\n   *\n   */\n  @Output() overlayClose: EventEmitter<void> = new EventEmitter()\n\n  /**\n   * Emits an event when the left arrow key is pressed.\n   *\n   */\n  @Output() leftPress: EventEmitter<void> = new EventEmitter()\n\n  /**\n   * Emits an event when the right arrow key is pressed.\n   *\n   */\n  @Output() rightPress: EventEmitter<void> = new EventEmitter()\n\n  /**\n   * A reference to the overlay element.\n   *\n   */\n  @ViewChild('overlay') overlay: ElementRef | null = null\n\n  /**\n   * A reference to the header template.\n   *\n   */\n  @ContentChild('headerTemplate') headerTemplate?: TemplateRef<ElementRef> | null = null\n\n  /**\n   * A reference to the footer template.\n   *\n   */\n  @ContentChild('footerTemplate') footerTemplate?: TemplateRef<ElementRef> | null = null\n\n  /**\n   * A collection of modal elements.\n   *\n   */\n  modals: HTMLCollectionOf<Element> | undefined\n\n  /**\n   * The number of modal elements.\n   *\n   */\n  modalNumber = 0\n\n  /**\n   * Indicates whether the overlay has a header.\n   *\n   */\n  hasHeader = false\n\n  /**\n   * Indicates whether the overlay has a footer.\n   *\n   */\n  hasFooter = false\n\n  /**\n   * A reference to the Document object.\n   *\n   */\n  document: Document\n\n  /**\n   * A unique style identifier.\n   *\n   */\n  styleId = `overlay-style-random-id-${new Date().getTime()}-${Math.random().toString(36).substring(7)}`\n\n  /**\n   * Indicates whether the overlay has finished opening.\n   *\n   */\n  finishOpening = false\n\n  /**\n   * Indicates the origin path from overlay.\n   *\n   */\n  localized: URL\n\n  /**\n   * A subscription to the router change url.\n   */\n  routerObservable!: Subscription\n\n  /**\n   * Indicates the scroll position of the window.\n   */\n  scrollY = this.getWindow?.window()?.scrollY\n\n  /**\n   * Constructs an instance of SqOverlayComponent.\n   * @constructor\n   * @param {Document} documentImported - The injected Document object for DOM manipulation.\n   * @param {Router} router - The Router service for programmatic navigation.\n   * @param {GetWindow} getWindow - The GetWindow service for safely accessing the window object.\n   */\n  constructor(@Inject(DOCUMENT) public documentImported: Document, public router: Router, public getWindow: GetWindow) {\n    this.onKeydown = this.onKeydown.bind(this)\n    this.document = documentImported || document\n    this.localized = new URL(this.getWindow.href())\n  }\n\n  /**\n   * Lifecycle hook that detects changes to the 'open' input property and handles modal behavior accordingly.\n   *\n   * @param changes - The changes detected in the component's input properties.\n   */\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('width') && this.open) {\n      this.doCssWidth()\n    }\n    if (changes.hasOwnProperty('open')) {\n      const overlay = this.overlay\n      if (overlay) {\n        const body = this.document.getElementsByTagName('body')[0]\n        const backdrop = this.document.getElementById('modal-backdrop') || this.document.createElement('div')\n        if (this.open) {\n          this.scrollY = this.getWindow?.window()?.scrollY\n          body.appendChild(overlay.nativeElement)\n          this.observeRouter()\n          this.doCssWidth()\n          this.hasFooter = !!this.footerTemplate\n          this.hasHeader = !!this.headerTemplate\n          body.classList.add('block')\n          overlay.nativeElement.style.display = 'flex'\n          this.getWindow?.window()?.addEventListener('keydown', this.onKeydown)\n          this.modals = this.document.getElementsByClassName('modal open')\n          await sleep(10)\n          this.modalNumber = this.modals?.length || 0\n          if (this.modalNumber <= 1) {\n            backdrop.setAttribute('id', 'modal-backdrop')\n            backdrop.setAttribute('class', 'modal-backdrop show')\n            body.appendChild(backdrop)\n          } else if (this.modalNumber > 1) {\n            overlay.nativeElement.style.zIndex = 1060 + this.modalNumber + 1\n            backdrop.setAttribute('style', `z-index: ${1060 + this.modalNumber};`)\n          }\n          this.finishOpening = true\n        } else {\n          this.removeOverlayFromBody()\n        }\n      }\n    }\n  }\n\n  /**\n   * Performs actions before the component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this.routerObservable?.unsubscribe()\n  }\n\n  /**\n   * Function that init the routerObservable.\n   */\n  observeRouter() {\n    this.routerObservable = this.router.events.subscribe(async (event) => {\n      if (event instanceof NavigationStart) {\n        const destinationRoute = new URL(event.url, this.localized.origin)\n        if ((this.localized.origin + this.localized.pathname) !== (destinationRoute.origin + destinationRoute.pathname)) {\n          this.removeOverlayFromBody()\n          await sleep(1000)\n        }\n      }\n    })\n  }\n\n  /**\n   * Removes the overlay element from document body.\n   */\n  removeOverlayFromBody() {\n    const body = this.document.getElementsByTagName('body')[0]\n    if (this.modalNumber <= 1) {\n      body?.classList?.remove('block')\n      if (window.scrollY !== this.scrollY) {\n        if (this.scrollY) this.getWindow?.window()?.scrollTo(0, this.scrollY)\n      }\n    }\n    const backdrop = this.document.getElementById('modal-backdrop')\n    const overlay: any = this.document.getElementById(this.id)\n    this.overlayClose.emit()\n    this.finishOpening = false\n    this.undoCssWidth()\n    backdrop?.removeAttribute('style')\n    overlay?.parentNode?.removeChild(overlay)\n    if (this.modalNumber <= 1) {\n      backdrop?.parentNode?.removeChild(backdrop)\n    }\n    window.removeEventListener('keydown', this.onKeydown)\n  }\n\n  /**\n   * Applies CSS styles to set the width of the overlay.\n   */\n  doCssWidth() {\n    const css = `\n      .overlay.open .modal-dialog.opened {\n        width: ${this.width};\n      }\n    `\n    const head = this.document.getElementsByTagName('head')[0]\n    let style = this.document.getElementById(this.styleId)\n    if (!style) {\n      style = this.document.createElement('style')\n      style.setAttribute('id', this.styleId)\n      style.appendChild(this.document.createTextNode(css))\n      head.appendChild(style)\n    } else {\n      style.innerHTML = ''\n      style.appendChild(this.document.createTextNode(css))\n    }\n  }\n\n  /**\n   * Removes the CSS styles that set the width of the overlay.\n   */\n  undoCssWidth() {\n    const style = this.document.getElementById(this.styleId)\n    if (style?.parentNode) {\n      style.parentNode.removeChild(style)\n    }\n  }\n\n  /**\n   * Handles keyboard events for the modal component.\n   *\n   * @param event - The keyboard event object.\n   */\n  onKeydown(event: KeyboardEvent) {\n    if (this.open) {\n      this.modals = this.document.getElementsByClassName('modal open')\n      if (this.modals?.length === this.modalNumber) {\n        this.events(event.key)\n      }\n    }\n  }\n\n  /**\n   * Handles specific keyboard events.\n   *\n   * @param key - The key code of the pressed key.\n   */\n  events(key: string) {\n    switch (key) {\n      case 'Escape':\n        this.overlayClose.emit()\n        break\n      case 'ArrowLeft':\n        this.leftPress.emit()\n        break\n      case 'ArrowRight':\n        this.rightPress.emit()\n        break\n    }\n  }\n\n  /**\n   * Closes the overlay logic.\n   */\n  toCloseOverlay() {\n    if (this.overlay && this.open) {\n      const body = this.document.getElementsByTagName('body')[0]\n      const backdrop = this.document.getElementById('modal-backdrop') || this.document.createElement('div')\n      this.overlayClose.emit()\n      this.overlay.nativeElement.style.display = 'none'\n      if (backdrop.parentNode && this.modalNumber <= 1) {\n        backdrop.parentNode.removeChild(backdrop)\n        body.classList.remove('block')\n      }\n      window.removeEventListener('keydown', this.onKeydown)\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep {\r\n  .overlay {\r\n    padding: 0;\r\n    border-radius: 0px;\r\n    &.left {\r\n      justify-content: flex-start;\r\n    }\r\n    &.right {\r\n      justify-content: flex-end;\r\n    }\r\n    .modal-dialog {\r\n      width: 300px;\r\n      max-width: 100vw;\r\n      height: 100%;\r\n      margin: 0;\r\n      position: fixed;\r\n      transition: opacity 0.3s linear, left 0.3s ease-out, right 0.3s ease-out,\r\n        width 0.3s ease-out, height 0.3s ease-out !important;\r\n      transform: translate3d(0%, 0, 0) !important;\r\n      .modal-content {\r\n        height: 100%;\r\n        border-radius: 0;\r\n        overflow-y: auto;\r\n        border: none;\r\n        background-color: transparent;\r\n        .modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          height: 60px;\r\n          border-radius: 0;\r\n          overflow: hidden;\r\n          padding: 1rem 2rem;\r\n          &.without-header {\r\n            padding: 0 0.08rem;\r\n            border: none;\r\n            justify-content: flex-end;\r\n            .button-close {\r\n              margin: 0;\r\n              padding: 0;\r\n            }\r\n          }\r\n          .button-close {\r\n            max-height: 30px;\r\n            line-height: 30px;\r\n            opacity: 0.7 !important;\r\n            transition: var(--transition);\r\n            z-index: 1;\r\n            span {\r\n              font-size: 2.1rem;\r\n              font-weight: 300;\r\n              transition: var(--transition);\r\n            }\r\n            &:hover,\r\n            &:focus {\r\n              outline: none;\r\n\r\n              span {\r\n                font-weight: 500;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .modal-body {\r\n          height: calc(100vh - 112px);\r\n          padding: 2rem;\r\n          overflow-y: auto;\r\n          overflow-x: hidden;\r\n          &.without-footer {\r\n            height: calc(100vh - 52px);\r\n          }\r\n        }\r\n        .modal-footer {\r\n          height: 60px;\r\n          border-radius: 0;\r\n          overflow: hidden;\r\n          padding: 0.5rem 2rem;\r\n        }\r\n        .modal-footer > * {\r\n          margin: 0;\r\n        }\r\n        .borderless {\r\n          border-color: transparent;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./sq-overlay.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs an instance of SqOverlayComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "documentImported",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getWindow",
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 204,
                "rawdescription": "\n\nConstructs an instance of SqOverlayComponent.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4316,
                            "end": 4332,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "documentImported"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4299,
                            "end": 4304,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The injected Document object for DOM manipulation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4305,
                            "end": 4315,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4306,
                                "end": 4314,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4306,
                                    "end": 4314,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Document"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 4407,
                            "end": 4413,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4392,
                            "end": 4397,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Router service for programmatic navigation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4398,
                            "end": 4406,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4399,
                                "end": 4405,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4399,
                                    "end": 4405,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Router"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 4488,
                            "end": 4497,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "getWindow"
                        },
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4470,
                            "end": 4475,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The GetWindow service for safely accessing the window object.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4476,
                            "end": 4487,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4477,
                                "end": 4486,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4477,
                                    "end": 4486,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "GetWindow"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<div [id]=\"id\" class=\"modal overlay {{ overlayDirection }}\" [ngClass]=\"{ open: open }\" #overlay>\r\n  <div\r\n    class=\"modal-dialog {{ overlayDirection }}\"\r\n    [ngStyle]=\"{ 'background-color': headerColor }\"\r\n    [ngClass]=\"{ opened: finishOpening }\"\r\n    [clickOutsideEnabled]=\"!!(open && backdrop !== 'static' && overlay)\"\r\n    (clickOutside)=\"toCloseOverlay()\"\r\n  >\r\n    <div class=\"modal-content scrollbar\">\r\n      <div\r\n        class=\"modal-header\"\r\n        [ngClass]=\"{\r\n          'without-header': !hasHeader,\r\n          borderless: borderless\r\n        }\"\r\n        [ngStyle]=\"{\r\n          'background-color': headerColor\r\n        }\"\r\n      >\r\n        <ng-container *ngIf=\"headerTemplate\">\r\n          <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n        </ng-container>\r\n\r\n        <button *ngIf=\"showClose\" id=\"close-button\" type=\"button\" class=\"close button-close\" aria-label=\"Close\" (click)=\"overlayClose.emit()\">\r\n          <i class=\"fa-solid fa-xmark\" [ngStyle]=\"{ color: headerItemsColor }\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"modal-body scrollbar\"\r\n        [ngClass]=\"{\r\n          'without-footer': !hasFooter\r\n        }\"\r\n        [ngStyle]=\"{\r\n          'background-color': bodyColor\r\n        }\"\r\n      >\r\n        <ng-content></ng-content>\r\n      </div>\r\n\r\n      <div\r\n        class=\"modal-footer\"\r\n        *ngIf=\"hasFooter\"\r\n        [ngClass]=\"{\r\n          borderless: borderless\r\n        }\"\r\n        [ngStyle]=\"{\r\n          'background-color': footerColor\r\n        }\"\r\n      >\r\n        <ng-container *ngIf=\"footerTemplate\">\r\n          <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SqPaginationComponent",
            "id": "component-SqPaginationComponent-d5acbdd86962db5190680b201215d6b9f4885c93f107719acb773849cab65c8f9bc04cb28b4a2e875fd0cccc4e1bdbd92a4edf50817d3c0d51dfe9969cf59943",
            "file": "src/components/sq-pagination/sq-pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-pagination",
            "styleUrls": [
                "./sq-pagination.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-pagination.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe current page number.\n",
                    "description": "<p>The current page number.</p>\n",
                    "line": 57,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA custom CSS class for styling the component.\n",
                    "description": "<p>A custom CSS class for styling the component.</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showPages",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe number of page links to show in the pagination control.\n",
                    "description": "<p>The number of page links to show in the pagination control.</p>\n",
                    "line": 67,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalPages",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe total number of pages.\n",
                    "description": "<p>The total number of pages.</p>\n",
                    "line": 62,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "useQueryString",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to use query string parameters for page navigation.\n",
                    "description": "<p>Indicates whether to use query string parameters for page navigation.</p>\n",
                    "line": 72,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits an event when the current page is changed.\n",
                    "description": "<p>Emits an event when the current page is changed.</p>\n",
                    "line": 77,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "canShow",
                    "defaultValue": "useMemo((actualPage: number) => {\n    const half = this.calculateHalf()\n    return actualPage === this.page || (actualPage >= this.page - half && actualPage <= this.page + half)\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Checks if a page number should be displayed based on the current page and showPages setting.</p>\n",
                    "line": 178,
                    "rawdescription": "\n\nChecks if a page number should be displayed based on the current page and showPages setting.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 5154,
                            "end": 5214,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 5155,
                                "end": 5160,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The page number to check.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5161,
                                "end": 5169,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5162,
                                    "end": 5168,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            },
                            "name": {
                                "pos": 5170,
                                "end": 5180,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "actualPage"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 5214,
                            "end": 5293,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 5215,
                                "end": 5222,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the page should be shown, otherwise <code>false</code>.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5223,
                                "end": 5232,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5224,
                                    "end": 5231,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "getWindow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GetWindow",
                    "optional": false,
                    "description": "- The GetWindow service for accessing the window object.",
                    "line": 103,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "page",
                    "defaultValue": "this.currentPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The current page number.</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nThe current page number.\n"
                },
                {
                    "name": "pages",
                    "defaultValue": "Array.from({ length: this.totalPages }, (_, i) => i + 1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>An array of page numbers to display in the pagination control.</p>\n",
                    "line": 87,
                    "rawdescription": "\n\nAn array of page numbers to display in the pagination control.\n"
                },
                {
                    "name": "routeObservable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "<p>A subscription to the route query parameters.</p>\n",
                    "line": 92,
                    "rawdescription": "\n\nA subscription to the route query parameters.\n"
                },
                {
                    "name": "showDotMax",
                    "defaultValue": "useMemo((actualPage: number) => {\n    const half = this.calculateHalf()\n    return actualPage + half < this.totalPages\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Checks if the maximum page number dot should be shown.</p>\n",
                    "line": 189,
                    "rawdescription": "\n\nChecks if the maximum page number dot should be shown.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 5568,
                            "end": 5628,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 5569,
                                "end": 5574,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The page number to check.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5575,
                                "end": 5583,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5576,
                                    "end": 5582,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            },
                            "name": {
                                "pos": 5584,
                                "end": 5594,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "actualPage"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 5628,
                            "end": 5706,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 5629,
                                "end": 5636,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the dot should be shown, otherwise <code>false</code>.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5637,
                                "end": 5646,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5638,
                                    "end": 5645,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "showDotMin",
                    "defaultValue": "useMemo((actualPage: number) => {\n    const half = this.calculateHalf()\n    return actualPage - half > 1\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Checks if the minimum page number dot should be shown.</p>\n",
                    "line": 200,
                    "rawdescription": "\n\nChecks if the minimum page number dot should be shown.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 5925,
                            "end": 5985,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 5926,
                                "end": 5931,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The page number to check.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5932,
                                "end": 5940,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5933,
                                    "end": 5939,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            },
                            "name": {
                                "pos": 5941,
                                "end": 5951,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "actualPage"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 5985,
                            "end": 6063,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 5986,
                                "end": 5993,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li><code>true</code> if the dot should be shown, otherwise <code>false</code>.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5994,
                                "end": 6003,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5995,
                                    "end": 6002,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            }
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateHalf",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculates half of the `showPages` setting for determining which pages to display.\n",
                    "description": "<p>Calculates half of the <code>showPages</code> setting for determining which pages to display.</p>\n"
                },
                {
                    "name": "createOrDestroyQueryObservable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates or destroys the query parameter observable based on the `useQueryString` input.\n",
                    "description": "<p>Creates or destroys the query parameter observable based on the <code>useQueryString</code> input.</p>\n"
                },
                {
                    "name": "destroyQueryObservable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDestroys the query parameter observable and removes the 'page' query parameter from the URL.\n",
                    "description": "<p>Destroys the query parameter observable and removes the &#39;page&#39; query parameter from the URL.</p>\n"
                },
                {
                    "name": "handlePageChange",
                    "args": [
                        {
                            "name": "newPage",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles a page change event and updates the page number.\n\n",
                    "description": "<p>Handles a page change event and updates the page number.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6453,
                                "end": 6460,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "newPage"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6438,
                                "end": 6443,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The new page number.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6444,
                                "end": 6452,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6445,
                                    "end": 6451,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "mountQueryObservable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMounts the query parameter observable to track page changes in the URL query string.\n",
                    "description": "<p>Mounts the query parameter observable to track page changes in the URL query string.</p>\n"
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nResponds to changes in input properties.\n\n",
                    "description": "<p>Responds to changes in input properties.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3153,
                                "end": 3160,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3131,
                                "end": 3136,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The changes in input properties.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3137,
                                "end": 3152,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3138,
                                    "end": 3151,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 3138,
                                        "end": 3151,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "SimpleChanges"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCleans up resources when the component is destroyed.\n",
                    "description": "<p>Cleans up resources when the component is destroyed.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInitializes the component.\n",
                    "description": "<p>Initializes the component.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a pagination component for navigating through pages.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/pagination%7D\">https://css.squidit.com.br/components/pagination}</a></p>\n <div class='my-3' >\n   <ul class=\"pagination\" style='padding: 0; margin: 0;'>\n     <li class=\"disabled\">\n       <a>\n         <i class=\"fas fa-chevron-left\"></i>\n       </a>\n     </li>\n     <li>\n       <a>1</a>\n     </li>\n     <li class='active'>\n       <a>2</a>\n     </li>\n     <li>\n       <a>3</a>\n     </li>\n     <li>\n       <a>\n         <i class=\"fas fa-chevron-right\"></i>\n       </a>\n     </li>\n   </ul>\n </div>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-pagination [currentPage]=&quot;currentPage&quot; [totalPages]=&quot;totalPages&quot; [showPages]=&quot;5&quot; (pageChange)=&quot;onPageChange($event)&quot;&gt;&lt;/sq-pagination&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a pagination component for navigating through pages.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/pagination}\n\n <div class='my-3' >\n   <ul class=\"pagination\" style='padding: 0; margin: 0;'>\n     <li class=\"disabled\">\n       <a>\n         <i class=\"fas fa-chevron-left\"></i>\n       </a>\n     </li>\n     <li>\n       <a>1</a>\n     </li>\n     <li class='active'>\n       <a>2</a>\n     </li>\n     <li>\n       <a>3</a>\n     </li>\n     <li>\n       <a>\n         <i class=\"fas fa-chevron-right\"></i>\n       </a>\n     </li>\n   </ul>\n </div>\n\n```html\n<sq-pagination [currentPage]=\"currentPage\" [totalPages]=\"totalPages\" [showPages]=\"5\" (pageChange)=\"onPageChange($event)\"></sq-pagination>\n```\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, NgZone, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core'\nimport { useMemo } from '../../helpers/memo.helper'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { Subscription } from 'rxjs'\nimport { GetWindow } from '../../helpers/window.helper'\n\n/**\n * Represents a pagination component for navigating through pages.\n *\n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/components/pagination}\n *\n *  <div class='my-3' >\n *    <ul class=\"pagination\" style='padding: 0; margin: 0;'>\n *      <li class=\"disabled\">\n *        <a>\n *          <i class=\"fas fa-chevron-left\"></i>\n *        </a>\n *      </li>\n *      <li>\n *        <a>1</a>\n *      </li>\n *      <li class='active'>\n *        <a>2</a>\n *      </li>\n *      <li>\n *        <a>3</a>\n *      </li>\n *      <li>\n *        <a>\n *          <i class=\"fas fa-chevron-right\"></i>\n *        </a>\n *      </li>\n *    </ul>\n *  </div>\n *\n * @example\n * <sq-pagination [currentPage]=\"currentPage\" [totalPages]=\"totalPages\" [showPages]=\"5\" (pageChange)=\"onPageChange($event)\"></sq-pagination>\n *\n * @implements {OnInit, OnChanges, OnDestroy}\n */\n@Component({\n  selector: 'sq-pagination',\n  templateUrl: './sq-pagination.component.html',\n  styleUrls: ['./sq-pagination.component.scss']\n})\nexport class SqPaginationComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * A custom CSS class for styling the component.\n   */\n  @Input() customClass = ''\n\n  /**\n   * The current page number.\n   */\n  @Input() currentPage = 1\n\n  /**\n   * The total number of pages.\n   */\n  @Input() totalPages = 1\n\n  /**\n   * The number of page links to show in the pagination control.\n   */\n  @Input() showPages = 5\n\n  /**\n   * Indicates whether to use query string parameters for page navigation.\n   */\n  @Input() useQueryString = false\n\n  /**\n   * Emits an event when the current page is changed.\n   */\n  @Output() pageChange: EventEmitter<number> = new EventEmitter<number>()\n\n  /**\n   * The current page number.\n   */\n  page = this.currentPage\n\n  /**\n   * An array of page numbers to display in the pagination control.\n   */\n  pages = Array.from({ length: this.totalPages }, (_, i) => i + 1)\n\n  /**\n   * A subscription to the route query parameters.\n   */\n  routeObservable!: Subscription\n\n\n  /**\n   * Initializes a new instance of the `SqPaginationComponent` class.\n   * @constructor\n   * @param {ActivatedRoute} route - The ActivatedRoute service for retrieving route information.\n   * @param {Router} router - The Router service for programmatic navigation.\n   * @param {GetWindow} getWindow - The GetWindow service for accessing the window object.\n   * @param {NgZone} ngZone - The NgZone service for running code outside Angular's zone.\n   */\n  constructor(private route: ActivatedRoute, private router: Router, public getWindow: GetWindow, private ngZone: NgZone) { }\n\n  /**\n   * Initializes the component.\n   */\n  ngOnInit() {\n    this.createOrDestroyQueryObservable()\n  }\n\n  /**\n   * Responds to changes in input properties.\n   *\n   * @param {SimpleChanges} changes - The changes in input properties.\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['currentPage'] && changes['currentPage'].currentValue !== changes['currentPage'].previousValue) {\n      this.page = this.currentPage\n    }\n    if (changes['totalPages'] && changes['totalPages'].currentValue !== changes['totalPages'].previousValue) {\n      this.pages = Array.from({ length: this.totalPages }, (_, i) => i + 1)\n    }\n    if (changes['useQueryString'] && changes['useQueryString'].currentValue !== changes['useQueryString'].previousValue) {\n      this.createOrDestroyQueryObservable()\n    }\n  }\n\n  /**\n   * Cleans up resources when the component is destroyed.\n   */\n  ngOnDestroy() {\n    this.destroyQueryObservable()\n  }\n\n  /**\n   * Creates or destroys the query parameter observable based on the `useQueryString` input.\n   */\n  createOrDestroyQueryObservable() {\n    if (this.useQueryString) {\n      this.mountQueryObservable()\n    } else {\n      this.destroyQueryObservable()\n    }\n  }\n\n  /**\n   * Mounts the query parameter observable to track page changes in the URL query string.\n   */\n  mountQueryObservable() {\n    this.routeObservable = this.route.queryParams.subscribe(search => {\n      const searchParams = new URLSearchParams(search)\n      const newPageQuery = parseInt(searchParams.get('page') ?? '1', 10)\n      if (newPageQuery !== this.page) {\n        this.page = newPageQuery\n      }\n    })\n  }\n\n  /**\n   * Destroys the query parameter observable and removes the 'page' query parameter from the URL.\n   */\n  destroyQueryObservable() {\n    const searchParams = new URLSearchParams(this.getWindow.window()?.location.search)\n    searchParams.delete('page')\n    this.ngZone.run(() => {\n      this.router.navigate([], { relativeTo: this.route, queryParams: { page: null }, queryParamsHandling: 'merge' })\n    })\n    this.routeObservable?.unsubscribe()\n  }\n\n  /**\n   * Checks if a page number should be displayed based on the current page and showPages setting.\n   *\n   * @param {number} actualPage - The page number to check.\n   * @returns {boolean} - `true` if the page should be shown, otherwise `false`.\n   */\n  canShow = useMemo((actualPage: number) => {\n    const half = this.calculateHalf()\n    return actualPage === this.page || (actualPage >= this.page - half && actualPage <= this.page + half)\n  })\n\n  /**\n   * Checks if the maximum page number dot should be shown.\n   *\n   * @param {number} actualPage - The page number to check.\n   * @returns {boolean} - `true` if the dot should be shown, otherwise `false`.\n   */\n  showDotMax = useMemo((actualPage: number) => {\n    const half = this.calculateHalf()\n    return actualPage + half < this.totalPages\n  })\n\n  /**\n   * Checks if the minimum page number dot should be shown.\n   *\n   * @param {number} actualPage - The page number to check.\n   * @returns {boolean} - `true` if the dot should be shown, otherwise `false`.\n   */\n  showDotMin = useMemo((actualPage: number) => {\n    const half = this.calculateHalf()\n    return actualPage - half > 1\n  })\n\n  /**\n   * Calculates half of the `showPages` setting for determining which pages to display.\n   */\n  calculateHalf() {\n    return Math.floor(this.showPages / 2)\n  }\n\n  /**\n   * Handles a page change event and updates the page number.\n   *\n   * @param {number} newPage - The new page number.\n   */\n  handlePageChange(newPage: number) {\n    if (newPage < 1 || newPage > this.totalPages) {\n      return\n    }\n    if (this.useQueryString) {\n      const searchParams = new URLSearchParams(this.getWindow.window()?.location.search)\n      searchParams.set('page', newPage.toString())\n      this.ngZone.run(() => {\n        this.router.navigate([], { relativeTo: this.route, queryParams: { page: newPage }, queryParamsHandling: 'merge' })\n      })\n    }\n\n    this.page = newPage\n    this.pageChange.emit(newPage)\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".pagination-wrapper {\n  width: 100%;\n  text-align: center;\n}\n.pagination li.active {\n  color: var(--primary_color);\n}\n:host {\n  display: inline-block;\n}",
                    "styleUrl": "./sq-pagination.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Initializes a new instance of the <code>SqPaginationComponent</code> class.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getWindow",
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 92,
                "rawdescription": "\n\nInitializes a new instance of the `SqPaginationComponent` class.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2501,
                            "end": 2506,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2478,
                            "end": 2483,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ActivatedRoute service for retrieving route information.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2484,
                            "end": 2500,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2485,
                                "end": 2499,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2485,
                                    "end": 2499,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ActivatedRoute"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2591,
                            "end": 2597,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2576,
                            "end": 2581,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Router service for programmatic navigation.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2582,
                            "end": 2590,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2583,
                                "end": 2589,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2583,
                                    "end": 2589,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Router"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2672,
                            "end": 2681,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "getWindow"
                        },
                        "type": "GetWindow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2654,
                            "end": 2659,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The GetWindow service for accessing the window object.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2660,
                            "end": 2671,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2661,
                                "end": 2670,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2661,
                                    "end": 2670,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "GetWindow"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 2760,
                            "end": 2766,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "ngZone"
                        },
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2745,
                            "end": 2750,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The NgZone service for running code outside Angular&#39;s zone.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 2751,
                            "end": 2759,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 2752,
                                "end": 2758,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 2752,
                                    "end": 2758,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "NgZone"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "\n<div class='pagination-wrapper {{ customClass }}'>\n  <ul class=\"pagination\">\n    <li class='page-item' [ngClass]=\"{\n      'disabled': page === 1,\n    }\">\n      <button (click)='handlePageChange(page - 1)'>\n        <i class=\"fa-solid fa-chevrons-left\"></i>\n      </button>\n    </li>\n\n    <li class=\"disabled\" *ngIf=\"showDotMin(page)\">\n      <button>\n        <i class=\"fa-solid fa-ellipsis\"></i>\n      </button>\n    </li>\n\n    <ng-container *ngFor=\"let p of pages\">\n      <li\n        [ngClass]=\"{\n          'active': page === p,\n        }\"\n        *ngIf=\"canShow(p)\"\n      >\n        <button (click)='handlePageChange(p)'>\n          {{ p }}\n        </button>\n      </li>\n    </ng-container>\n\n    <li class=\"disabled\" *ngIf=\"showDotMax(page)\">\n      <button>\n        <i class=\"fa-solid fa-ellipsis\"></i>\n      </button>\n    </li>\n\n    <li class='page-item' [ngClass]=\"{\n      'disabled': page >= totalPages,\n    }\">\n      <button (click)='handlePageChange(page + 1)'>\n        <i class=\"fa-solid fa-chevrons-right\"></i>\n      </button>\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "SqProgressBarComponent",
            "id": "component-SqProgressBarComponent-995459a8b2b3702f0542bf1c151252839cea7570e49e9162e65ea4f306c20265efc8300b4a282c843d2ccad13e611f7e204772f8c8d1f4db9d46d8131399dce4",
            "file": "src/components/sq-progress-bar/sq-progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-progress-bar",
            "styleUrls": [
                "./sq-progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-progress-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the progress bar should have an animation.\n",
                    "description": "<p>Indicates whether the progress bar should have an animation.</p>\n",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'black'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color of the progress bar.\n",
                    "description": "<p>The color of the progress bar.</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hasLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to display a label on the progress bar.\n",
                    "description": "<p>Indicates whether to display a label on the progress bar.</p>\n",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "'1rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe height of the progress bar.\n",
                    "description": "<p>The height of the progress bar.</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "striped",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to display stripes on the progress bar.\n",
                    "description": "<p>Indicates whether to display stripes on the progress bar.</p>\n",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe value of the progress bar (can be a string or number).\n",
                    "description": "<p>The value of the progress bar (can be a string or number).</p>\n",
                    "line": 43,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "roundValue",
                    "defaultValue": "useMemo((value: string | number) => {\r\n    return Math.round(Number(value))\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The rounded value of the progress (rounded to the nearest integer).</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nThe rounded value of the progress (rounded to the nearest integer).\n"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a progress bar component for displaying progress visually.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/progress-bar%7D\">https://css.squidit.com.br/components/progress-bar}</a></p>\n<div class=\"progress my-3\">\n <div\n   class=\"progress-bar background-dashed animate-bar\"\n   role=\"progressbar\"\n   aria-valuemin=\"0\"\n   aria-valuemax=\"100\"\n ></div>\n</div>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-progress-bar [value]=&quot;50&quot; [striped]=&quot;true&quot;&gt;&lt;/sq-progress-bar&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a progress bar component for displaying progress visually.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/progress-bar}\n\n<div class=\"progress my-3\">\n <div\n   class=\"progress-bar background-dashed animate-bar\"\n   role=\"progressbar\"\n   aria-valuemin=\"0\"\n   aria-valuemax=\"100\"\n ></div>\n</div>\n\n```html\n<sq-progress-bar [value]=\"50\" [striped]=\"true\"></sq-progress-bar>\n```\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\r\nimport { useMemo } from '../../helpers/memo.helper'\r\n\r\n/**\r\n * Represents a progress bar component for displaying progress visually.\r\n *\r\n * Look the link about the component in original framework and the appearance\r\n *\r\n * @see {@link https://css.squidit.com.br/components/progress-bar}\r\n * \r\n * <div class=\"progress my-3\">\r\n *  <div\r\n *    class=\"progress-bar background-dashed animate-bar\"\r\n *    role=\"progressbar\"\r\n *    aria-valuemin=\"0\"\r\n *    aria-valuemax=\"100\"\r\n *  ></div>\r\n * </div>\r\n * \r\n * @example\r\n * <sq-progress-bar [value]=\"50\" [striped]=\"true\"></sq-progress-bar>\r\n *\r\n */\r\n@Component({\r\n  selector: 'sq-progress-bar',\r\n  templateUrl: './sq-progress-bar.component.html',\r\n  styleUrls: ['./sq-progress-bar.component.scss'],\r\n})\r\nexport class SqProgressBarComponent {\r\n  /**\r\n   * The color of the progress bar.\r\n   */\r\n  @Input() color = 'black'\r\n\r\n  /**\r\n   * Indicates whether to display a label on the progress bar.\r\n   */\r\n  @Input() hasLabel = false\r\n\r\n  /**\r\n   * The value of the progress bar (can be a string or number).\r\n   */\r\n  @Input() value: string | number = 0\r\n\r\n  /**\r\n   * The height of the progress bar.\r\n   */\r\n  @Input() height = '1rem'\r\n\r\n  /**\r\n   * Indicates whether to display stripes on the progress bar.\r\n   */\r\n  @Input() striped = true\r\n\r\n  /**\r\n   * Indicates whether the progress bar should have an animation.\r\n   */\r\n  @Input() animated = false\r\n\r\n  /**\r\n   * The rounded value of the progress (rounded to the nearest integer).\r\n   */\r\n  roundValue = useMemo((value: string | number) => {\r\n    return Math.round(Number(value))\r\n  })\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".progress {\n  width: 100%;\n}\n:host {\n  display: inline-block;\n  width: 100%;\n}",
                    "styleUrl": "./sq-progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"progress\" style=\"height: 14px\">\r\n  <div\r\n    class=\"progress-bar background-{{ color }}\"\r\n    role=\"progressbar\"\r\n    aria-valuemin=\"0\"\r\n    aria-valuemax=\"100\"\r\n    [ngClass]=\"{\r\n      'background-dashed': striped,\r\n      'animate-bar': animated\r\n    }\"\r\n    [ngStyle]=\"{\r\n      width: value + '%',\r\n      height: height,\r\n      'backgroud-color': color\r\n    }\"\r\n    style=\"font-size: 0.86rem\"\r\n  >\r\n    {{ hasLabel ? roundValue(value) + '%' : null }}\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SqSelectComponent",
            "id": "component-SqSelectComponent-96e3a72a06be2d409b6b1d40d7a9658685ef2ecb5c76c411417df9c48a6122db0f6eabe9fceeb45f3356a7f569403cd19163ef00b836c4becd10636dca93e21c",
            "file": "src/components/sq-select/sq-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-select",
            "styleUrls": [
                "./sq-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color for the select input.\n",
                    "description": "<p>Background color for the select input.</p>\n",
                    "line": 149,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color for the select input.\n",
                    "description": "<p>Border color for the select input.</p>\n",
                    "line": 154,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for the select input.\n",
                    "description": "<p>Custom CSS class for the select input.</p>\n",
                    "line": 66,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the select input is disabled.\n",
                    "description": "<p>Indicates whether the select input is disabled.</p>\n",
                    "line": 104,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to display an error span.\n",
                    "description": "<p>Indicates whether to display an error span.</p>\n",
                    "line": 99,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message for the select input.\n",
                    "description": "<p>External error message for the select input.</p>\n",
                    "line": 76,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon for the select input.\n",
                    "description": "<p>External icon for the select input.</p>\n",
                    "line": 81,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the select input.\n",
                    "description": "<p>The id attribute for the select input.</p>\n",
                    "line": 56,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe label for the select input.\n",
                    "description": "<p>The label for the select input.</p>\n",
                    "line": 61,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLabel color for the select input.\n",
                    "description": "<p>Label color for the select input.</p>\n",
                    "line": 159,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the select input is in a loading state.\n",
                    "description": "<p>Indicates whether the select input is in a loading state.</p>\n",
                    "line": 119,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1230,
                            "end": 1276,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1231,
                                "end": 1238,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the select input.\n\n",
                    "description": "<p>The name attribute for the select input.</p>\n",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn array of options for populating the select input.\n",
                    "description": "<p>An array of options for populating the select input.</p>\n",
                    "line": 86,
                    "type": "Option[]",
                    "decorators": []
                },
                {
                    "name": "optionsWithGroups",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions with groups for populating the select input.\n",
                    "description": "<p>Options with groups for populating the select input.</p>\n",
                    "line": 91,
                    "type": "Array<literal type>",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the select input.\n",
                    "description": "<p>Placeholder text for the select input.</p>\n",
                    "line": 71,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the select input is readonly.\n",
                    "description": "<p>Indicates whether the select input is readonly.</p>\n",
                    "line": 109,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the select input is required.\n",
                    "description": "<p>Indicates whether the select input is required.</p>\n",
                    "line": 114,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip color for the select input.\n",
                    "description": "<p>Tooltip color for the select input.</p>\n",
                    "line": 139,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip icon for the select input.\n",
                    "description": "<p>Tooltip icon for the select input.</p>\n",
                    "line": 144,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message for the select input.\n",
                    "description": "<p>Tooltip message for the select input.</p>\n",
                    "line": 129,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip placement for the select input.\n",
                    "description": "<p>Tooltip placement for the select input.</p>\n",
                    "line": 134,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": []
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to use form errors for validation.\n",
                    "description": "<p>Indicates whether to use form errors for validation.</p>\n",
                    "line": 124,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe selected value of the select input.\n",
                    "description": "<p>The selected value of the select input.</p>\n",
                    "line": 51,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the select input gains or loses focus.\n",
                    "description": "<p>Event emitted when the select input gains or loses focus.</p>\n",
                    "line": 164,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the select input becomes valid or invalid.\n",
                    "description": "<p>Event emitted when the select input becomes valid or invalid.</p>\n",
                    "line": 169,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the value of the select input changes.\n",
                    "description": "<p>Event emitted when the value of the select input changes.</p>\n",
                    "line": 174,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "- The ElementRef for the component.",
                    "line": 210,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>The error state of the select input.</p>\n",
                    "line": 197,
                    "rawdescription": "\n\nThe error state of the select input.\n"
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 192,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a left-aligned label template.</p>\n",
                    "line": 180,
                    "rawdescription": "\n\nReference to a left-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>ElementRef for the native select input element.</p>\n",
                    "line": 202,
                    "rawdescription": "\n\nElementRef for the native select input element.\n"
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 186,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles the change event of the select input.\n\n",
                    "description": "<p>Handles the change event of the select input.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5908,
                                "end": 5913,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5896,
                                "end": 5901,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The selected value.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5902,
                                "end": 5907,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5903,
                                    "end": 5906,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 133
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 240,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5618,
                                "end": 5621,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5603,
                                "end": 5608,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5609,
                                "end": 5617,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5610,
                                    "end": 5616,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates the select input and sets the error state.\n\n",
                    "description": "<p>Validates the select input and sets the error state.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5154,
                                "end": 5160,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "isBlur"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 5138,
                                "end": 5143,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Indicates whether the input is blurred.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5144,
                                "end": 5153,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5145,
                                    "end": 5152,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a select input component for choosing options from a dropdown.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/forms/select%7D\">https://css.squidit.com.br/forms/select}</a></p>\n<br>\n<label for='select-name'>\nLabel select\n</label>\n<select\n  class='select mb-3'\n  [name]=\"'select-name'\"\n>\n <option value='' disabled>Select an option</option>\n <option value=\"1\">Option 1</option>\n <option value=\"2\">Option 2</option>\n</select>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-select\n  [name]=&quot;&#39;select-name&#39;&quot;\n  [label]=&quot;&#39;Select an option&#39;&quot;\n  [options]=&quot;selectOptions&quot;\n  [(value)]=&#39;value&#39;\n  (valueChange)=&quot;handleValueChange($event)&quot;\n&gt;\n&lt;/sq-select&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a select input component for choosing options from a dropdown.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/forms/select}\n\n<br>\n<label for='select-name'>\nLabel select\n</label>\n<select\n  class='select mb-3'\n  [name]=\"'select-name'\"\n>\n <option value='' disabled>Select an option</option>\n <option value=\"1\">Option 1</option>\n <option value=\"2\">Option 2</option>\n</select>\n\n```html\n<sq-select\n  [name]=\"'select-name'\"\n  [label]=\"'Select an option'\"\n  [options]=\"selectOptions\"\n  [(value)]='value'\n  (valueChange)=\"handleValueChange($event)\"\n>\n</sq-select>\n```",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef, Optional, ElementRef } from '@angular/core'\r\nimport { TranslateService } from '@ngx-translate/core'\r\nimport { Option } from '../../interfaces/option.interface'\r\n\r\n/**\r\n * Represents a select input component for choosing options from a dropdown.\r\n *\r\n * Look the link about the component in original framework and the appearance\r\n *\r\n * @see {@link https://css.squidit.com.br/forms/select}\r\n * \r\n * <br>\r\n * <label for='select-name'>\r\n * Label select\r\n * </label>\r\n * <select\r\n *   class='select mb-3'\r\n *   [name]=\"'select-name'\"\r\n * >\r\n *  <option value='' disabled>Select an option</option>\r\n *  <option value=\"1\">Option 1</option>\r\n *  <option value=\"2\">Option 2</option>\r\n * </select>\r\n * \r\n * @example\r\n * <sq-select\r\n *   [name]=\"'select-name'\"\r\n *   [label]=\"'Select an option'\"\r\n *   [options]=\"selectOptions\"\r\n *   [(value)]='value'\r\n *   (valueChange)=\"handleValueChange($event)\"\r\n * >\r\n * </sq-select>\r\n */\r\n@Component({\r\n  selector: 'sq-select',\r\n  templateUrl: './sq-select.component.html',\r\n  styleUrls: ['./sq-select.component.scss']\r\n})\r\nexport class SqSelectComponent {\r\n  /**\r\n   * The name attribute for the select input.\r\n   * \r\n   * @default 'random-name-[hash-random-code]'\r\n   */\r\n  @Input() name = `random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`\r\n\r\n  /**\r\n   * The selected value of the select input.\r\n   */\r\n  @Input() value?: any\r\n\r\n  /**\r\n   * The id attribute for the select input.\r\n   */\r\n  @Input() id?: string\r\n\r\n  /**\r\n   * The label for the select input.\r\n   */\r\n  @Input() label = ''\r\n\r\n  /**\r\n   * Custom CSS class for the select input.\r\n   */\r\n  @Input() customClass = ''\r\n\r\n  /**\r\n   * Placeholder text for the select input.\r\n   */\r\n  @Input() placeholder = ''\r\n\r\n  /**\r\n   * External error message for the select input.\r\n   */\r\n  @Input() externalError = ''\r\n\r\n  /**\r\n   * External icon for the select input.\r\n   */\r\n  @Input() externalIcon = ''\r\n\r\n  /**\r\n   * An array of options for populating the select input.\r\n   */\r\n  @Input() options: Option[] = []\r\n\r\n  /**\r\n   * Options with groups for populating the select input.\r\n   */\r\n  @Input() optionsWithGroups: Array<{\r\n    label: string;\r\n    options: Option[];\r\n  }> = []\r\n\r\n  /**\r\n   * Indicates whether to display an error span.\r\n   */\r\n  @Input() errorSpan = true\r\n\r\n  /**\r\n   * Indicates whether the select input is disabled.\r\n   */\r\n  @Input() disabled = false\r\n\r\n  /**\r\n   * Indicates whether the select input is readonly.\r\n   */\r\n  @Input() readonly = false\r\n\r\n  /**\r\n   * Indicates whether the select input is required.\r\n   */\r\n  @Input() required = false\r\n\r\n  /**\r\n   * Indicates whether the select input is in a loading state.\r\n   */\r\n  @Input() loading = false\r\n\r\n  /**\r\n   * Indicates whether to use form errors for validation.\r\n   */\r\n  @Input() useFormErrors = true\r\n\r\n  /**\r\n   * Tooltip message for the select input.\r\n   */\r\n  @Input() tooltipMessage = ''\r\n\r\n  /**\r\n   * Tooltip placement for the select input.\r\n   */\r\n  @Input() tooltipPlacement: 'center top' | 'center bottom' | 'left center' | 'right center' = 'right center'\r\n\r\n  /**\r\n   * Tooltip color for the select input.\r\n   */\r\n  @Input() tooltipColor = 'inherit'\r\n\r\n  /**\r\n   * Tooltip icon for the select input.\r\n   */\r\n  @Input() tooltipIcon = ''\r\n\r\n  /**\r\n   * Background color for the select input.\r\n   */\r\n  @Input() backgroundColor = ''\r\n\r\n  /**\r\n   * Border color for the select input.\r\n   */\r\n  @Input() borderColor = ''\r\n\r\n  /**\r\n   * Label color for the select input.\r\n   */\r\n  @Input() labelColor = ''\r\n\r\n  /**\r\n   * Event emitted when the select input gains or loses focus.\r\n   */\r\n  @Output() inFocus: EventEmitter<boolean> = new EventEmitter()\r\n\r\n  /**\r\n   * Event emitted when the select input becomes valid or invalid.\r\n   */\r\n  @Output() valid: EventEmitter<boolean> = new EventEmitter()\r\n\r\n  /**\r\n   * Event emitted when the value of the select input changes.\r\n   */\r\n  @Output() valueChange: EventEmitter<any> = new EventEmitter()\r\n\r\n  /**\r\n   * Reference to a left-aligned label template.\r\n   */\r\n  @ContentChild('leftLabel')\r\n  leftLabel: TemplateRef<HTMLElement> | null = null\r\n\r\n  /**\r\n   * Reference to a right-aligned label template.\r\n   */\r\n  @ContentChild('rightLabel')\r\n  rightLabel: TemplateRef<HTMLElement> | null = null\r\n\r\n  /**\r\n   * Reference to a right-aligned label template.\r\n   */\r\n  @ContentChild('labelTemplate')\r\n  labelTemplate: TemplateRef<HTMLElement> | null = null\r\n\r\n  /**\r\n   * The error state of the select input.\r\n   */\r\n  error: boolean | string = false\r\n\r\n  /**\r\n   * ElementRef for the native select input element.\r\n   */\r\n  nativeElement: ElementRef\r\n\r\n  /**\r\n   * Constructs a new SqSelectComponent.\r\n   *\r\n   * @param {ElementRef} element - The ElementRef for the component.\r\n   * @param {TranslateService} translate - The optional TranslateService for internationalization.\r\n   */\r\n  constructor(public element: ElementRef, @Optional() private translate: TranslateService) {\r\n    this.nativeElement = element.nativeElement\r\n  }\r\n\r\n  /**\r\n   * Validates the select input and sets the error state.\r\n   *\r\n   * @param {boolean} isBlur - Indicates whether the input is blurred.\r\n   */\r\n  validate(isBlur = false) {\r\n    if (this.externalError) {\r\n      this.error = false\r\n    } else if (this.required && !this.value) {\r\n      this.valid.emit(false)\r\n      this.setError('forms.required')\r\n    } else {\r\n      this.valid.emit(true)\r\n      this.error = ''\r\n    }\r\n\r\n    if (isBlur) {\r\n      this.inFocus.emit(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets an error message.\r\n   *\r\n   * @param {string} key - The translation key for the error message.\r\n   */\r\n  async setError(key: string) {\r\n    if (this.useFormErrors && this.translate) {\r\n      this.error = await this.translate.instant(key)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the change event of the select input.\r\n   *\r\n   * @param {any} value - The selected value.\r\n   */\r\n  change(value: any): void {\r\n    this.inFocus.emit(true)\r\n    this.value = value\r\n    this.valueChange.emit(value)\r\n    this.validate()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-input {\n  &.disabled {\n    border-radius: 5px;\n  }\n\n  select.readonly,\n  select[readonly] {\n    opacity: 1 !important;\n  }\n}",
                    "styleUrl": "./sq-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new SqSelectComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 202,
                "rawdescription": "\n\nConstructs a new SqSelectComponent.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4759,
                            "end": 4766,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4740,
                            "end": 4745,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ElementRef for the component.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4746,
                            "end": 4758,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4747,
                                "end": 4757,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4747,
                                    "end": 4757,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ElementRef"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 4835,
                            "end": 4844,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4810,
                            "end": 4815,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The optional TranslateService for internationalization.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4816,
                            "end": 4834,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4817,
                                "end": 4833,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4817,
                                    "end": 4833,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "TranslateService"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"wrapper-all-inside-input {{ customClass }}\">\r\n  <label\r\n    class=\"display-flex\"\r\n    *ngIf=\"label?.length || tooltipMessage || labelTemplate\"\r\n    [ngClass]=\"{\r\n      readonly: readonly\r\n    }\"\r\n    [for]=\"id\"\r\n  >\r\n    <div *ngIf=\"label && !labelTemplate\" [ngStyle]=\"{ 'color': labelColor }\" [innerHtml]=\"label | universalSafe\"></div>\r\n    <div *ngIf=\"labelTemplate\">\r\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\r\n    </div>\r\n    <sq-tooltip\r\n      *ngIf=\"tooltipMessage\"\r\n      class=\"ml-1\"\r\n      [message]=\"tooltipMessage\"\r\n      [placement]=\"tooltipPlacement\"\r\n      [color]=\"tooltipColor\"\r\n      [icon]=\"tooltipIcon\"\r\n    ></sq-tooltip>\r\n  </label>\r\n  <div\r\n    class=\"p-0 wrapper-input wrapper-input-squid\"\r\n    [ngStyle]=\"{ 'border-color': borderColor }\"\r\n    [ngClass]=\"{\r\n      error: (externalError && externalError !== '') || (error && error !== ''),\r\n      readonly: readonly\r\n    }\"\r\n  >\r\n    <span class=\"input-group-text m-0\" *ngIf=\"leftLabel\">\r\n      <ng-container *ngTemplateOutlet=\"leftLabel\"></ng-container>\r\n    </span>\r\n    <select\r\n      class=\"select\"\r\n      [ngClass]=\"{\r\n        disabled: disabled,\r\n        readonly: readonly\r\n      }\"\r\n      [ngStyle]=\"{\r\n        'background-color': backgroundColor,\r\n        'border-color': borderColor\r\n      }\"\r\n      [id]=\"id\"\r\n      [name]=\"name\"\r\n      [required]=\"required\"\r\n      [disabled]=\"disabled || readonly || loading\"\r\n      (blur)=\"validate(true)\"\r\n      [value]=\"value\"\r\n      (change)=\"change(select?.value)\"\r\n      #select\r\n    >\r\n      <option *ngIf=\"placeholder\" value=\"\" [selected]=\"!value\" disabled>{{ placeholder }}</option>\r\n      <optgroup *ngFor=\"let group of optionsWithGroups\" [label]=\"group?.label\">\r\n        <option\r\n          *ngFor=\"let option of group?.options\"\r\n          [value]=\"option?.value\"\r\n          [selected]=\"value === option?.value\"\r\n          [disabled]=\"!!option?.disabled\"\r\n        >\r\n          {{ option?.label }}\r\n        </option>\r\n      </optgroup>\r\n      <option *ngFor=\"let option of options\" [value]=\"option?.value\" [selected]=\"value === option?.value\" [disabled]=\"!!option?.disabled\">\r\n        {{ option?.label }}\r\n      </option>\r\n    </select>\r\n    <span class=\"input-group-text m-0\" *ngIf=\"rightLabel\">\r\n      <ng-container *ngTemplateOutlet=\"rightLabel\"></ng-container>\r\n    </span>\r\n  </div>\r\n  <span *ngIf=\"externalIcon\" class=\"icon icon-external\" [innerHtml]=\"externalIcon || '' | universalSafe\"></span>\r\n  <div class=\"box-validation box-invalid show\" *ngIf=\"errorSpan\">\r\n    <ng-container *ngIf=\"externalError || error\">\r\n      <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n    </ng-container>\r\n    {{ externalError ? externalError : '' }}\r\n    {{ error && !externalError ? error : '' }}\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SqSelectMultiTagsComponent",
            "id": "component-SqSelectMultiTagsComponent-51ddc7421082e92482432e7e1875173eb632169af541dc1ec9ea12a8d949e94d6ce6d968ca3ca96d722973ca16b74cdf9ecf4306260d660c4b7922a7a474cdc4",
            "file": "src/components/sq-select-multi-tags/sq-select-multi-tags.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-select-multi-tags",
            "styleUrls": [
                "./sq-select-multi-tags.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-select-multi-tags.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color for the multi-tag select input.\n",
                    "description": "<p>Background color for the multi-tag select input.</p>\n",
                    "line": 114,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color for the multi-tag select input.\n",
                    "description": "<p>Border color for the multi-tag select input.</p>\n",
                    "line": 119,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for styling the component.\n",
                    "description": "<p>Custom CSS class for styling the component.</p>\n",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the multi-tag select input is disabled.\n",
                    "description": "<p>Indicates whether the multi-tag select input is disabled.</p>\n",
                    "line": 84,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to display an error span.\n",
                    "description": "<p>Indicates whether to display an error span.</p>\n",
                    "line": 109,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message for the multi-tag select input.\n",
                    "description": "<p>External error message for the multi-tag select input.</p>\n",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon for the multi-tag select input.\n",
                    "description": "<p>External icon for the multi-tag select input.</p>\n",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to hide the search input.\n",
                    "description": "<p>Indicates whether to hide the search input.</p>\n",
                    "line": 159,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the multi-tag select input.\n",
                    "description": "<p>The id attribute for the multi-tag select input.</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe label for the multi-tag select input.\n",
                    "description": "<p>The label for the multi-tag select input.</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor for the label of the multi-tag select input.\n",
                    "description": "<p>Color for the label of the multi-tag select input.</p>\n",
                    "line": 124,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the multi-tag select input is in a loading state.\n",
                    "description": "<p>Indicates whether the multi-tag select input is in a loading state.</p>\n",
                    "line": 99,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxTags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum number of tags that can be chosen.\n",
                    "description": "<p>Maximum number of tags that can be chosen.</p>\n",
                    "line": 144,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minCharactersToSearch",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMinimum number of characters to perform the searchChange.\n",
                    "description": "<p>Minimum number of characters to perform the searchChange.</p>\n",
                    "line": 129,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minTags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMinimum number of tags that can be chosen.\n",
                    "description": "<p>Minimum number of tags that can be chosen.</p>\n",
                    "line": 149,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1027,
                            "end": 1072,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1028,
                                "end": 1035,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute for the multi-tag select input.\n\n",
                    "description": "<p>The name attribute for the multi-tag select input.</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions available for selection.\n",
                    "description": "<p>Options available for selection.</p>\n",
                    "line": 139,
                    "type": "Array<OptionMulti>",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the input field.\n",
                    "description": "<p>Placeholder text for the input field.</p>\n",
                    "line": 64,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholderSearch",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the search input field.\n",
                    "description": "<p>Placeholder text for the search input field.</p>\n",
                    "line": 79,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the multi-tag select input is readonly.\n",
                    "description": "<p>Indicates whether the multi-tag select input is readonly.</p>\n",
                    "line": 89,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the multi-tag select input is required.\n",
                    "description": "<p>Indicates whether the multi-tag select input is required.</p>\n",
                    "line": 94,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showInside",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to show selected tags inside the input.\n",
                    "description": "<p>Indicates whether to show selected tags inside the input.</p>\n",
                    "line": 154,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "800",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe time interval for input timeout in ms.\n",
                    "description": "<p>The time interval for input timeout in ms.</p>\n",
                    "line": 134,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip color for the multi-tag select input.\n",
                    "description": "<p>Tooltip color for the multi-tag select input.</p>\n",
                    "line": 174,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip icon for the multi-tag select input.\n",
                    "description": "<p>Tooltip icon for the multi-tag select input.</p>\n",
                    "line": 179,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message for the multi-tag select input.\n",
                    "description": "<p>Tooltip message for the multi-tag select input.</p>\n",
                    "line": 164,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip placement for the multi-tag select input.\n",
                    "description": "<p>Tooltip placement for the multi-tag select input.</p>\n",
                    "line": 169,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": []
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to use form errors for validation.\n",
                    "description": "<p>Indicates whether to use form errors for validation.</p>\n",
                    "line": 104,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe selected values for the multi-tag select input.\n",
                    "description": "<p>The selected values for the multi-tag select input.</p>\n",
                    "line": 38,
                    "type": "OptionMulti[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the multi-tag select dropdown is closed.\n",
                    "description": "<p>Event emitted when the multi-tag select dropdown is closed.</p>\n",
                    "line": 194,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "removeTag",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when a tag is removed.\n",
                    "description": "<p>Event emitted when a tag is removed.</p>\n",
                    "line": 199,
                    "type": "EventEmitter<OptionMulti>"
                },
                {
                    "name": "searchChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the search input value changes.\n",
                    "description": "<p>Event emitted when the search input value changes.</p>\n",
                    "line": 189,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the multi-tag select input becomes valid or invalid.\n",
                    "description": "<p>Event emitted when the multi-tag select input becomes valid or invalid.</p>\n",
                    "line": 204,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the selected values change.\n",
                    "description": "<p>Event emitted when the selected values change.</p>\n",
                    "line": 184,
                    "type": "EventEmitter<Array<OptionMulti>>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<OptionMulti>",
                    "optional": false,
                    "description": "<p>Control pagination for options</p>\n",
                    "line": 245,
                    "rawdescription": "\n\nControl pagination for options\n"
                },
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "- The element reference.",
                    "line": 284,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Error message associated with the multi-tag select input.</p>\n",
                    "line": 235,
                    "rawdescription": "\n\nError message associated with the multi-tag select input.\n"
                },
                {
                    "name": "findItemInValue",
                    "defaultValue": "useMemo((item: OptionMulti, value?: Array<OptionMulti>) => {\n    return !!value?.find((value) => value.value === item.value)\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Determines if an item exists in the selected values.</p>\n",
                    "line": 308,
                    "rawdescription": "\n\nDetermines if an item exists in the selected values.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 7084,
                            "end": 7141,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 7085,
                                "end": 7090,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The item to search for.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 7091,
                                "end": 7104,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 7092,
                                    "end": 7103,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 7092,
                                        "end": 7103,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "OptionMulti"
                                    }
                                }
                            },
                            "name": {
                                "pos": 7105,
                                "end": 7109,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 7141,
                            "end": 7229,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 7142,
                                "end": 7149,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the item exists in the selected values; otherwise, false.</p>\n",
                            "typeExpression": {
                                "pos": 7150,
                                "end": 7159,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 7151,
                                    "end": 7158,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "hasMoreOptions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicate if has more options to add on _options</p>\n",
                    "line": 250,
                    "rawdescription": "\n\nIndicate if has more options to add on _options\n"
                },
                {
                    "name": "isMaxTags",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Control the readonly on reach the maxTags</p>\n",
                    "line": 270,
                    "rawdescription": "\n\nControl the readonly on reach the maxTags\n"
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>The label template for the multi-tag select input.</p>\n",
                    "line": 54,
                    "rawdescription": "\n\nThe label template for the multi-tag select input.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "limit",
                    "defaultValue": "this.quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Control the _options limit</p>\n",
                    "line": 265,
                    "rawdescription": "\n\nControl the _options limit\n"
                },
                {
                    "name": "loadingScroll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading for sq-infinity-scroll</p>\n",
                    "line": 255,
                    "rawdescription": "\n\nLoading for sq-infinity-scroll\n"
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Native element reference.</p>\n",
                    "line": 240,
                    "rawdescription": "\n\nNative element reference.\n"
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the multi-tag select dropdown is open.</p>\n",
                    "line": 215,
                    "rawdescription": "\n\nIndicates whether the multi-tag select dropdown is open.\n"
                },
                {
                    "name": "quantity",
                    "defaultValue": "15",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Control quantity for limit and to addMore on _options</p>\n",
                    "line": 260,
                    "rawdescription": "\n\nControl quantity for limit and to addMore on _options\n"
                },
                {
                    "name": "renderOptionsList",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates when is the time to render the multi-tag select dropdown.</p>\n",
                    "line": 210,
                    "rawdescription": "\n\nIndicates when is the time to render the multi-tag select dropdown.\n"
                },
                {
                    "name": "searchText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Text entered in the search input field.</p>\n",
                    "line": 220,
                    "rawdescription": "\n\nText entered in the search input field.\n"
                },
                {
                    "name": "timeouted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether a timeout has occurred for input changes.</p>\n",
                    "line": 230,
                    "rawdescription": "\n\nIndicates whether a timeout has occurred for input changes.\n"
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 275,
                    "rawdescription": "\n\nTimeout for input changes.\n"
                },
                {
                    "name": "trackByOptValue",
                    "defaultValue": "useMemo((index, opt) => opt.value)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrackByFunction<any>",
                    "optional": false,
                    "description": "<p>Return trackBy for ngFor</p>\n",
                    "line": 474,
                    "rawdescription": "\n\nReturn trackBy for ngFor\n"
                },
                {
                    "name": "valueChanged",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the value has changed.</p>\n",
                    "line": 225,
                    "rawdescription": "\n\nIndicates whether the value has changed.\n"
                },
                {
                    "name": "verifyIfHasChildrenInValue",
                    "defaultValue": "useMemo((item: OptionMulti, value?: Array<OptionMulti>) => {\n    if (item.children?.length) {\n      const hasAllChildren = item.children.every((child) => this.findItemInValue(child, value))\n      if (hasAllChildren && !this.findItemInValue(item, value) && !this.timeouted) {\n        this.timeouted = true\n        setTimeout(() => {\n          this.emit(item, true)\n          this.timeouted = false\n        }, 0)\n      }\n      return !!item.children.find((child) => this.findItemInValue(child, value))\n    }\n    return false\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Verifies if an item has children that are selected.</p>\n",
                    "line": 328,
                    "rawdescription": "\n\nVerifies if an item has children that are selected.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 7784,
                            "end": 7836,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 7785,
                                "end": 7790,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The item to check.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 7791,
                                "end": 7804,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 7792,
                                    "end": 7803,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 7792,
                                        "end": 7803,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "OptionMulti"
                                    }
                                }
                            },
                            "name": {
                                "pos": 7805,
                                "end": 7809,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 7836,
                            "end": 7916,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 7837,
                                "end": 7844,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the item has selected children; otherwise, false.</p>\n",
                            "typeExpression": {
                                "pos": 7845,
                                "end": 7854,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 7846,
                                    "end": 7853,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "verifyIfOptionsHasChildren",
                    "defaultValue": "useMemo((options: OptionMulti[]) => {\n    return options.some((item) => item.children?.length)\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Verifies if any options have children.</p>\n",
                    "line": 318,
                    "rawdescription": "\n\nVerifies if any options have children.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 7443,
                            "end": 7503,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 7444,
                                "end": 7449,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The options to check.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 7450,
                                "end": 7465,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 7451,
                                    "end": 7464,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 188,
                                    "elementType": {
                                        "pos": 7451,
                                        "end": 7462,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 183,
                                        "typeName": {
                                            "pos": 7451,
                                            "end": 7462,
                                            "flags": 16777216,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 0,
                                            "kind": 80,
                                            "escapedText": "OptionMulti"
                                        }
                                    }
                                }
                            },
                            "name": {
                                "pos": 7466,
                                "end": 7473,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "options"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 7503,
                            "end": 7576,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 7504,
                                "end": 7511,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if any option has children; otherwise, false.</p>\n",
                            "typeExpression": {
                                "pos": 7512,
                                "end": 7521,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 7513,
                                    "end": 7520,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            }
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addMoreOptions",
                    "args": [
                        {
                            "name": "isOnChange",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 493,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFunction to add more values on _options\n",
                    "description": "<p>Function to add more values on _options</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isOnChange",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 417,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCloses the multi-tag select dropdown.\n",
                    "description": "<p>Closes the multi-tag select dropdown.</p>\n"
                },
                {
                    "name": "doDropDownAction",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 397,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDo action to open or close thw dropdown list\n",
                    "description": "<p>Do action to open or close thw dropdown list</p>\n",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "emit",
                    "args": [
                        {
                            "name": "object",
                            "type": "OptionMulti",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 370,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits a change event with the specified object and checked state.\n\n",
                    "description": "<p>Emits a change event with the specified object and checked state.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9190,
                                "end": 9196,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "object"
                            },
                            "type": "OptionMulti",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9170,
                                "end": 9175,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The object to emit.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 9176,
                                "end": 9189,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 9177,
                                    "end": 9188,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 9177,
                                        "end": 9188,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "OptionMulti"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 9241,
                                "end": 9248,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "checked"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9225,
                                "end": 9230,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The checked state.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 9231,
                                "end": 9240,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 9232,
                                    "end": 9239,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "handleCollapse",
                    "args": [
                        {
                            "name": "item",
                            "type": "OptionMulti",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 432,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles the collapse of an item.\n\n",
                    "description": "<p>Handles the collapse of an item.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11010,
                                "end": 11014,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "type": "OptionMulti",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 10990,
                                "end": 10995,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The item to collapse.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 10996,
                                "end": 11009,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 10997,
                                    "end": 11008,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 10997,
                                        "end": 11008,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "OptionMulti"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "modelChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 479,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange searchtext with timeout and detect detectChanges\n",
                    "description": "<p>Change searchtext with timeout and detect detectChanges</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 293,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook called when any input properties change.\n\n",
                    "description": "<p>Lifecycle hook called when any input properties change.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6644,
                                "end": 6651,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6638,
                                "end": 6643,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The changes detected in the component&#39;s input properties.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "OptionMulti",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 348,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves an item from the selected values.\n\n",
                    "description": "<p>Removes an item from the selected values.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8563,
                                "end": 8567,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "type": "OptionMulti",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8543,
                                "end": 8548,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The item to remove.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 8549,
                                "end": 8562,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 8550,
                                    "end": 8561,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 8550,
                                        "end": 8561,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "OptionMulti"
                                    }
                                }
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interpolateParams",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 441,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11175,
                                "end": 11178,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11160,
                                "end": 11165,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 11166,
                                "end": 11174,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 11167,
                                    "end": 11173,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        },
                        {
                            "name": "interpolateParams",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 450,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates the multi-tag select input and sets the error state.\n",
                    "description": "<p>Validates the multi-tag select input and sets the error state.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a multi-tag select component.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-select-multi-tags\n  [name]=&quot;&#39;tags&#39;&quot;\n  [value]=&quot;selectedTags&quot;\n  [options]=&quot;tagOptions&quot;\n  (valueChange)=&quot;handleTagSelection($event)&quot;\n&gt;\n&lt;/sq-select-multi-tags&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a multi-tag select component.\n\n```html\n<sq-select-multi-tags\n  [name]=\"'tags'\"\n  [value]=\"selectedTags\"\n  [options]=\"tagOptions\"\n  (valueChange)=\"handleTagSelection($event)\"\n>\n</sq-select-multi-tags>\n```\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, Input, OnChanges, Optional, Output, SimpleChanges, TemplateRef, TrackByFunction } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { useMemo } from '../../helpers/memo.helper'\nimport { OptionMulti } from '../../interfaces/option.interface'\n\n/**\n * Represents a multi-tag select component.\n *\n * @example\n * <sq-select-multi-tags\n *   [name]=\"'tags'\"\n *   [value]=\"selectedTags\"\n *   [options]=\"tagOptions\"\n *   (valueChange)=\"handleTagSelection($event)\"\n * >\n * </sq-select-multi-tags>\n * \n * @implements {OnChanges}\n */\n@Component({\n  selector: 'sq-select-multi-tags',\n  templateUrl: './sq-select-multi-tags.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./sq-select-multi-tags.component.scss'],\n  providers: [],\n})\nexport class SqSelectMultiTagsComponent implements OnChanges {\n  /**\n   * The name attribute for the multi-tag select input.\n   * \n   * @default 'random-name-[hash-random-code]'\n   */\n  @Input() name = `random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`\n\n  /**\n   * The selected values for the multi-tag select input.\n   */\n  @Input() value?: OptionMulti[] = []\n\n  /**\n   * The id attribute for the multi-tag select input.\n   */\n  @Input() id?: string\n\n  /**\n   * The label for the multi-tag select input.\n   */\n  @Input() label = ''\n\n  /**\n   * The label template for the multi-tag select input.\n   */\n  @ContentChild('labelTemplate')\n  labelTemplate: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Custom CSS class for styling the component.\n   */\n  @Input() customClass = ''\n\n  /**\n   * Placeholder text for the input field.\n   */\n  @Input() placeholder = ''\n\n  /**\n   * External error message for the multi-tag select input.\n   */\n  @Input() externalError = ''\n\n  /**\n   * External icon for the multi-tag select input.\n   */\n  @Input() externalIcon = ''\n\n  /**\n   * Placeholder text for the search input field.\n   */\n  @Input() placeholderSearch = ''\n\n  /**\n   * Indicates whether the multi-tag select input is disabled.\n   */\n  @Input() disabled = false\n\n  /**\n   * Indicates whether the multi-tag select input is readonly.\n   */\n  @Input() readonly = false\n\n  /**\n   * Indicates whether the multi-tag select input is required.\n   */\n  @Input() required = false\n\n  /**\n   * Indicates whether the multi-tag select input is in a loading state.\n   */\n  @Input() loading = false\n\n  /**\n   * Indicates whether to use form errors for validation.\n   */\n  @Input() useFormErrors = true\n\n  /**\n   * Indicates whether to display an error span.\n   */\n  @Input() errorSpan = true\n\n  /**\n   * Background color for the multi-tag select input.\n   */\n  @Input() backgroundColor = ''\n\n  /**\n   * Border color for the multi-tag select input.\n   */\n  @Input() borderColor = ''\n\n  /**\n   * Color for the label of the multi-tag select input.\n   */\n  @Input() labelColor = ''\n\n  /**\n   * Minimum number of characters to perform the searchChange.\n   */\n  @Input() minCharactersToSearch = 0\n\n  /**\n   * The time interval for input timeout in ms.\n   */\n  @Input() timeToChange = 800\n\n  /**\n   * Options available for selection.\n   */\n  @Input() options: Array<OptionMulti> = []\n\n  /**\n   * Maximum number of tags that can be chosen.\n   */\n  @Input() maxTags?: number\n\n  /**\n   * Minimum number of tags that can be chosen.\n   */\n  @Input() minTags?: number\n\n  /**\n   * Indicates whether to show selected tags inside the input.\n   */\n  @Input() showInside = true\n\n  /**\n   * Indicates whether to hide the search input.\n   */\n  @Input() hideSearch = false\n\n  /**\n   * Tooltip message for the multi-tag select input.\n   */\n  @Input() tooltipMessage = ''\n\n  /**\n   * Tooltip placement for the multi-tag select input.\n   */\n  @Input() tooltipPlacement: 'center top' | 'center bottom' | 'left center' | 'right center' = 'right center'\n\n  /**\n   * Tooltip color for the multi-tag select input.\n   */\n  @Input() tooltipColor = 'inherit'\n\n  /**\n   * Tooltip icon for the multi-tag select input.\n   */\n  @Input() tooltipIcon = ''\n\n  /**\n   * Event emitted when the selected values change.\n   */\n  @Output() valueChange: EventEmitter<Array<OptionMulti>> = new EventEmitter()\n\n  /**\n   * Event emitted when the search input value changes.\n   */\n  @Output() searchChange: EventEmitter<string> = new EventEmitter()\n\n  /**\n   * Event emitted when the multi-tag select dropdown is closed.\n   */\n  @Output() closeChange: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * Event emitted when a tag is removed.\n   */\n  @Output() removeTag: EventEmitter<OptionMulti> = new EventEmitter()\n\n  /**\n   * Event emitted when the multi-tag select input becomes valid or invalid.\n   */\n  @Output() valid: EventEmitter<boolean> = new EventEmitter()\n\n\n  /**\n   * Indicates when is the time to render the multi-tag select dropdown.\n   */\n  renderOptionsList = false\n\n  /**\n   * Indicates whether the multi-tag select dropdown is open.\n   */\n  open = false\n\n  /**\n   * Text entered in the search input field.\n   */\n  searchText = ''\n\n  /**\n   * Indicates whether the value has changed.\n   */\n  valueChanged = false\n\n  /**\n   * Indicates whether a timeout has occurred for input changes.\n   */\n  timeouted = false\n\n  /**\n   * Error message associated with the multi-tag select input.\n   */\n  error: boolean | string = ''\n\n  /**\n   * Native element reference.\n   */\n  nativeElement: ElementRef\n\n  /**\n   * Control pagination for options\n   */\n  _options: Array<OptionMulti> = []\n\n  /**\n   * Indicate if has more options to add on _options\n   */\n  hasMoreOptions = true\n\n  /**\n   * Loading for sq-infinity-scroll\n   */\n  loadingScroll = false\n\n  /**\n   * Control quantity for limit and to addMore on _options\n   */\n  quantity = 15\n\n  /**\n   * Control the _options limit\n   */\n  limit = this.quantity\n\n  /**\n   * Control the readonly on reach the maxTags\n   */\n  isMaxTags = false\n\n  /**\n   * Timeout for input changes.\n   */\n  timeoutInput!: ReturnType<typeof setTimeout>\n\n  /**\n   * Constructs a new SqSelectMultiTagsComponent.\n   *\n   * @param {ElementRef} element - The element reference.\n   * @param {TranslateService} translate - The optional TranslateService for internationalization.\n   * @param {ChangeDetectorRef} changeDetector - Base class that provides change detection functionality.\n   */\n  constructor(public element: ElementRef, @Optional() private translate: TranslateService, private changeDetector: ChangeDetectorRef) {\n    this.nativeElement = element.nativeElement\n  }\n\n  /**\n   * Lifecycle hook called when any input properties change.\n   *\n   * @param changes - The changes detected in the component's input properties.\n   */\n  async ngOnChanges(changes: SimpleChanges) {\n    if (this.open && changes.hasOwnProperty('options')) {\n      this.addMoreOptions(true)\n    }\n    if (changes.hasOwnProperty('value') || changes.hasOwnProperty('minTags') || changes.hasOwnProperty('maxTags')) {\n      this.validate()\n    }\n  }\n\n  /**\n   * Determines if an item exists in the selected values.\n   *\n   * @param {OptionMulti} item - The item to search for.\n   * @returns {boolean} True if the item exists in the selected values; otherwise, false.\n   */\n  findItemInValue = useMemo((item: OptionMulti, value?: Array<OptionMulti>) => {\n    return !!value?.find((value) => value.value === item.value)\n  })\n\n  /**\n   * Verifies if any options have children.\n   *\n   * @param {OptionMulti[]} options - The options to check.\n   * @returns {boolean} True if any option has children; otherwise, false.\n   */\n  verifyIfOptionsHasChildren = useMemo((options: OptionMulti[]) => {\n    return options.some((item) => item.children?.length)\n  })\n\n  /**\n   * Verifies if an item has children that are selected.\n   *\n   * @param {OptionMulti} item - The item to check.\n   * @returns {boolean} True if the item has selected children; otherwise, false.\n   */\n  verifyIfHasChildrenInValue = useMemo((item: OptionMulti, value?: Array<OptionMulti>) => {\n    if (item.children?.length) {\n      const hasAllChildren = item.children.every((child) => this.findItemInValue(child, value))\n      if (hasAllChildren && !this.findItemInValue(item, value) && !this.timeouted) {\n        this.timeouted = true\n        setTimeout(() => {\n          this.emit(item, true)\n          this.timeouted = false\n        }, 0)\n      }\n      return !!item.children.find((child) => this.findItemInValue(child, value))\n    }\n    return false\n  })\n\n  /**\n   * Removes an item from the selected values.\n   *\n   * @param {OptionMulti} item - The item to remove.\n   */\n  removeItem(item: OptionMulti, event: any) {\n    event?.stopPropagation()\n    if(!this.readonly && !this.disabled) {\n      if (item.children?.length) {\n        item.children.forEach((child) => {\n          this.value = this.value?.filter((value) => value.value !== child.value)\n        })\n      }\n      this.value = this.value?.filter((value) => value.value !== item.value)\n      \n      this.valueChange.emit(this.value)\n      this.removeTag.emit(item)\n      this.validate()\n    }\n  }\n\n  /**\n   * Emits a change event with the specified object and checked state.\n   *\n   * @param {OptionMulti} object - The object to emit.\n   * @param {boolean} checked - The checked state.\n   */\n  emit(object: OptionMulti, checked: boolean) {\n    if (checked) {\n      this.value?.push(object)\n      // This code adds all children of a parent to value. Commented out for now as it is not the desired behavior.\n      // if (object.children?.length) {\n      //   object.children.forEach((item) => {\n      //     if (!this.value.find((child) => child.value === item.value)) {\n      //       this.value.push(item)\n      //     }\n      //   })\n      // }\n    } else {\n      this.value = this.value?.filter((item) => item.value !== object.value)\n      if (object.children?.length) {\n        object.children.forEach((item) => {\n          this.value = this.value?.filter((child) => child.value !== item.value)\n        })\n      }\n    }\n    this.valueChanged = true\n    this.valueChange.emit(this.value)\n    this.validate()\n  }\n\n  /**\n   * Do action to open or close thw dropdown list\n   */\n  async doDropDownAction() {\n    if (this.open) {\n      this.closeDropdown()\n      this.renderOptionsList = await new Promise<boolean>(resolve => setTimeout(() => {\n        resolve(false)\n      }, 300))\n      this.changeDetector.detectChanges()\n    } else {\n      this.addMoreOptions()\n      this.renderOptionsList = true\n      this.open = await new Promise<boolean>(resolve => setTimeout(() => {\n        resolve(true)\n      }, 100))\n      this.changeDetector.detectChanges()\n    }\n  }\n\n  /**\n   * Closes the multi-tag select dropdown.\n   */\n  closeDropdown() {\n    this.open = false\n    this._options = []\n    this.limit = this.quantity\n    this.hasMoreOptions = true\n    this.searchText = ''\n    this.closeChange.emit(this.valueChanged)\n    this.valueChanged = false\n  }\n\n  /**\n   * Handles the collapse of an item.\n   *\n   * @param {OptionMulti} item - The item to collapse.\n   */\n  handleCollapse(item: OptionMulti) {\n    item.open = !item.open\n  }\n\n  /**\n   * Sets an error message.\n   *\n   * @param {string} key - The translation key for the error message.\n   */\n  async setError(key: string, interpolateParams: Object = {}) {\n    if (this.useFormErrors && this.translate) {\n      this.error = await this.translate.instant(key, interpolateParams)\n    }\n  }\n\n  /**\n   * Validates the multi-tag select input and sets the error state.\n   */\n  validate() {\n    if (this.externalError) {\n      this.error = false\n    } else if (this.required && !this.value?.length) {\n      this.setError('forms.required')\n      this.valid.emit(false)\n    } else if (this.minTags && this.value && this.value?.length < this.minTags) {\n      this.setError('forms.minimumRequired', {minTags: this.minTags})\n      this.valid.emit(false)\n    } else if (this.maxTags && this.value && this.value?.length === this.maxTags) {\n      this.renderOptionsList = false\n      this.isMaxTags = true\n      this.error = ''\n      this.valid.emit(true)\n    } else {\n      this.isMaxTags = false\n      this.error = ''\n      this.valid.emit(true)\n    }\n  }\n\n  /**\n   * Return trackBy for ngFor\n   */\n  trackByOptValue: TrackByFunction<any> = useMemo((index, opt) => opt.value)\n\n  /**\n   * Change searchtext with timeout and detect detectChanges\n   */\n  async modelChange(event: any) {\n    if (!this.minCharactersToSearch || !event.length || event.length >= this.minCharactersToSearch) {\n      clearTimeout(this.timeoutInput)\n      this.searchText = await new Promise<string>(resolve => this.timeoutInput = setTimeout(() => {\n        resolve(event)\n      }, this.timeToChange)) || ''\n      this.searchChange.emit(event)\n      this.changeDetector.detectChanges()\n    }\n  }\n\n  /**\n   * Function to add more values on _options\n   */\n  addMoreOptions(isOnChange = false) {\n    if (this.hasMoreOptions || isOnChange) {\n      this.loadingScroll = true\n      const limitState = this.limit > this.options?.length ? this.options.length : this.limit\n      this._options = this.options.slice(0, limitState)\n      this.limit = this.limit + this.quantity\n      this.hasMoreOptions = limitState !== this.options.length\n      this.loadingScroll = false\n      this.changeDetector.detectChanges()\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-select-multi {\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  &.loading {\n    cursor: wait;\n  }\n\n  .input-fake-content-text {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 5px;\n    max-width: calc(100% - 40px);\n    min-height: 51px;\n\n    .tag {\n      margin: 0;\n      border: 1px solid var(--border_color);\n      border-radius: 5px;\n      padding: 0.2rem 0.35rem;\n      display: flex;\n      align-items: center;\n      gap: 5px;\n      cursor: pointer;\n      transition: var(--transition);\n      background: var(--background_secondary);\n\n      &:hover {\n        background: var(--border_color);\n      }\n    }\n  }\n\n  .input-fake-content {\n    min-height: 44px;\n    border: 1px solid var(--border_color);\n    background: var(--background);\n    padding: 0.75rem 1rem;\n    transition: var(--transition);\n    color: var(--text_color);\n    border-radius: 5px;\n\n    .icon-down {\n      right: 5px;\n      bottom: calc(50% - 6px);\n      position: absolute;\n      font-size: 0.86rem;\n    }\n  }\n\n  .loading-wrapper {\n    position: absolute;\n    right: 5px;\n    bottom: 10px;\n  }\n\n  .badge {\n    position: absolute;\n    bottom: 15px;\n    right: 20px;\n    margin: 0;\n    border-radius: 50%;\n    background-color: var(--border_color);\n    color: var(--black);\n    font-size: 0.86rem;\n    font-weight: 700;\n    padding: 0 0.35rem;\n    border-radius: 50%;\n    min-width: 20px;\n    height: 20px;\n    line-height: 20px;\n    text-align: center;\n    transition: var(--transition);\n  }\n\n  .input-search {\n    display: inline-block;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    width: 100%;\n    padding-top: 1.1rem;\n    margin-bottom: 0.7rem;\n    background-color: var(--background_secondary);\n\n    .wrapper-all-inside-input {\n      .icon {\n        margin: 0;\n        font-size: 1rem;\n        font-weight: 700;\n        position: absolute;\n        right: 11px;\n        top: 27px;\n      }\n\n      .icon-external {\n        color: inherit !important;\n      }\n    }\n  }\n\n  .input-window {\n    width: 100%;\n    position: absolute;\n    top: 100%;\n    max-height: 0;\n    height: 0;\n    transition: var(--transition);\n    overflow: hidden;\n    z-index: 1;\n\n    &.open {\n      height: auto;\n      max-height: 400px;\n      background: var(--background_secondary);\n      padding: 0 0.7rem 1.1rem;\n      overflow-y: auto;\n      box-shadow: var(--box_shadow);\n    }\n  }\n\n  .icon-collapse {\n    transition: var(--transition);\n    cursor: pointer;\n    padding: 0.35rem;\n    position: relative;\n  }\n\n  .list,\n  .children {\n    padding: 0;\n    list-style: none;\n    margin: 0;\n    width: 100%;\n\n    li {\n      display: grid;\n      .label {\n        margin: 0 0 0.5rem;\n        display: flex;\n        flex-wrap: nowrap;\n        align-items: baseline;\n        justify-content: flex-start;\n        transition: var(--transition);\n      }\n    }\n  }\n\n  .children {\n    max-height: 0;\n    overflow: hidden;\n    transition: var(--transition);\n    padding-left: 1.4rem;\n\n    &.open {\n      max-height: 9999px;\n    }\n  }\n}",
                    "styleUrl": "./sq-select-multi-tags.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new SqSelectMultiTagsComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "changeDetector",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 275,
                "rawdescription": "\n\nConstructs a new SqSelectMultiTagsComponent.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 6128,
                            "end": 6135,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 6109,
                            "end": 6114,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The element reference.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 6115,
                            "end": 6127,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 6116,
                                "end": 6126,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 6116,
                                    "end": 6126,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ElementRef"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 6192,
                            "end": 6201,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 6167,
                            "end": 6172,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The optional TranslateService for internationalization.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 6173,
                            "end": 6191,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 6174,
                                "end": 6190,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 6174,
                                    "end": 6190,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "TranslateService"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 6292,
                            "end": 6306,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "changeDetector"
                        },
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 6266,
                            "end": 6271,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Base class that provides change detection functionality.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 6272,
                            "end": 6291,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 6273,
                                "end": 6290,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 6273,
                                    "end": 6290,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ChangeDetectorRef"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"wrapper-all-inside-input {{ customClass }}\">\n  <label\n    class=\"display-flex align-items-center\"\n    *ngIf=\"label?.length || labelTemplate || tooltipMessage\"\n    [ngClass]=\"{\n      readonly: readonly || isMaxTags\n    }\"\n    [for]=\"id\"\n  >\n    <div *ngIf=\"label && !labelTemplate\" [ngStyle]=\"{ 'color': labelColor }\" [innerHtml]=\"label | universalSafe\"></div>\n    <span *ngIf=\"labelTemplate\">\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n    </span>\n    <sq-tooltip\n      *ngIf=\"tooltipMessage\"\n      class=\"ml-1\"\n      [message]=\"tooltipMessage\"\n      [placement]=\"tooltipPlacement\"\n      [color]=\"tooltipColor\"\n      [icon]=\"tooltipIcon\"\n    ></sq-tooltip>\n  </label>\n  <div\n    class=\"wrapper-select-multi\"\n    [ngClass]=\"{\n      error: (externalError && externalError !== '') || (error && error !== ''),\n      disabled: disabled,\n      readonly: readonly || isMaxTags,\n      loading: loading\n    }\"\n  >\n    <div\n      [class]=\"'input-fake col  border-' + borderColor\"\n      style=\"min-height: auto\"\n      [ngStyle]=\"{ 'border-color': borderColor }\"\n      [ngClass]=\"{\n        'no-label': !(label && label.length > 0),\n        'has-icon': error || externalError,\n        disabled: disabled,\n        readonly: readonly || isMaxTags\n      }\"\n      [ngStyle]=\"{\n        'background-color': backgroundColor,\n        'border-color': borderColor\n      }\"\n      [clickOutsideEnabled]=\"open\"\n      (clickOutside)=\"closeDropdown()\"\n    >\n      <div\n        class=\"input-fake-content\"\n        [ngClass]=\"{\n          disabled: disabled\n        }\"\n        (click)=\"doDropDownAction()\"\n      >\n        <div class=\"loading-wrapper\" *ngIf=\"loading\">\n          <sq-loader></sq-loader>\n        </div>\n        <span *ngIf=\"!value?.length || !showInside\">{{ placeholder }}</span>\n        <div class=\"input-fake-content-text\" *ngIf=\"showInside && value?.length\">\n          <span class=\"tag\" *ngFor=\"let opt of value; let i = index\" (click)=\"removeItem(opt, $event)\">\n            {{ opt?.label }} <i *ngIf=\"!readonly\" class=\"fas fa-times\" [style.minWidth]=\"'auto'\"></i>\n          </span>\n        </div>\n        <span *ngIf=\"value?.length\" class=\"badge\">{{ value!.length }}</span>\n        <i *ngIf=\"!loading && !readonly\" class=\"icon-down fas fa-chevron-down\"></i>\n      </div>\n      <div\n        *ngIf=\"!loading && !disabled && !readonly && !isMaxTags && renderOptionsList\"\n        id=\"sq-select-multi-tags-scroll\"\n        class=\"input-window scrollbar\"\n        [ngClass]=\"{\n          open: !loading && !disabled && !isMaxTags && renderOptionsList && open\n        }\"\n      >\n        <div class=\"input-search\">\n          <div class=\"wrapper-all-inside-input\">\n            <div class=\"p-0 wrapper-input wrapper-input-squid text-ellipsisarea\">\n              <input\n                [name]=\"name\"\n                [id]=\"id\"\n                [placeholder]=\"placeholderSearch || ('forms.search' | translateInternal | async) || ''\"\n                class=\"col input\"\n                [ngModel]=\"searchText\"\n                (ngModelChange)=\"modelChange($event)\"\n                *ngIf=\"!hideSearch\"\n              />\n            </div>\n            <span class=\"icon icon-external textarea-icon\"><i class='fas fa-search'></i></span>\n          </div>\n        </div>\n        <sq-infinity-scroll\n          class=\"list\"\n          elementToScrollId=\"sq-select-multi-tags-scroll\"\n          loaderColor=\"var(--pink)\"\n          [length]=\"_options.length || 0\"\n          [hasMore]=\"hasMoreOptions\"\n          [loading]=\"loadingScroll\"\n          (scrolledEmitter)=\"addMoreOptions()\"\n        >\n          <ng-container *ngFor=\"let opt of _options | searchFromAlternativeArray:searchText:options; let i = index; trackBy: trackByOptValue\">\n            <ng-template *ngTemplateOutlet=\"option; context: { opt: opt, i: i }\"></ng-template>\n          </ng-container>\n        </sq-infinity-scroll>\n        <p *ngIf=\"!_options?.length\">\n          {{ 'forms.searchSelectEmpty' | translateInternal | async }}\n        </p>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"box-validation box-invalid show\"\n    *ngIf=\"errorSpan\"\n    [ngClass]=\"{\n      'visibility-hidden-force': ((!externalError || externalError === '') && (!error || error === '')) || disabled || readonly\n    }\"\n  >\n    <i [ngClass]=\"{\n      'visibility-hidden-force': !error && !externalError\n    }\" class=\"fa-solid fa-triangle-exclamation\"></i>\n    {{ externalError ? externalError : '' }}\n    {{ error && !externalError ? error : '' }}\n  </div>\n  <ng-template #option let-opt=\"opt\" let-i=\"i\">\n    <li>\n      <div class=\"label\">\n        <i\n          class=\"icon-collapse fas fa-chevron-down\"\n          [ngClass]=\"{ 'fa-rotate-by': !opt.open }\"\n          [ngStyle]=\"{ color: !opt?.children?.length || opt?.disabled ? 'transparent' : '' }\"\n          (click)=\"handleCollapse(opt)\"\n          style=\"--fa-rotate-angle: -90deg\"\n          *ngIf=\"verifyIfOptionsHasChildren(options)\"\n        ></i>\n        <sq-selector\n          [style.minWidth]=\"'auto'\"\n          [id]=\"(id || name) + '-checkbox-' + opt?.value + '-' + i\"\n          [name]=\"name + '-checkbox'\"\n          [value]=\"opt?.value\"\n          [disabled]=\"opt?.disabled\"\n          [checked]=\"findItemInValue(opt, value)\"\n          [indeterminate]=\"verifyIfHasChildrenInValue(opt, value)\"\n          (valueChange)=\"emit(opt, $event.checked)\"\n        ></sq-selector>\n        <span class=\"text m-0 display-inline-block\" [ngClass]=\"{ 'cursor-pointer': opt?.children?.length }\" (click)=\"handleCollapse(opt)\">{{\n          opt?.label\n        }}</span>\n      </div>\n      <ul class=\"children\" *ngIf=\"opt?.children?.length\" [ngClass]=\"{open: !opt?.disabled && opt?.open}\">\n        <ng-container *ngFor=\"let child of opt?.children | searchValidValues:searchText; let j = index; trackBy: trackByOptValue\">\n          <ng-template *ngTemplateOutlet=\"option; context: { opt: child, i: j }\"></ng-template>\n        </ng-container>\n      </ul>\n    </li>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "SqSelectorComponent",
            "id": "component-SqSelectorComponent-f94610ba91e0f8a3a9a3eb30228f2e4516290a519e7fd283693df351a8d648eb8c61261ef9f27c23c79b32e2cf97926aad7d90f9a45a10dfc1852b218602755a",
            "file": "src/components/sq-selector/sq-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-selector",
            "styleUrls": [
                "./sq-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-selector.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "block",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBlock (width: 100%) the selector input.\n",
                    "description": "<p>Block (width: 100%) the selector input.</p>\n",
                    "line": 181,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the selector input is checked.\n",
                    "description": "<p>Indicates whether the selector input is checked.</p>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "colorBackground",
                    "defaultValue": "'green'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color for the selector input when checked.\n",
                    "description": "<p>Background color for the selector input when checked.</p>\n",
                    "line": 146,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "colorText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nText color for the selector input.\n",
                    "description": "<p>Text color for the selector input.</p>\n",
                    "line": 141,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the selector input is disabled.\n",
                    "description": "<p>Indicates whether the selector input is disabled.</p>\n",
                    "line": 126,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to display an error span.\n",
                    "description": "<p>Indicates whether to display an error span.</p>\n",
                    "line": 176,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message for the selector input.\n",
                    "description": "<p>External error message for the selector input.</p>\n",
                    "line": 161,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideInput",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to hide the actual input element.\n",
                    "description": "<p>Indicates whether to hide the actual input element.</p>\n",
                    "line": 151,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the selector input.\n",
                    "description": "<p>The id attribute for the selector input.</p>\n",
                    "line": 106,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the selector input is in an indeterminate state.\n",
                    "description": "<p>Indicates whether the selector input is in an indeterminate state.</p>\n",
                    "line": 121,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe label for the selector input.\n",
                    "description": "<p>The label for the selector input.</p>\n",
                    "line": 171,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe name attribute for the selector input.\n",
                    "description": "<p>The name attribute for the selector input.</p>\n",
                    "line": 96,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the selector input is readonly.\n",
                    "description": "<p>Indicates whether the selector input is readonly.</p>\n",
                    "line": 131,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the selector input is required.\n",
                    "description": "<p>Indicates whether the selector input is required.</p>\n",
                    "line": 136,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the selector input supports toggle behavior.\n",
                    "description": "<p>Indicates whether the selector input supports toggle behavior.</p>\n",
                    "line": 156,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'checkbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe type of selector: 'checkbox' or 'radio'.\n",
                    "description": "<p>The type of selector: &#39;checkbox&#39; or &#39;radio&#39;.</p>\n",
                    "line": 101,
                    "type": "\"checkbox\" | \"radio\"",
                    "decorators": []
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to use form errors for validation.\n",
                    "description": "<p>Indicates whether to use form errors for validation.</p>\n",
                    "line": 166,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe selected value of the selector input.\n",
                    "description": "<p>The selected value of the selector input.</p>\n",
                    "line": 111,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the selector input becomes valid or invalid.\n",
                    "description": "<p>Event emitted when the selector input becomes valid or invalid.</p>\n",
                    "line": 194,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the value of the selector input changes.\n",
                    "description": "<p>Event emitted when the value of the selector input changes.</p>\n",
                    "line": 186,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "context",
                    "defaultValue": "{\n    checked: this.thisChecked,\n    indeterminate: !this.thisChecked ? this.thisIndeterminate : false,\n    value: this.value\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Context object containing selector properties.</p>\n",
                    "line": 232,
                    "rawdescription": "\n\nContext object containing selector properties.\n"
                },
                {
                    "name": "error",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Error message associated with the selector input.</p>\n",
                    "line": 227,
                    "rawdescription": "\n\nError message associated with the selector input.\n"
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 212,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Content child for the left label template.</p>\n",
                    "line": 206,
                    "rawdescription": "\n\nContent child for the left label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Content child for the right label template.</p>\n",
                    "line": 200,
                    "rawdescription": "\n\nContent child for the right label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "thisChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the selector input is currently checked.</p>\n",
                    "line": 217,
                    "rawdescription": "\n\nIndicates whether the selector input is currently checked.\n"
                },
                {
                    "name": "thisIndeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the selector input is in an indeterminate state.</p>\n",
                    "line": 222,
                    "rawdescription": "\n\nIndicates whether the selector input is in an indeterminate state.\n"
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- The optional TranslateService for internationalization.",
                    "line": 244,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 297,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles the change event of the selector input.\n\n",
                    "description": "<p>Handles the change event of the selector input.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6483,
                                "end": 6488,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6471,
                                "end": 6476,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The change event object.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6477,
                                "end": 6482,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6478,
                                    "end": 6481,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 133
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 252,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook called when any input properties change.\n\n",
                    "description": "<p>Lifecycle hook called when any input properties change.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5246,
                                "end": 5253,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5224,
                                "end": 5229,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>An object containing changed input properties.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5230,
                                "end": 5245,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5231,
                                    "end": 5244,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 5231,
                                        "end": 5244,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "SimpleChanges"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 286,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6202,
                                "end": 6205,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6187,
                                "end": 6192,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6193,
                                "end": 6201,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6194,
                                    "end": 6200,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates the selector input and sets the error state.\n",
                    "description": "<p>Validates the selector input and sets the error state.</p>\n",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a selector input component for checkboxes or radio buttons.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/forms/selectors%7D\">https://css.squidit.com.br/forms/selectors}</a></p>\n<br />\n<div class='row'>\n <div class='col-md-4'>\n   <div class='wrapper-selectors mb-3'>\n     <input\n       type='checkbox'\n       name='checkbox'\n       id='checkbox'\n     />\n     <label\n       class='checkbox'\n       for='checkbox'\n     ></label>\n     <label\n       for='checkbox'\n     >\n       Label\n     </label>\n   </div>\n </div>\n <div class='col-md-4'>\n   <div class='wrapper-selectors mb-3'>\n     <input\n       type='radio'\n       name='radio'\n       id='radio'\n     />\n     <label\n       class='checkbox'\n       for='radio'\n     ></label>\n     <label\n       for='radio'\n     >\n       Label\n     </label>\n   </div>\n </div>\n <div class='col-md-4'>\n   <div class='wrapper-selectors toggle mb-3'>\n     <input\n       type='checkbox'\n       name='toggle'\n       id='toggle'\n     />\n     <label\n       class='checkbox'\n       for='toggle'\n     ></label>\n     <label\n       for='toggle'\n     >\n       Label\n     </label>\n   </div>\n </div>\n</div>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-selector\n  [label]=&quot;&#39;Check this box&#39;&quot;\n  [checked]=&quot;isChecked&quot;\n  [value]=&quot;selectedValue&quot;\n  (valueChange)=&quot;handleValueChange($event)&quot;\n&gt;&lt;/sq-selector&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a selector input component for checkboxes or radio buttons.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/forms/selectors}\n\n<br />\n<div class='row'>\n <div class='col-md-4'>\n   <div class='wrapper-selectors mb-3'>\n     <input\n       type='checkbox'\n       name='checkbox'\n       id='checkbox'\n     />\n     <label\n       class='checkbox'\n       for='checkbox'\n     ></label>\n     <label\n       for='checkbox'\n     >\n       Label\n     </label>\n   </div>\n </div>\n <div class='col-md-4'>\n   <div class='wrapper-selectors mb-3'>\n     <input\n       type='radio'\n       name='radio'\n       id='radio'\n     />\n     <label\n       class='checkbox'\n       for='radio'\n     ></label>\n     <label\n       for='radio'\n     >\n       Label\n     </label>\n   </div>\n </div>\n <div class='col-md-4'>\n   <div class='wrapper-selectors toggle mb-3'>\n     <input\n       type='checkbox'\n       name='toggle'\n       id='toggle'\n     />\n     <label\n       class='checkbox'\n       for='toggle'\n     ></label>\n     <label\n       for='toggle'\n     >\n       Label\n     </label>\n   </div>\n </div>\n</div>\n\n```html\n<sq-selector\n  [label]=\"'Check this box'\"\n  [checked]=\"isChecked\"\n  [value]=\"selectedValue\"\n  (valueChange)=\"handleValueChange($event)\"\n></sq-selector>\n```",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\n\n/**\n * Represents a selector input component for checkboxes or radio buttons.\n *\n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/forms/selectors}\n * \n * <br />\n * <div class='row'>\n *  <div class='col-md-4'>\n *    <div class='wrapper-selectors mb-3'>\n *      <input\n *        type='checkbox'\n *        name='checkbox'\n *        id='checkbox'\n *      />\n *      <label\n *        class='checkbox'\n *        for='checkbox'\n *      ></label>\n *      <label\n *        for='checkbox'\n *      >\n *        Label\n *      </label>\n *    </div>\n *  </div>\n *  <div class='col-md-4'>\n *    <div class='wrapper-selectors mb-3'>\n *      <input\n *        type='radio'\n *        name='radio'\n *        id='radio'\n *      />\n *      <label\n *        class='checkbox'\n *        for='radio'\n *      ></label>\n *      <label\n *        for='radio'\n *      >\n *        Label\n *      </label>\n *    </div>\n *  </div>\n *  <div class='col-md-4'>\n *    <div class='wrapper-selectors toggle mb-3'>\n *      <input\n *        type='checkbox'\n *        name='toggle'\n *        id='toggle'\n *      />\n *      <label\n *        class='checkbox'\n *        for='toggle'\n *      ></label>\n *      <label\n *        for='toggle'\n *      >\n *        Label\n *      </label>\n *    </div>\n *  </div>\n *</div>\n * \n * @example\n * <sq-selector\n *   [label]=\"'Check this box'\"\n *   [checked]=\"isChecked\"\n *   [value]=\"selectedValue\"\n *   (valueChange)=\"handleValueChange($event)\"\n * ></sq-selector>\n */\n@Component({\n  selector: 'sq-selector',\n  templateUrl: './sq-selector.component.html',\n  styleUrls: ['./sq-selector.component.scss'],\n})\nexport class SqSelectorComponent implements OnChanges {\n  /**\n   * The name attribute for the selector input.\n   */\n  @Input() name = ''\n\n  /**\n   * The type of selector: 'checkbox' or 'radio'.\n   */\n  @Input() type: 'checkbox' | 'radio' = 'checkbox'\n\n  /**\n   * The id attribute for the selector input.\n   */\n  @Input() id?: string\n\n  /**\n   * The selected value of the selector input.\n   */\n  @Input() value: any = ''\n\n  /**\n   * Indicates whether the selector input is checked.\n   */\n  @Input() checked = false\n\n  /**\n   * Indicates whether the selector input is in an indeterminate state.\n   */\n  @Input() indeterminate = false\n\n  /**\n   * Indicates whether the selector input is disabled.\n   */\n  @Input() disabled?: boolean\n\n  /**\n   * Indicates whether the selector input is readonly.\n   */\n  @Input() readonly?: boolean\n\n  /**\n   * Indicates whether the selector input is required.\n   */\n  @Input() required?: boolean\n\n  /**\n   * Text color for the selector input.\n   */\n  @Input() colorText = ''\n\n  /**\n   * Background color for the selector input when checked.\n   */\n  @Input() colorBackground = 'green'\n\n  /**\n   * Indicates whether to hide the actual input element.\n   */\n  @Input() hideInput = false\n\n  /**\n   * Indicates whether the selector input supports toggle behavior.\n   */\n  @Input() toggle = false\n\n  /**\n   * External error message for the selector input.\n   */\n  @Input() externalError = ''\n\n  /**\n   * Indicates whether to use form errors for validation.\n   */\n  @Input() useFormErrors = true\n\n  /**\n   * The label for the selector input.\n   */\n  @Input() label = ''\n\n  /**\n   * Indicates whether to display an error span.\n   */\n  @Input() errorSpan = true\n\n  /**\n   * Block (width: 100%) the selector input.\n   */\n  @Input() block = false\n\n  /**\n   * Event emitted when the value of the selector input changes.\n   */\n  @Output() valueChange: EventEmitter<{\n    value: any;\n    checked: boolean;\n  }> = new EventEmitter()\n\n  /**\n   * Event emitted when the selector input becomes valid or invalid.\n   */\n  @Output() valid: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * Content child for the right label template.\n   */\n  @ContentChild('rightLabel')\n  rightLabel: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Content child for the left label template.\n   */\n  @ContentChild('leftLabel')\n  leftLabel: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to a right-aligned label template.\n   */\n  @ContentChild('labelTemplate')\n  labelTemplate: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Indicates whether the selector input is currently checked.\n   */\n  thisChecked = false\n\n  /**\n   * Indicates whether the selector input is in an indeterminate state.\n   */\n  thisIndeterminate = false\n\n  /**\n   * Error message associated with the selector input.\n   */\n  error = ''\n\n  /**\n   * Context object containing selector properties.\n   */\n  context: any = {\n    checked: this.thisChecked,\n    indeterminate: !this.thisChecked ? this.thisIndeterminate : false,\n    value: this.value\n  }\n\n  /**\n   * Constructs a new SqSelectorComponent.\n   *\n   * @param {TranslateService} translate - The optional TranslateService for internationalization.\n   */\n  constructor(\n    @Optional() public translate: TranslateService\n  ) { }\n\n  /**\n   * Lifecycle hook called when any input properties change.\n   *\n   * @param {SimpleChanges} changes - An object containing changed input properties.\n   */\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('checked')) {\n      this.thisChecked = this.checked\n      this.context.checked = this.thisChecked\n    }\n    if (changes.hasOwnProperty('indeterminate')) {\n      this.thisIndeterminate = this.indeterminate\n      this.context.indeterminate = !this.thisChecked ? this.thisIndeterminate : false\n    }\n    if (changes.hasOwnProperty('value')) {\n      this.context.value = this.value\n    }\n  }\n\n  /**\n   * Validates the selector input and sets the error state.\n   */\n  async validate() {\n    if (this.externalError) {\n      this.error = ''\n    } else if (this.required && !this.thisChecked) {\n      this.valid.emit(false)\n      this.error = await this.translate.instant('forms.required')\n    } else {\n      this.valid.emit(true)\n      this.error = ''\n    }\n  }\n\n  /**\n   * Sets an error message.\n   *\n   * @param {string} key - The translation key for the error message.\n   */\n  async setError(key: string) {\n    if (this.useFormErrors && this.translate) {\n      this.error = await this.translate.instant(key)\n    }\n  }\n\n  /**\n   * Handles the change event of the selector input.\n   *\n   * @param {any} event - The change event object.\n   */\n  change(event: any): void {\n    if (!this.readonly && !this.disabled) {\n      this.valueChange.emit({\n        value: this.value,\n        checked: event?.target?.checked,\n      })\n      this.thisChecked = event?.target?.checked\n    }\n    this.validate()\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.wrapper-selectors {\n  .hide-input {\n    display: none !important;\n  }\n  &.block{\n    .label-max-width{\n      width: 100%;\n    }\n  }\n}\n.block {\n  width: 100%;\n}",
                    "styleUrl": "./sq-selector.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new SqSelectorComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 236,
                "rawdescription": "\n\nConstructs a new SqSelectorComponent.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4997,
                            "end": 5006,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4972,
                            "end": 4977,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The optional TranslateService for internationalization.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 4978,
                            "end": 4996,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 4979,
                                "end": 4995,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 4979,
                                    "end": 4995,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "TranslateService"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div\n  class=\"wrapper-selectors\"\n  [ngClass]=\"{\n    toggle: toggle,\n    checked: thisChecked,\n    indeterminate: !thisChecked ? thisIndeterminate : false,\n    error: error,\n    block: block,\n  }\"\n>\n  <label [for]=\"id\" *ngIf=\"leftLabel && !labelTemplate\" [ngClass]=\"{'label-max-width': hideInput}\">\n    <ng-container\n      *ngTemplateOutlet=\"leftLabel; context: context\"\n    ></ng-container>\n  </label>\n  <label for=\"id\" *ngIf=\"labelTemplate\" [ngClass]=\"{'label-max-width': hideInput}\">\n    <div *ngIf=\"labelTemplate\">\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n    </div>\n  </label>\n  <input\n    [id]=\"id\"\n    [name]=\"name\"\n    [type]=\"type\"\n    (change)=\"change($event)\"\n    [value]=\"value\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [required]=\"required\"\n    [checked]=\"thisChecked\"\n    [ngClass]=\"{\n      indeterminate: !(checked || thisChecked) ? indeterminate || thisIndeterminate : null\n    }\"\n    [indeterminate]=\"!(checked || thisChecked) ? indeterminate || thisIndeterminate : null\"\n  />\n  <label\n    [for]=\"id\"\n    [ngClass]=\"{\n      disabled: disabled,\n      'hide-input': hideInput\n    }\"\n    class=\"checkbox {{ type }}\"\n  ></label>\n  <label [for]=\"id\" *ngIf=\"label\" [innerHtml]=\"label | universalSafe\" [ngClass]=\"{'label-max-width': hideInput}\"></label>\n  <label [for]=\"id\" *ngIf=\"rightLabel\" [ngClass]=\"{'label-max-width': hideInput}\">\n    <ng-container\n      *ngTemplateOutlet=\"rightLabel; context: context\"\n    ></ng-container>\n  </label>\n</div>\n<div\n  class=\"box-validation box-invalid show\"\n  *ngIf=\"errorSpan\"\n>\n  <ng-container *ngIf=\"externalError || error\">\n    <i class=\"fa-solid fa-triangle-exclamation\"></i>\n  </ng-container>\n  {{ externalError ? externalError : '' }}\n  {{ error && !externalError ? error : '' }}\n</div>\n"
        },
        {
            "name": "SqSelectSearchComponent",
            "id": "component-SqSelectSearchComponent-6f2304505f2d9c81cb64bdf24a519fec02e926955efc6f0919542e4f70959c442ffd111cd2598c07c2aac96d01df880a98b6f5dcc0d8776b8c29c43454aeee21",
            "file": "src/components/sq-select-search/sq-select-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-select-search",
            "styleUrls": [
                "./sq-select-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-select-search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color for the search-based select input.\n",
                    "description": "<p>Background color for the search-based select input.</p>\n",
                    "line": 127,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBorder color for the search-based select input.\n",
                    "description": "<p>Border color for the search-based select input.</p>\n",
                    "line": 132,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for styling the component.\n",
                    "description": "<p>Custom CSS class for styling the component.</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the search-based select input is disabled.\n",
                    "description": "<p>Indicates whether the search-based select input is disabled.</p>\n",
                    "line": 82,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to display an error span.\n",
                    "description": "<p>Indicates whether to display an error span.</p>\n",
                    "line": 107,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message for the search-based select input.\n",
                    "description": "<p>External error message for the search-based select input.</p>\n",
                    "line": 67,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon for the search-based select input.\n",
                    "description": "<p>External icon for the search-based select input.</p>\n",
                    "line": 72,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute for the search-based select input.\n",
                    "description": "<p>The id attribute for the search-based select input.</p>\n",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe label for the search-based select input.\n",
                    "description": "<p>The label for the search-based select input.</p>\n",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColor for the label of the search-based select input.\n",
                    "description": "<p>Color for the label of the search-based select input.</p>\n",
                    "line": 137,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the search-based select input is in a loading state.\n",
                    "description": "<p>Indicates whether the search-based select input is in a loading state.</p>\n",
                    "line": 97,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "minCharactersToSearch",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMinimum number of characters to perform the searchChange.\n",
                    "description": "<p>Minimum number of characters to perform the searchChange.</p>\n",
                    "line": 112,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe name attribute for the search-based select input.\n",
                    "description": "<p>The name attribute for the search-based select input.</p>\n",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions available for selection.\n",
                    "description": "<p>Options available for selection.</p>\n",
                    "line": 122,
                    "type": "Array<Option>",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the input field.\n",
                    "description": "<p>Placeholder text for the input field.</p>\n",
                    "line": 62,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholderSearch",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder text for the search input field.\n",
                    "description": "<p>Placeholder text for the search input field.</p>\n",
                    "line": 77,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the search-based select input is readonly.\n",
                    "description": "<p>Indicates whether the search-based select input is readonly.</p>\n",
                    "line": 87,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether the search-based select input is required.\n",
                    "description": "<p>Indicates whether the search-based select input is required.</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "800",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe time interval for input timeout in ms.\n",
                    "description": "<p>The time interval for input timeout in ms.</p>\n",
                    "line": 117,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip color for the search-based select input.\n",
                    "description": "<p>Tooltip color for the search-based select input.</p>\n",
                    "line": 152,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip icon for the search-based select input.\n",
                    "description": "<p>Tooltip icon for the search-based select input.</p>\n",
                    "line": 157,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip message for the search-based select input.\n",
                    "description": "<p>Tooltip message for the search-based select input.</p>\n",
                    "line": 142,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTooltip placement for the search-based select input.\n",
                    "description": "<p>Tooltip placement for the search-based select input.</p>\n",
                    "line": 147,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": []
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndicates whether to use form errors for validation.\n",
                    "description": "<p>Indicates whether to use form errors for validation.</p>\n",
                    "line": 102,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe selected value for the search-based select input.\n",
                    "description": "<p>The selected value for the search-based select input.</p>\n",
                    "line": 36,
                    "type": "Option",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "searchChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the search input value changes.\n",
                    "description": "<p>Event emitted when the search input value changes.</p>\n",
                    "line": 167,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the search-based select input becomes valid or invalid.\n",
                    "description": "<p>Event emitted when the search-based select input becomes valid or invalid.</p>\n",
                    "line": 172,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the selected value changes.\n",
                    "description": "<p>Event emitted when the selected value changes.</p>\n",
                    "line": 162,
                    "type": "EventEmitter<Option>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Option>",
                    "optional": false,
                    "description": "<p>Control pagination for options</p>\n",
                    "line": 202,
                    "rawdescription": "\n\nControl pagination for options\n"
                },
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "- The element reference.",
                    "line": 236,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Error message associated with the search-based select input.</p>\n",
                    "line": 177,
                    "rawdescription": "\n\nError message associated with the search-based select input.\n"
                },
                {
                    "name": "hasMoreOptions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicate if has more options to add on _options</p>\n",
                    "line": 207,
                    "rawdescription": "\n\nIndicate if has more options to add on _options\n"
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>The label template for the search-based select input.</p>\n",
                    "line": 52,
                    "rawdescription": "\n\nThe label template for the search-based select input.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "limit",
                    "defaultValue": "this.quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Control the _options limit</p>\n",
                    "line": 222,
                    "rawdescription": "\n\nControl the _options limit\n"
                },
                {
                    "name": "loadingScroll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading for sq-infinity-scroll</p>\n",
                    "line": 212,
                    "rawdescription": "\n\nLoading for sq-infinity-scroll\n"
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Native element reference.</p>\n",
                    "line": 182,
                    "rawdescription": "\n\nNative element reference.\n"
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates whether the dropdown is open.</p>\n",
                    "line": 197,
                    "rawdescription": "\n\nIndicates whether the dropdown is open.\n"
                },
                {
                    "name": "quantity",
                    "defaultValue": "15",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Control quantity for limit and to addMore on _options</p>\n",
                    "line": 217,
                    "rawdescription": "\n\nControl quantity for limit and to addMore on _options\n"
                },
                {
                    "name": "renderOptionsList",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Indicates when is the time to render the multi-tag select dropdown.</p>\n",
                    "line": 192,
                    "rawdescription": "\n\nIndicates when is the time to render the multi-tag select dropdown.\n"
                },
                {
                    "name": "searchText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Text entered in the search input field.</p>\n",
                    "line": 187,
                    "rawdescription": "\n\nText entered in the search input field.\n"
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 227,
                    "rawdescription": "\n\nTimeout for input changes.\n"
                },
                {
                    "name": "trackByOptValue",
                    "defaultValue": "useMemo((index, opt) => opt.value)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrackByFunction<any>",
                    "optional": false,
                    "description": "<p>Return trackBy for ngFor</p>\n",
                    "line": 312,
                    "rawdescription": "\n\nReturn trackBy for ngFor\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "addMoreOptions",
                    "args": [
                        {
                            "name": "isOnChange",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 344,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFunction to add more values on _options\n",
                    "description": "<p>Function to add more values on _options</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isOnChange",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 301,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCloses the dropdown and resets the search text.\n",
                    "description": "<p>Closes the dropdown and resets the search text.</p>\n"
                },
                {
                    "name": "doDropDownAction",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 281,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDo action to open or close thw dropdown list\n",
                    "description": "<p>Do action to open or close thw dropdown list</p>\n",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "emit",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 256,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits the selected value and closes the dropdown.\n\n",
                    "description": "<p>Emits the selected value and closes the dropdown.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6017,
                                "end": 6022,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6005,
                                "end": 6010,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The event containing the selected value.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 6011,
                                "end": 6016,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 6012,
                                    "end": 6015,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 133
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook called when any input properties change.\n\n",
                    "description": "<p>Lifecycle hook called when any input properties change.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5712,
                                "end": 5719,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "changes"
                            },
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5706,
                                "end": 5711,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The changes detected in the component&#39;s input properties.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "onTipSearchChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 319,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles changes to the search input value.\n\n",
                    "description": "<p>Handles changes to the search input value.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7516,
                                "end": 7521,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7501,
                                "end": 7506,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The search input value.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 7507,
                                "end": 7515,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 7508,
                                    "end": 7514,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 335,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets an error message.\n\n",
                    "description": "<p>Sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8044,
                                "end": 8047,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8029,
                                "end": 8034,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The translation key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 8035,
                                "end": 8043,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 8036,
                                    "end": 8042,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 266,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates the search-based select input and sets the error state.\n",
                    "description": "<p>Validates the search-based select input and sets the error state.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a search-based select component.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-select-search\n  [name]=&quot;&#39;search&#39;&quot;\n  [value]=&quot;selectedOption&quot;\n  [options]=&quot;searchOptions&quot;\n  (valueChange)=&quot;handleOptionSelection($event)&quot;\n  (searchChange)=&quot;handleSearch($event)&quot;\n&gt;\n&lt;/sq-select-search&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a search-based select component.\n\n```html\n<sq-select-search\n  [name]=\"'search'\"\n  [value]=\"selectedOption\"\n  [options]=\"searchOptions\"\n  (valueChange)=\"handleOptionSelection($event)\"\n  (searchChange)=\"handleSearch($event)\"\n>\n</sq-select-search>\n```\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, Input, OnChanges, Optional, Output, SimpleChanges, TemplateRef, TrackByFunction } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { useMemo } from '../../helpers/memo.helper'\nimport { Option } from '../../interfaces/option.interface'\n\n/**\n * Represents a search-based select component.\n *\n * @example\n * <sq-select-search\n *   [name]=\"'search'\"\n *   [value]=\"selectedOption\"\n *   [options]=\"searchOptions\"\n *   (valueChange)=\"handleOptionSelection($event)\"\n *   (searchChange)=\"handleSearch($event)\"\n * >\n * </sq-select-search>\n * \n * @implements {OnChanges}\n */\n@Component({\n  selector: 'sq-select-search',\n  templateUrl: './sq-select-search.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./sq-select-search.component.scss'],\n  providers: [],\n})\nexport class SqSelectSearchComponent implements OnChanges {\n  /**\n   * The name attribute for the search-based select input.\n   */\n  @Input() name = `random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`\n  /**\n * The selected value for the search-based select input.\n */\n  @Input() value?: Option\n\n  /**\n   * The id attribute for the search-based select input.\n   */\n  @Input() id?: string\n\n  /**\n   * The label for the search-based select input.\n   */\n  @Input() label = ''\n\n  /**\n   * The label template for the search-based select input.\n   */\n  @ContentChild('labelTemplate')\n  labelTemplate: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Custom CSS class for styling the component.\n   */\n  @Input() customClass = ''\n\n  /**\n   * Placeholder text for the input field.\n   */\n  @Input() placeholder = ''\n\n  /**\n   * External error message for the search-based select input.\n   */\n  @Input() externalError = ''\n\n  /**\n   * External icon for the search-based select input.\n   */\n  @Input() externalIcon = ''\n\n  /**\n   * Placeholder text for the search input field.\n   */\n  @Input() placeholderSearch = ''\n\n  /**\n   * Indicates whether the search-based select input is disabled.\n   */\n  @Input() disabled = false\n\n  /**\n   * Indicates whether the search-based select input is readonly.\n   */\n  @Input() readonly = false\n\n  /**\n   * Indicates whether the search-based select input is required.\n   */\n  @Input() required = false\n\n  /**\n   * Indicates whether the search-based select input is in a loading state.\n   */\n  @Input() loading = false\n\n  /**\n   * Indicates whether to use form errors for validation.\n   */\n  @Input() useFormErrors = true\n\n  /**\n   * Indicates whether to display an error span.\n   */\n  @Input() errorSpan = true\n\n  /**\n   * Minimum number of characters to perform the searchChange.\n   */\n  @Input() minCharactersToSearch = 0\n\n  /**\n   * The time interval for input timeout in ms.\n   */\n  @Input() timeToChange = 800\n\n  /**\n   * Options available for selection.\n   */\n  @Input() options: Array<Option> = []\n\n  /**\n   * Background color for the search-based select input.\n   */\n  @Input() backgroundColor = ''\n\n  /**\n   * Border color for the search-based select input.\n   */\n  @Input() borderColor = ''\n\n  /**\n   * Color for the label of the search-based select input.\n   */\n  @Input() labelColor = ''\n\n  /**\n   * Tooltip message for the search-based select input.\n   */\n  @Input() tooltipMessage = ''\n\n  /**\n   * Tooltip placement for the search-based select input.\n   */\n  @Input() tooltipPlacement: 'center top' | 'center bottom' | 'left center' | 'right center' = 'right center'\n\n  /**\n   * Tooltip color for the search-based select input.\n   */\n  @Input() tooltipColor = 'inherit'\n\n  /**\n   * Tooltip icon for the search-based select input.\n   */\n  @Input() tooltipIcon = ''\n\n  /**\n   * Event emitted when the selected value changes.\n   */\n  @Output() valueChange: EventEmitter<Option> = new EventEmitter()\n\n  /**\n   * Event emitted when the search input value changes.\n   */\n  @Output() searchChange: EventEmitter<string> = new EventEmitter()\n\n  /**\n   * Event emitted when the search-based select input becomes valid or invalid.\n   */\n  @Output() valid: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * Error message associated with the search-based select input.\n   */\n  error: boolean | string = ''\n\n  /**\n   * Native element reference.\n   */\n  nativeElement: ElementRef\n\n  /**\n   * Text entered in the search input field.\n   */\n  searchText = ''\n\n  /**\n   * Indicates when is the time to render the multi-tag select dropdown.\n   */\n  renderOptionsList = false\n\n  /**\n   * Indicates whether the dropdown is open.\n   */\n  open = false\n\n  /**\n   * Control pagination for options\n   */\n  _options: Array<Option> = []\n\n  /**\n   * Indicate if has more options to add on _options\n   */\n  hasMoreOptions = true\n\n  /**\n   * Loading for sq-infinity-scroll\n   */\n  loadingScroll = false\n\n  /**\n   * Control quantity for limit and to addMore on _options\n   */\n  quantity = 15\n\n  /**\n   * Control the _options limit\n   */\n  limit = this.quantity\n\n  /**\n   * Timeout for input changes.\n   */\n  timeoutInput!: ReturnType<typeof setTimeout>\n\n  /**\n   * Constructs a new SqSelectSearchComponent.\n   *\n   * @param {ElementRef} element - The element reference.\n   * @param {TranslateService} translate - The optional TranslateService for internationalization.\n   * @param {ChangeDetectorRef} changeDetector - Base class that provides change detection functionality.\n   */\n  constructor(public element: ElementRef, @Optional() private translate: TranslateService, private changeDetector: ChangeDetectorRef) {\n    this.nativeElement = element.nativeElement\n  }\n\n  /**\n   * Lifecycle hook called when any input properties change.\n   *\n   * @param changes - The changes detected in the component's input properties.\n   */\n  async ngOnChanges(changes: SimpleChanges) {\n    if (this.open && changes.hasOwnProperty('options')) {\n      this.addMoreOptions(true)\n    }\n  }\n\n  /**\n   * Emits the selected value and closes the dropdown.\n   *\n   * @param {any} event - The event containing the selected value.\n   */\n  emit(event: any) {\n    this.value = event\n    this.valueChange.emit(this.value)\n    this.validate()\n    this.closeDropdown()\n  }\n\n  /**\n   * Validates the search-based select input and sets the error state.\n   */\n  validate() {\n    if (this.externalError) {\n      this.error = false\n    } else if (this.required && !this.value) {\n      this.setError('forms.required')\n      this.valid.emit(false)\n    } else {\n      this.valid.emit(true)\n      this.error = ''\n    }\n  }\n\n  /**\n   * Do action to open or close thw dropdown list\n   */\n  async doDropDownAction() {\n    if (this.open) {\n      this.closeDropdown()\n      this.renderOptionsList = await new Promise<boolean>(resolve => setTimeout(() => {\n        resolve(false)\n      }, 300))\n      this.changeDetector.detectChanges()\n    } else {\n      this.addMoreOptions()\n      this.renderOptionsList = true\n      this.open = await new Promise<boolean>(resolve => setTimeout(() => {\n        resolve(true)\n      }, 100))\n      this.changeDetector.detectChanges()\n    }\n  }\n\n  /**\n   * Closes the dropdown and resets the search text.\n   */\n  closeDropdown() {\n    this.open = false\n    this._options = []\n    this.limit = this.quantity\n    this.hasMoreOptions = true\n    this.searchText = ''\n  }\n\n  /**\n   * Return trackBy for ngFor\n   */\n  trackByOptValue: TrackByFunction<any> = useMemo((index, opt) => opt.value)\n\n  /**\n   * Handles changes to the search input value.\n   *\n   * @param {string} event - The search input value.\n   */\n  async onTipSearchChange(event: string) {\n    if (!this.minCharactersToSearch || !event.length || event.length >= this.minCharactersToSearch) {\n      clearTimeout(this.timeoutInput)\n      this.searchText = await new Promise<string>(resolve => this.timeoutInput = setTimeout(() => {\n        resolve(event)\n      }, this.timeToChange)) || ''\n      this.searchChange.emit(event)\n      this.changeDetector.detectChanges()\n    }\n  }\n\n  /**\n   * Sets an error message.\n   *\n   * @param {string} key - The translation key for the error message.\n   */\n  async setError(key: string) {\n    if (this.useFormErrors && this.translate) {\n      this.error = await this.translate.instant(key)\n    }\n  }\n\n /**\n   * Function to add more values on _options\n   */\n  addMoreOptions(isOnChange = false) {\n    if (this.hasMoreOptions || isOnChange) {\n      this.loadingScroll = true\n      const limitState = this.limit > this.options.length ? this.options.length : this.limit\n      this._options = this.options.slice(0, limitState)\n      this.limit = this.limit + this.quantity\n      this.hasMoreOptions = limitState !== this.options.length\n      this.loadingScroll = false\n      this.changeDetector.detectChanges()\n    }\n  } \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-select-search {\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  &.loading {\n    cursor: wait;\n  }\n  .input-fake-content-text {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 5px;\n    max-width: calc(100% - 40px);\n    .text {\n      margin: 0;\n      display: flex;\n      width: 100%;\n      height: 100%;\n      font-weight: 700;\n      align-items: center;\n      justify-content: flex-start;\n    }\n  }\n  .input-fake-content {\n    min-height: 44px;\n    border: 1px solid var(--border_color);\n    background: var(--background);\n    padding: 0.75rem 1rem;\n    color: var(--text_color);\n    border-radius: 5px;\n    .icon-down {\n      right: 5px;\n      top: 18px;\n      position: absolute;\n      font-size: 0.86rem;\n    }\n  }\n  .loading-wrapper {\n    position: absolute;\n    right: 5px;\n    bottom: 10px;\n  }\n  .input-search {\n    display: inline-block;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    width: 100%;\n    padding-top: 1.1rem;\n    margin-bottom: 0.7rem;\n    background-color: var(--background_secondary);\n    .wrapper-all-inside-input {\n      .icon {\n        margin: 0;\n        font-size: 1rem;\n        font-weight: 700;\n        position: absolute;\n        right: 11px;\n        top: 27px;\n      }\n      .icon-external {\n        color: inherit !important;\n      }\n    }\n  }\n  .input-window {\n    width: 100%;\n    position: absolute;\n    top: 100%;\n    max-height: 0;\n    height: 0;\n    transition: all 0.3s ease;\n    overflow: hidden;\n    z-index: 5;\n    &.open {\n      height: auto;\n      max-height: 400px;\n      background: var(--background_secondary);\n      padding: 0 0.7rem 1.1rem;\n      overflow-y: auto;\n      box-shadow: var(--box_shadow);\n    }\n  }\n  .list {\n    padding: 0;\n    list-style: none;\n    margin: 0;\n    width: 100%;\n    margin: 0.7rem 0 0;\n    li {\n      margin: 0;\n      cursor: pointer;\n      min-height: 30px;\n      flex-flow: row wrap;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      transition: var(--transition);\n      padding: 0.35rem;\n      border-radius: 5px;\n      &:hover {\n        background-color: var(--border_color);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./sq-select-search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructs a new SqSelectSearchComponent.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "changeDetector",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 227,
                "rawdescription": "\n\nConstructs a new SqSelectSearchComponent.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 5196,
                            "end": 5203,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5177,
                            "end": 5182,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The element reference.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 5183,
                            "end": 5195,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 5184,
                                "end": 5194,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 5184,
                                    "end": 5194,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ElementRef"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 5260,
                            "end": 5269,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5235,
                            "end": 5240,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The optional TranslateService for internationalization.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 5241,
                            "end": 5259,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 5242,
                                "end": 5258,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 5242,
                                    "end": 5258,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "TranslateService"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 5360,
                            "end": 5374,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "changeDetector"
                        },
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5334,
                            "end": 5339,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Base class that provides change detection functionality.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 5340,
                            "end": 5359,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 5341,
                                "end": 5358,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 5341,
                                    "end": 5358,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ChangeDetectorRef"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div\n  class=\"wrapper-all-inside-input wrapper-select-search {{ customClass }}\"\n  [ngClass]=\"{\n    error: (externalError && externalError !== '') || (error && error !== ''),\n    readonly: readonly,\n    loading: loading\n  }\"\n>\n  <label\n    class=\"display-flex align-items-center\"\n    *ngIf=\"label?.length || labelTemplate || tooltipMessage\"\n    [ngClass]=\"{\n      readonly: readonly\n    }\"\n    [for]=\"id\"\n  >\n    <div *ngIf=\"label && !labelTemplate\" [ngStyle]=\"{ 'color': labelColor }\" [innerHtml]=\"label | universalSafe\"></div>\n    <span *ngIf=\"labelTemplate\">\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n    </span>\n    <sq-tooltip\n      *ngIf=\"tooltipMessage\"\n      class=\"ml-1\"\n      [message]=\"tooltipMessage\"\n      [placement]=\"tooltipPlacement\"\n      [color]=\"tooltipColor\"\n      [icon]=\"tooltipIcon\"\n    ></sq-tooltip>\n  </label>\n  <div\n    [class]=\"'input-fake col  border-' + borderColor\"\n    style=\"min-height: auto\"\n    [ngStyle]=\"{ 'border-color': borderColor }\"\n    [ngClass]=\"{\n      'no-label': !label.length,\n      'has-icon': error || externalError,\n      disabled: disabled,\n      readonly: readonly\n    }\"\n    [ngStyle]=\"{\n      'background-color': backgroundColor,\n      'border-color': borderColor\n    }\"\n    (clickOutside)=\"closeDropdown()\"\n    [clickOutsideEnabled]=\"open\"\n  >\n    <div\n      class=\"input-fake-content\"\n      [ngClass]=\"{\n        disabled: disabled\n      }\"\n      (click)=\"doDropDownAction()\"\n    >\n      <div class=\"loading-wrapper\" *ngIf=\"loading\">\n        <sq-loader></sq-loader>\n      </div>\n      <span *ngIf=\"!value\">{{ placeholder }}</span>\n      <div class=\"input-fake-content-text\" *ngIf=\"value\">\n        <span class=\"text\" *ngIf=\"value\">\n          {{ value!.label }}\n        </span>\n      </div>\n      <i *ngIf=\"!loading\" class=\"icon-down fas fa-chevron-down\"></i>\n    </div>\n    <div\n      *ngIf=\"!disabled && !loading && renderOptionsList\"\n      class=\"input-window scrollbar\"\n      id=\"sq-select-search-scroll\"\n      [ngClass]=\"{\n        open: !disabled && !loading && renderOptionsList && open\n      }\"\n    >\n    <div class=\"input-search\">\n      <div class=\"wrapper-all-inside-input\">\n        <div class=\"p-0 wrapper-input wrapper-input-squid text-ellipsisarea\">\n          <input\n            [name]=\"name\"\n            [id]=\"id\"\n            [placeholder]=\"placeholderSearch || ('forms.search' | translateInternal | async) || ''\"\n            class=\"col input\"\n            [ngModel]=\"searchText\"\n            (ngModelChange)=\"onTipSearchChange($event)\"\n          />\n        </div>\n        <span class=\"icon icon-external textarea-icon\"><i class='fas fa-search'></i></span>\n      </div>\n    </div>\n    <sq-infinity-scroll\n      class=\"list\"\n      elementToScrollId=\"sq-select-search-scroll\"\n      loaderColor=\"var(--pink)\"\n      [length]=\"_options.length || 0\"\n      [hasMore]=\"hasMoreOptions\"\n      [loading]=\"loadingScroll\"\n      (scrolledEmitter)=\"addMoreOptions()\"\n    >\n      <ng-container *ngFor=\"let opt of _options | searchFromAlternativeArray:searchText:options; let i = index; trackBy: trackByOptValue\">\n        <ng-template *ngTemplateOutlet=\"option; context: { opt: opt, i: i }\"></ng-template>\n      </ng-container>\n    </sq-infinity-scroll>\n    <p class=\"mb-0 mt-3\" *ngIf=\"!_options?.length\">\n      {{ 'forms.searchSelectEmpty' | translateInternal | async }}\n    </p>\n    </div>\n  </div>\n  <div\n    class=\"box-validation box-invalid show\"\n    *ngIf=\"errorSpan\"\n    [ngClass]=\"{\n      'visibility-hidden-force': ((!externalError || externalError === '') && (!error || error === '')) || disabled || readonly\n    }\"\n  >\n    <i [ngClass]=\"{\n      'visibility-hidden-force': !error && !externalError\n    }\" class=\"fa-solid fa-triangle-exclamation\"></i>\n    {{ externalError ? externalError : '' }}\n    {{ error && !externalError ? error : '' }}\n  </div>\n</div>\n<ng-template #option let-opt=\"opt\" let-i=\"i\">\n  <li (click)=\"emit(opt)\">\n    <span class=\"text m-0 display-inline-block\">{{ opt?.label }}</span>\n  </li>\n</ng-template>\n"
        },
        {
            "name": "SqStepsComponent",
            "id": "component-SqStepsComponent-16f55743b9c05f28db60ac3b5afd358e7518966f468d8f5de02c74e5bafab2a248326b922a03f924088da01222db0a561c031ac925148c8f4deff13651d5ed4d",
            "file": "src/components/sq-steps/sq-steps.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-steps",
            "styleUrls": [
                "./sq-steps.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-steps.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe index of the currently active step.\n",
                    "description": "<p>The index of the currently active step.</p>\n",
                    "line": 48,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "click",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to enable or disable clicking on steps.\n",
                    "description": "<p>Flag to enable or disable clicking on steps.</p>\n",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'var(--pink)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color theme for the steps component.\n",
                    "description": "<p>The color theme for the steps component.</p>\n",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "steps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn array of step objects representing the steps in the sequence.\n",
                    "description": "<p>An array of step objects representing the steps in the sequence.</p>\n",
                    "line": 53,
                    "type": "Step[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when a step is clicked.\n",
                    "description": "<p>Event emitted when a step is clicked.</p>\n",
                    "line": 58,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles the click event on a step.\nEmits the `emitClick` event with information about the clicked step and its index.\n\n",
                    "description": "<p>Handles the click event on a step.\nEmits the <code>emitClick</code> event with information about the clicked step and its index.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1475,
                                "end": 1480,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "index"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1460,
                                "end": 1465,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The index of the clicked step.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1466,
                                "end": 1474,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1467,
                                    "end": 1473,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a component for displaying a sequence of steps.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/steps%7D\">https://css.squidit.com.br/components/steps}</a></p>\n<div class=\"steps my-3\">\n <ul>\n   <li class=\"old\">\n     <span></span>\n   </li>\n   <li class=\"active\">\n     <span></span>\n   </li>\n   <li>\n     <span></span>\n   </li>\n </ul>\n</div>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-steps [active]=&quot;0&quot; [steps]=&quot;stepArray&quot;&gt;&lt;/sq-steps&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a component for displaying a sequence of steps.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/steps}\n\n<div class=\"steps my-3\">\n <ul>\n   <li class=\"old\">\n     <span></span>\n   </li>\n   <li class=\"active\">\n     <span></span>\n   </li>\n   <li>\n     <span></span>\n   </li>\n </ul>\n</div>\n\n```html\n<sq-steps [active]=\"0\" [steps]=\"stepArray\"></sq-steps>\n```\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core'\nimport { Step } from '../../interfaces/step.interface'\n\n/**\n * Represents a component for displaying a sequence of steps.\n *\n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/components/steps}\n * \n * <div class=\"steps my-3\">\n *  <ul>\n *    <li class=\"old\">\n *      <span></span>\n *    </li>\n *    <li class=\"active\">\n *      <span></span>\n *    </li>\n *    <li>\n *      <span></span>\n *    </li>\n *  </ul>\n * </div>\n * \n * @example\n * <sq-steps [active]=\"0\" [steps]=\"stepArray\"></sq-steps>\n *\n */\n@Component({\n  selector: 'sq-steps',\n  templateUrl: './sq-steps.component.html',\n  styleUrls: ['./sq-steps.component.scss'],\n})\nexport class SqStepsComponent {\n  /**\n   * The color theme for the steps component.\n   */\n  @Input() color = 'var(--pink)'\n\n  /**\n   * Flag to enable or disable clicking on steps.\n   */\n  @Input() click = false\n\n  /**\n   * The index of the currently active step.\n   */\n  @Input() active = 0\n\n  /**\n   * An array of step objects representing the steps in the sequence.\n   */\n  @Input() steps: Step[] = []\n\n  /**\n   * Event emitted when a step is clicked.\n   */\n  @Output() emitClick: EventEmitter<{ step?: Step, i: number }> = new EventEmitter()\n\n  /**\n   * Handles the click event on a step.\n   * Emits the `emitClick` event with information about the clicked step and its index.\n   *\n   * @param {number} index - The index of the clicked step.\n   */\n  handleClick(index: number): void {\n    if (this.click && index >= 0 && index < this.steps.length) {\n      this.emitClick.emit({ step: this.steps[index], i: index })\n    }\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sq-steps.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"steps\">\n  <ul>\n    <li\n      *ngFor=\"let step of steps; let i = index\"\n      [ngClass]=\"{\n        active: i === active,\n        old: i < active\n      }\"\n      [ngStyle]=\"{\n        background:\n          i === active ? 'linear-gradient(90deg, ' + color + ' 0%, ' + color + ' 50%, transparent 51%)' : i < active ? color : null\n      }\"\n    >\n      <span\n        (click)=\"click ? (active = i) : null; emitClick.emit({ step, i })\"\n        [tooltip]=\"step?.tip || ''\"\n        placement=\"center top\"\n        container=\"body\"\n        [ngClass]=\"{\n          pointer: click\n        }\"\n      ></span>\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "SqTabComponent",
            "id": "component-SqTabComponent-0481bfde3ae97fd19aa85586cf56231ea42218468ab386bca3364a5a3da61e1f7023246b9d1238b740be8ab9092e3e9a39fc9f8bc17ca91d1c67d0df96a259af",
            "file": "src/components/sq-tabs/sq-tab/sq-tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-tab",
            "styleUrls": [
                "./sq-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to indicate if the tab is active (open).\n",
                    "description": "<p>Flag to indicate if the tab is active (open).</p>\n",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "'transparent'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe border color of the tab.\n",
                    "description": "<p>The border color of the tab.</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the tab.\n",
                    "description": "<p>The background color of the tab.</p>\n",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to indicate if the tab is disabled.\n",
                    "description": "<p>Flag to indicate if the tab is disabled.</p>\n",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideHtml",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to hide the tab html.\n",
                    "description": "<p>Flag to hide the tab html.</p>\n",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to indicate if the tab is in a loading state.\n",
                    "description": "<p>Flag to indicate if the tab is in a loading state.</p>\n",
                    "line": 54,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tabName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe name or identifier of the tab.\n",
                    "description": "<p>The name or identifier of the tab.</p>\n",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textColor",
                    "defaultValue": "'black'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe text color of the tab title.\n",
                    "description": "<p>The text color of the tab title.</p>\n",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe title displayed on the tab.\n",
                    "description": "<p>The title displayed on the tab.</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "whenOpen",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the tab is opened.\n",
                    "description": "<p>Event emitted when the tab is opened.</p>\n",
                    "line": 69,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a tab component for displaying tabbed content.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/tabs%7D\">https://css.squidit.com.br/components/tabs}</a></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-tab [title]=&quot;&#39;Tab Title&#39;&quot; (whenOpen)=&quot;handleTabOpen()&quot;&gt;\n&lt;!-- Content Here --&gt;\n&lt;/sq-tab&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a tab component for displaying tabbed content.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/tabs}\n\n```html\n<sq-tab [title]=\"'Tab Title'\" (whenOpen)=\"handleTabOpen()\">\n<!-- Content Here -->\n</sq-tab>\n```\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core'\n/**\n * Represents a tab component for displaying tabbed content.\n *\n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/components/tabs}\n * \n * @example\n * <sq-tab [title]=\"'Tab Title'\" (whenOpen)=\"handleTabOpen()\">\n * <!-- Content Here -->\n * </sq-tab>\n *\n */\n@Component({\n  selector: 'sq-tab',\n  templateUrl: './sq-tab.component.html',\n  styleUrls: ['./sq-tab.component.scss'],\n})\nexport class SqTabComponent {\n  /**\n   * Flag to indicate if the tab is active (open).\n   */\n  @Input() active = false\n\n  /**\n   * The title displayed on the tab.\n   */\n  @Input() title = ''\n\n  /**\n   * The text color of the tab title.\n   */\n  @Input() textColor = 'black'\n\n  /**\n   * The background color of the tab.\n   */\n  @Input() color = 'white'\n\n  /**\n   * The border color of the tab.\n   */\n  @Input() borderColor = 'transparent'\n\n  /**\n   * Flag to indicate if the tab is disabled.\n   */\n  @Input() disabled?: boolean\n\n  /**\n   * Flag to indicate if the tab is in a loading state.\n   */\n  @Input() loading?: boolean\n\n  /**\n   * The name or identifier of the tab.\n   */\n  @Input() tabName = ''\n\n  /**\n   * Flag to hide the tab html.\n   */\n  @Input() hideHtml = false\n\n  /**\n   * Event emitted when the tab is opened.\n   */\n  @Output() whenOpen: EventEmitter<void> = new EventEmitter()\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    .pane {\n        padding: 0;\n    }\n}",
                    "styleUrl": "./sq-tab.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div *ngIf=\"!hideHtml\" [hidden]=\"!active\" class=\"pane\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "SqTabsComponent",
            "id": "component-SqTabsComponent-e724ece88ac77a2973fe207acc5c5805ec89ef7296b771fa8f8965476818d9bab3229693e5560f2e45e849ae59873a84f1d545427f9cc4652457d144ed147711",
            "file": "src/components/sq-tabs/sq-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-tabs",
            "styleUrls": [
                "./sq-tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-tabs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom CSS class for the input element.\n",
                    "description": "<p>Custom CSS class for the input element.</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe height of the tab container.\n",
                    "description": "<p>The height of the tab container.</p>\n",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideHtmlForInactives",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to hide html for inactive tabs.\n",
                    "description": "<p>Flag to hide html for inactive tabs.</p>\n",
                    "line": 72,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "lineStyle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to indicate whether to display a line-style indicator for the selected tab.\n",
                    "description": "<p>Flag to indicate whether to display a line-style indicator for the selected tab.</p>\n",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "margin",
                    "defaultValue": "'0 auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe margin of the tab container.\n",
                    "description": "<p>The margin of the tab container.</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxWidth",
                    "defaultValue": "'initial'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe maximum width of the tab container.\n",
                    "description": "<p>The maximum width of the tab container.</p>\n",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sm",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to indicate to use sm class com tabs header.\n",
                    "description": "<p>Flag to indicate to use sm class com tabs header.</p>\n",
                    "line": 67,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tabWidth",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe width of the tab container.\n",
                    "description": "<p>The width of the tab container.</p>\n",
                    "line": 62,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "tabChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when a tab is changed.\n",
                    "description": "<p>Event emitted when a tab is changed.</p>\n",
                    "line": 77,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "memoizedTabWidth",
                    "defaultValue": "useMemo((tabWidth: string, lineStyle: boolean): string => {\n    if (tabWidth) {\n      return tabWidth\n    }\n    if (lineStyle) {\n     return 'fit-content'\n    }\n    return 'initial'\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Determines the tab width based on the provided conditions.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">                Returns the provided tabWidth if it exists.\n                Otherwise, returns &#39;initial&#39;.</code></pre></div>",
                    "line": 161,
                    "rawdescription": "\n\nDetermines the tab width based on the provided conditions.\n\n\n                    Returns the provided tabWidth if it exists.\n                    Otherwise, returns 'initial'.\n",
                    "jsdoctags": [
                        {
                            "pos": 3836,
                            "end": 3890,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 3837,
                                "end": 3842,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The width of the tab.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3843,
                                "end": 3851,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3844,
                                    "end": 3850,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            },
                            "name": {
                                "pos": 3852,
                                "end": 3860,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "tabWidth"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 3890,
                            "end": 3975,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 348,
                            "tagName": {
                                "pos": 3891,
                                "end": 3896,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>A flag to determine if line style is applied.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3897,
                                "end": 3906,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3898,
                                    "end": 3905,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 136
                                }
                            },
                            "name": {
                                "pos": 3907,
                                "end": 3916,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "lineStyle"
                            },
                            "isNameFirst": false,
                            "isBracketed": false
                        },
                        {
                            "pos": 3975,
                            "end": 4166,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 3976,
                                "end": 3983,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>Returns &#39;fit-content&#39; if lineStyle is true.\nReturns the provided tabWidth if it exists.\nOtherwise, returns &#39;initial&#39;.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3984,
                                "end": 3992,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3985,
                                    "end": 3991,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "defaultValue": "[] as unknown as QueryList<SqTabComponent>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<SqTabComponent>",
                    "optional": false,
                    "description": "<p>A query list of <code>SqTabComponent</code> elements representing the tabs.</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nA query list of `SqTabComponent` elements representing the tabs.\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SqTabComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "tabsPosition",
                    "defaultValue": "'initial'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>The initial position of the tabs.</p>\n",
                    "line": 87,
                    "rawdescription": "\n\nThe initial position of the tabs.\n"
                },
                {
                    "name": "total",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>The total number of tabs in the container.</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nThe total number of tabs in the container.\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook called after the view has been checked.\n",
                    "description": "<p>Lifecycle hook called after the view has been checked.</p>\n"
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLifecycle hook called after the view initialization.\n",
                    "description": "<p>Lifecycle hook called after the view initialization.</p>\n",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "SqTabComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelects a tab by making it active.\n\n",
                    "description": "<p>Selects a tab by making it active.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3077,
                                "end": 3080,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "tab"
                            },
                            "type": "SqTabComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3054,
                                "end": 3059,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The tab to be selected.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3060,
                                "end": 3076,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3061,
                                    "end": 3075,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 3061,
                                        "end": 3075,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "SqTabComponent"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 3128,
                                "end": 3133,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "index"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3113,
                                "end": 3118,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The index of the selected tab.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3119,
                                "end": 3127,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 3120,
                                    "end": 3126,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a tab container component for managing a collection of tabs.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/tabs%7D\">https://css.squidit.com.br/components/tabs}</a></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-tabs [lineStyle]=&quot;true&quot; (tabChange)=&quot;handleTabChange($event)&quot;&gt;\n  &lt;sq-tab [title]=&quot;&#39;Tab 1&#39;&quot; (whenOpen)=&quot;handleTabOpen()&quot;&gt;Tab 1 Content&lt;/sq-tab&gt;\n  &lt;sq-tab [title]=&quot;&#39;Tab 2&#39;&quot;&gt;Tab 2 Content&lt;/sq-tab&gt;\n  &lt;!-- Add more sq-tab elements as needed --&gt;\n&lt;/sq-tabs&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a tab container component for managing a collection of tabs.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/tabs}\n\n```html\n<sq-tabs [lineStyle]=\"true\" (tabChange)=\"handleTabChange($event)\">\n  <sq-tab [title]=\"'Tab 1'\" (whenOpen)=\"handleTabOpen()\">Tab 1 Content</sq-tab>\n  <sq-tab [title]=\"'Tab 2'\">Tab 2 Content</sq-tab>\n  <!-- Add more sq-tab elements as needed -->\n</sq-tabs>\n```\n",
            "type": "component",
            "sourceCode": "import { AfterViewChecked, AfterViewInit, Component, ContentChildren, EventEmitter, Input, Output, QueryList } from '@angular/core'\nimport { SqTabComponent } from './sq-tab/sq-tab.component'\nimport { sleep } from '../../helpers/sleep.helper'\nimport { useMemo } from '../../helpers/memo.helper'\n\n/**\n * Represents a tab container component for managing a collection of tabs.\n *\n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/components/tabs}\n *\n * @example\n * <sq-tabs [lineStyle]=\"true\" (tabChange)=\"handleTabChange($event)\">\n *   <sq-tab [title]=\"'Tab 1'\" (whenOpen)=\"handleTabOpen()\">Tab 1 Content</sq-tab>\n *   <sq-tab [title]=\"'Tab 2'\">Tab 2 Content</sq-tab>\n *   <!-- Add more sq-tab elements as needed -->\n * </sq-tabs>\n *\n * @implements {AfterViewInit}\n * @implements {AfterViewChecked}\n */\n@Component({\n  selector: 'sq-tabs',\n  templateUrl: './sq-tabs.component.html',\n  styleUrls: ['./sq-tabs.component.scss'],\n})\nexport class SqTabsComponent implements AfterViewInit, AfterViewChecked {\n  /**\n   * A query list of `SqTabComponent` elements representing the tabs.\n   */\n  @ContentChildren(SqTabComponent) tabs: QueryList<SqTabComponent> = [] as unknown as QueryList<SqTabComponent>\n\n  /**\n   * Custom CSS class for the input element.\n   */\n  @Input() customClass = ''\n\n  /**\n   * The height of the tab container.\n   */\n  @Input() height?: string\n\n  /**\n   * The maximum width of the tab container.\n   */\n  @Input() maxWidth = 'initial'\n\n  /**\n   * The margin of the tab container.\n   */\n  @Input() margin = '0 auto'\n\n  /**\n   * Flag to indicate whether to display a line-style indicator for the selected tab.\n   */\n  @Input() lineStyle = false\n\n  /**\n   * The width of the tab container.\n   */\n  @Input() tabWidth = ''\n\n  /**\n   * Flag to indicate to use sm class com tabs header.\n   */\n  @Input() sm = true\n\n  /**\n   * Flag to hide html for inactive tabs.\n   */\n  @Input() hideHtmlForInactives = false\n\n  /**\n   * Event emitted when a tab is changed.\n   */\n  @Output() tabChange: EventEmitter<{ tab: SqTabComponent; index: number }> = new EventEmitter()\n\n  /**\n   * The total number of tabs in the container.\n   */\n  total = 1\n\n  /**\n   * The initial position of the tabs.\n   */\n  tabsPosition = 'initial'\n\n  /**\n   * Lifecycle hook called after the view initialization.\n   */\n  async ngAfterViewInit() {\n    const activeTab = {\n      tab: this.tabs.find((tab) => tab.active),\n      index: this.tabs.toArray().findIndex((tab) => tab.active),\n    }\n\n    await sleep(1000)\n\n    if (activeTab.tab?.title) {\n      this.selectTab(activeTab.tab, activeTab.index)\n    } else if (this.tabs.first) {\n      this.selectTab(this.tabs.first, 0)\n    }\n\n    this.total = this.tabs.toArray().length || 1\n  }\n\n  /**\n   * Lifecycle hook called after the view has been checked.\n   */\n  ngAfterViewChecked(): void {\n    if (this.tabs.toArray().length !== this.total) {\n      this.total = this.tabs.toArray().length || 1\n    }\n  }\n\n  /**\n   * Selects a tab by making it active.\n   *\n   * @param {SqTabComponent} tab - The tab to be selected.\n   * @param {number} index - The index of the selected tab.\n   */\n  selectTab(tab: SqTabComponent, index: number) {\n    if (tab?.disabled || tab?.loading) {\n      return null\n    }\n    this.tabs.toArray().forEach((tabItem) => (tabItem.active = false))\n    if (tab) {\n      this.tabChange.emit({\n        tab,\n        index,\n      })\n      tab.active = true\n      tab.hideHtml = false\n\n      if (tab.whenOpen) {\n        tab.whenOpen.emit()\n      }\n    }\n    if (this.hideHtmlForInactives) {\n      this.tabs.toArray().forEach((tabItem) => {\n        if (!tabItem.active) {\n          tabItem.hideHtml = true\n        }\n      })\n    }\n    return null\n  }\n\n  /**\n   * Determines the tab width based on the provided conditions.\n   *\n   * @param {string} tabWidth - The width of the tab.\n   * @param {boolean} lineStyle - A flag to determine if line style is applied.\n   *\n   * @returns {string} - Returns 'fit-content' if lineStyle is true.\n   *                     Returns the provided tabWidth if it exists.\n   *                     Otherwise, returns 'initial'.\n   */\n  memoizedTabWidth = useMemo((tabWidth: string, lineStyle: boolean): string => {\n    if (tabWidth) {\n      return tabWidth\n    }\n    if (lineStyle) {\n     return 'fit-content'\n    }\n    return 'initial'\n  })\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: block;\n  width: 100%;\n  .wrapper {\n    position: relative;\n    justify-content: center;\n    display: flex;\n    align-items: center;\n  }\n  .tabs-header {\n    position: relative;\n    scroll-behavior: smooth;\n    background: var(--transparent);\n    li {\n      min-width: min-content;\n    }\n  }\n}\n",
                    "styleUrl": "./sq-tabs.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit",
                "AfterViewChecked"
            ],
            "templateData": "<div class=\"tabs-squid\">\n  <div class=\"tabs-container\">\n    <div\n      class=\"wrapper {{ customClass }}\"\n      [ngStyle]=\"{\n        'width': memoizedTabWidth(tabWidth, lineStyle),\n      }\"\n    >\n      <ul\n        class=\"tabs-header tabs-center tabs-width\"\n        #tabsHeaderContainer\n        [ngClass]=\"{\n          'line-style': lineStyle\n        }\"\n        [ngStyle]=\"{\n          'max-width': maxWidth,\n          margin: margin\n        }\"\n      >\n        <li\n          *ngFor=\"let tab of tabs; let i = index\"\n          (click)=\"!tab?.disabled ? selectTab(tab, i) : null\"\n          [ngClass]=\"{\n            disabled: !tab?.title || tab?.disabled,\n            loading: tab?.title && tab.loading,\n            active: tab?.active,\n            sm: sm\n          }\"\n          [ngStyle]=\"{\n            background: tab?.active && !lineStyle ? tab?.color : null\n          }\"\n          #thisTab\n        >\n          <span\n            *ngIf=\"!tab.loading\"\n            [ngStyle]=\"{\n              color: tab?.active && !lineStyle ? tab?.textColor : null\n            }\"\n            [innerHtml]=\"tab?.title || '' | universalSafe\"\n          ></span>\n          <sq-loader *ngIf=\"tab.loading\"></sq-loader>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "SqTagComponent",
            "id": "component-SqTagComponent-08a8d7d7afb5a82930b3436d41b1e9dfbf57eca9d64fd0e382136cd5fac5c4a1a4c0c7787fadf8180cb4dab8d82d4f3cd5ba5a4b9ef8dd9c23755cca78d1e264",
            "file": "src/components/sq-tag/sq-tag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-tag",
            "styleUrls": [
                "./sq-tag.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-tag.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the tag.\n",
                    "description": "<p>The background color of the tag.</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe text color of the tag.\n",
                    "description": "<p>The text color of the tag.</p>\n",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdditional CSS classes for styling the tag.\n",
                    "description": "<p>Additional CSS classes for styling the tag.</p>\n",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the tag.\n",
                    "description": "<p>Flag to disable the tag.</p>\n",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pointer",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the tag.\n",
                    "description": "<p>Flag to disable the tag.</p>\n",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to make the tag readonly.\n",
                    "description": "<p>Flag to make the tag readonly.</p>\n",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rounded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to round the corners of the tag.\n",
                    "description": "<p>Flag to round the corners of the tag.</p>\n",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the tag is clicked.\n",
                    "description": "<p>Event emitted when the tag is clicked.</p>\n",
                    "line": 63,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "colorsHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColorsHelper",
                    "optional": false,
                    "description": "- The ColorsHelper service for color manipulation.",
                    "line": 70,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getBackgroundColor",
                    "defaultValue": "useMemo(() => {\n    if (this.validatePresetColors()) {\n      return ''\n    }\n    return this.backgroundColor\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Retrieves the computed background color for the tag.</p>\n",
                    "line": 100,
                    "rawdescription": "\n\nRetrieves the computed background color for the tag.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 2111,
                            "end": 2163,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 2112,
                                "end": 2119,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The computed background color.</p>\n",
                            "typeExpression": {
                                "pos": 2120,
                                "end": 2128,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 2121,
                                    "end": 2127,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "getColor",
                    "defaultValue": "useMemo(() => {\n    if (this.validatePresetColors()) {\n      return ''\n    }\n    return this.color\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Retrieves the computed text color for the tag.</p>\n",
                    "line": 88,
                    "rawdescription": "\n\nRetrieves the computed text color for the tag.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 1870,
                            "end": 1916,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 349,
                            "tagName": {
                                "pos": 1871,
                                "end": 1878,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The computed text color.</p>\n",
                            "typeExpression": {
                                "pos": 1879,
                                "end": 1887,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1880,
                                    "end": 1886,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles the click event on the tag.\nEmits the `emitClick` event if the tag is not readonly or disabled.\n",
                    "description": "<p>Handles the click event on the tag.\nEmits the <code>emitClick</code> event if the tag is not readonly or disabled.</p>\n"
                },
                {
                    "name": "validatePresetColors",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidates whether the specified color is a preset color.\n\n",
                    "description": "<p>Validates whether the specified color is a preset color.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1613,
                                "end": 1620,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the color is a valid preset color, false otherwise.</p>\n",
                            "returnType": "boolean"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a tag component with customizable appearance and behavior.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/tag%7D\">https://css.squidit.com.br/components/tag}</a></p>\n <div class=' my-3 tag-box'>\n   Tag Content\n </div>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-tag&gt;Tag Content&lt;/sq-tag&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a tag component with customizable appearance and behavior.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/tag}\n\n <div class=' my-3 tag-box'>\n   Tag Content\n </div>\n\n```html\n<sq-tag>Tag Content</sq-tag>\n```",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core'\nimport { ColorsHelper } from '../../helpers/colors.helper'\nimport { useMemo } from '../../helpers/memo.helper'\n\n/**\n * Represents a tag component with customizable appearance and behavior.\n * \n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/components/tag}\n * \n *  <div class=' my-3 tag-box'>\n *    Tag Content\n *  </div>\n * \n * @example\n * <sq-tag>Tag Content</sq-tag>\n */\n@Component({\n  selector: 'sq-tag',\n  templateUrl: './sq-tag.component.html',\n  styleUrls: ['./sq-tag.component.scss']\n})\nexport class SqTagComponent {\n  /**\n   * Additional CSS classes for styling the tag.\n   */\n  @Input() customClass = ''\n\n  /**\n   * Flag to round the corners of the tag.\n   */\n  @Input() rounded = false\n\n  /**\n   * The text color of the tag.\n   */\n  @Input() color = ''\n\n  /**\n   * The background color of the tag.\n   */\n  @Input() backgroundColor = ''\n\n  /**\n   * Flag to make the tag readonly.\n   */\n  @Input() readonly = false\n\n  /**\n   * Flag to disable the tag.\n   */\n  @Input() disabled = false\n\n  /**\n   * Flag to disable the tag.\n   */\n  @Input() pointer = false\n\n  /**\n   * Event emitted when the tag is clicked.\n   */\n  @Output() emitClick: EventEmitter<void> = new EventEmitter<void>()\n\n  /**\n * Constructor for the SqButtonComponent class.\n * @param colorsHelper - The ColorsHelper service for color manipulation.\n */\n  constructor(\n    public colorsHelper: ColorsHelper\n  ) {\n  }\n\n  /**\n   * Validates whether the specified color is a preset color.\n   *\n   * @returns {boolean} True if the color is a valid preset color, false otherwise.\n   */\n  validatePresetColors(): boolean {\n    return !!this.colorsHelper?.getCssVariableValue(this.color)\n  }\n\n  /**\n   * Retrieves the computed text color for the tag.\n   *\n   * @returns {string} The computed text color.\n   */\n  getColor = useMemo(() => {\n    if (this.validatePresetColors()) {\n      return ''\n    }\n    return this.color\n  })\n\n  /**\n   * Retrieves the computed background color for the tag.\n   *\n   * @returns {string} The computed background color.\n   */\n  getBackgroundColor = useMemo(() => {\n    if (this.validatePresetColors()) {\n      return ''\n    }\n    return this.backgroundColor\n  })\n\n  /**\n   * Handles the click event on the tag.\n   * Emits the `emitClick` event if the tag is not readonly or disabled.\n   */\n  handleClick(): void {\n    if (this.readonly || this.disabled) {\n      return\n    }\n    this.emitClick.emit()\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sq-tag.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructor for the SqButtonComponent class.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "colorsHelper",
                        "type": "ColorsHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 63,
                "rawdescription": "\n\nConstructor for the SqButtonComponent class.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1402,
                            "end": 1414,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "colorsHelper"
                        },
                        "type": "ColorsHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1396,
                            "end": 1401,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ColorsHelper service for color manipulation.</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [],
            "templateData": "<div\n  class='tag-box background-{{ backgroundColor }} {{ color }}'\n  [ngClass]=\"{\n    'readonly-tag': readonly,\n    'disabled': disabled,\n    'rounded': rounded,\n    'pointer': pointer,\n  }\"\n  [ngStyle]=\"{\n    'color': getColor(),\n    'background-color': getBackgroundColor(),\n  }\"\n  (click)=\"handleClick()\"\n>\n  <ng-content></ng-content>\n</div>"
        },
        {
            "name": "SqTextAreaComponent",
            "id": "component-SqTextAreaComponent-fbd599feef2f796a2ae52034988de252d3de62d97d4abb2e797b48e00958332ef9172d99aeefeeb7c3ec0eb5ef6820e9c4f3311133ecfa223afdefbb6ef5c12f",
            "file": "src/components/sq-textarea/sq-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-textarea",
            "styleUrls": [
                "./sq-textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-textarea.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the textarea.\n",
                    "description": "<p>The background color of the textarea.</p>\n",
                    "line": 132,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe border color of the textarea.\n",
                    "description": "<p>The border color of the textarea.</p>\n",
                    "line": 137,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdditional CSS classes for styling the textarea.\n",
                    "description": "<p>Additional CSS classes for styling the textarea.</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to disable the textarea.\n",
                    "description": "<p>Flag to disable the textarea.</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorSpan",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to show an error span.\n",
                    "description": "<p>Flag to show an error span.</p>\n",
                    "line": 87,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "externalError",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal error message to display for the textarea.\n",
                    "description": "<p>External error message to display for the textarea.</p>\n",
                    "line": 67,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "externalIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExternal icon to display for the textarea.\n",
                    "description": "<p>External icon to display for the textarea.</p>\n",
                    "line": 72,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe id attribute of the textarea.\n",
                    "description": "<p>The id attribute of the textarea.</p>\n",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe label to display for the textarea.\n",
                    "description": "<p>The label to display for the textarea.</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color of the textarea label.\n",
                    "description": "<p>The color of the textarea label.</p>\n",
                    "line": 142,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe maximum length of the textarea.\n",
                    "description": "<p>The maximum length of the textarea.</p>\n",
                    "line": 147,
                    "type": "number | null",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "`random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1224,
                            "end": 1269,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1225,
                                "end": 1232,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;random-name-[hash-random-code]&#39;</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe name attribute of the textarea.\n\n",
                    "description": "<p>The name attribute of the textarea.</p>\n",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe placeholder text to display in the textarea.\n",
                    "description": "<p>The placeholder text to display in the textarea.</p>\n",
                    "line": 62,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to make the textarea readonly.\n",
                    "description": "<p>Flag to make the textarea readonly.</p>\n",
                    "line": 97,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to mark the textarea as required.\n",
                    "description": "<p>Flag to mark the textarea as required.</p>\n",
                    "line": 102,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "timeToChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe time interval for input timeout in ms.\n",
                    "description": "<p>The time interval for input timeout in ms.</p>\n",
                    "line": 82,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color of the tooltip.\n",
                    "description": "<p>The color of the tooltip.</p>\n",
                    "line": 122,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe icon to display in the tooltip.\n",
                    "description": "<p>The icon to display in the tooltip.</p>\n",
                    "line": 127,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe tooltip message to display.\n",
                    "description": "<p>The tooltip message to display.</p>\n",
                    "line": 112,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPlacement",
                    "defaultValue": "'right center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe placement of the tooltip.\n",
                    "description": "<p>The placement of the tooltip.</p>\n",
                    "line": 117,
                    "type": "\"center top\" | \"center bottom\" | \"left center\" | \"right center\"",
                    "decorators": []
                },
                {
                    "name": "useFormErrors",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFlag to use form errors for validation.\n",
                    "description": "<p>Flag to use form errors for validation.</p>\n",
                    "line": 107,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe initial value of the textarea.\n",
                    "description": "<p>The initial value of the textarea.</p>\n",
                    "line": 77,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "inFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the textarea gains or loses focus.\n",
                    "description": "<p>Event emitted when the textarea gains or loses focus.</p>\n",
                    "line": 162,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "keyPressDown",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when a key is pressed down in the textarea.\n",
                    "description": "<p>Event emitted when a key is pressed down in the textarea.</p>\n",
                    "line": 152,
                    "type": "EventEmitter<KeyboardEvent>"
                },
                {
                    "name": "keyPressUp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when a key is released in the textarea.\n",
                    "description": "<p>Event emitted when a key is released in the textarea.</p>\n",
                    "line": 157,
                    "type": "EventEmitter<KeyboardEvent>"
                },
                {
                    "name": "valid",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for validation status.\n",
                    "description": "<p>Event emitter for validation status.</p>\n",
                    "line": 172,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted when the textarea value changes.\n",
                    "description": "<p>Event emitted when the textarea value changes.</p>\n",
                    "line": 167,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "- The ElementRef representing the input element.",
                    "line": 215,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "<p>Represents the error state of the textarea.</p>\n",
                    "line": 195,
                    "rawdescription": "\n\nRepresents the error state of the textarea.\n"
                },
                {
                    "name": "labelTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a label template.</p>\n",
                    "line": 190,
                    "rawdescription": "\n\nReference to a label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'labelTemplate'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "leftLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a left-aligned label template.</p>\n",
                    "line": 178,
                    "rawdescription": "\n\nReference to a left-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'leftLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Reference to the native element of the textarea.</p>\n",
                    "line": 200,
                    "rawdescription": "\n\nReference to the native element of the textarea.\n"
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement> | null",
                    "optional": false,
                    "description": "<p>Reference to a right-aligned label template.</p>\n",
                    "line": 184,
                    "rawdescription": "\n\nReference to a right-aligned label template.\n",
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'rightLabel'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "timeoutInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Timeout for input changes.</p>\n",
                    "line": 205,
                    "rawdescription": "\n\nTimeout for input changes.\n"
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "- The TranslateService for internationalization (optional).",
                    "line": 216,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "validatorHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorHelper",
                    "optional": false,
                    "description": "- The ValidatorHelper service for input validation.",
                    "line": 214,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 244,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles changes to the textarea value.\n\n",
                    "description": "<p>Handles changes to the textarea value.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5576,
                                "end": 5581,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5561,
                                "end": 5566,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The new value of the textarea.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5567,
                                "end": 5575,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5568,
                                    "end": 5574,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "keyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keydown events.\n",
                    "description": "<p>Handle keydown events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6174,
                                "end": 6179,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6168,
                                "end": 6173,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keydown event.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "keyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 277,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle keyup events.\n",
                    "description": "<p>Handle keyup events.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6324,
                                "end": 6329,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "event"
                            },
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6318,
                                "end": 6323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The keyup event.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAsynchronously sets an error message.\n\n",
                    "description": "<p>Asynchronously sets an error message.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5941,
                                "end": 5944,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5926,
                                "end": 5931,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The key for the error message.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 5932,
                                "end": 5940,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 5933,
                                    "end": 5939,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAsynchronously validates the input value.\n",
                    "description": "<p>Asynchronously validates the input value.</p>\n",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "isBlur",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a textarea input component with various configuration options.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/forms/textarea%7D\">https://css.squidit.com.br/forms/textarea}</a></p>\n<div class='col-6 my-3'>\n <label class='display-block' for='textarea-text'>\n   Label\n </label>\n <div class='wrapper-input mb-3'>\n   <textarea\n     class='display-block textarea'\n     type='text'\n     name='textarea-text'\n     id='textarea-text'\n     placeholder='Placeholder'\n   ></textarea>\n </div>\n</div>\n\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-textarea [name]=&quot;&#39;description&#39;&quot; [id]=&quot;&#39;description&#39;&quot; [label]=&quot;&#39;Description&#39;&quot;[placeholder]=&quot;&#39;Enter a description...&#39;&quot; [(value)]=&quot;text&quot;&gt;&lt;/sq-textarea&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a textarea input component with various configuration options.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/forms/textarea}\n\n<div class='col-6 my-3'>\n <label class='display-block' for='textarea-text'>\n   Label\n </label>\n <div class='wrapper-input mb-3'>\n   <textarea\n     class='display-block textarea'\n     type='text'\n     name='textarea-text'\n     id='textarea-text'\n     placeholder='Placeholder'\n   ></textarea>\n </div>\n</div>\n\n```html\n<sq-textarea [name]=\"'description'\" [id]=\"'description'\" [label]=\"'Description'\"[placeholder]=\"'Enter a description...'\" [(value)]=\"text\"></sq-textarea>\n```\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, EventEmitter, Input, Optional, Output, TemplateRef } from \"@angular/core\"\nimport { ValidatorHelper } from '../../helpers/validator.helper'\nimport { TranslateService } from '@ngx-translate/core'\n\n/**\n * Represents a textarea input component with various configuration options.\n *\n * Look the link about the component in original framework and the appearance\n *\n * @see {@link https://css.squidit.com.br/forms/textarea}\n * \n * <div class='col-6 my-3'>\n *  <label class='display-block' for='textarea-text'>\n *    Label\n *  </label>\n *  <div class='wrapper-input mb-3'>\n *    <textarea\n *      class='display-block textarea'\n *      type='text'\n *      name='textarea-text'\n *      id='textarea-text'\n *      placeholder='Placeholder'\n *    ></textarea>\n *  </div>\n *</div>\n * \n * @example\n * <sq-textarea [name]=\"'description'\" [id]=\"'description'\" [label]=\"'Description'\"[placeholder]=\"'Enter a description...'\" [(value)]=\"text\"></sq-textarea>\n *\n */\n@Component({\n  selector: 'sq-textarea',\n  templateUrl: './sq-textarea.component.html',\n  styleUrls: ['./sq-textarea.component.scss']\n})\nexport class SqTextAreaComponent {\n  /**\n   * The name attribute of the textarea.\n   * \n   * @default 'random-name-[hash-random-code]'\n   */\n  @Input() name = `random-name-${(1 + Date.now() + Math.random()).toString().replace('.', '')}`\n\n  /**\n   * The id attribute of the textarea.\n   */\n  @Input() id?: string\n\n  /**\n   * The label to display for the textarea.\n   */\n  @Input() label?: string\n\n  /**\n   * Additional CSS classes for styling the textarea.\n   */\n  @Input() customClass = ''\n\n  /**\n   * The placeholder text to display in the textarea.\n   */\n  @Input() placeholder = ''\n\n  /**\n   * External error message to display for the textarea.\n   */\n  @Input() externalError = ''\n\n  /**\n   * External icon to display for the textarea.\n   */\n  @Input() externalIcon = ''\n\n  /**\n   * The initial value of the textarea.\n   */\n  @Input() value: any = ''\n\n  /**\n   * The time interval for input timeout in ms.\n   */\n  @Input() timeToChange = 0\n\n  /**\n   * Flag to show an error span.\n   */\n  @Input() errorSpan = true\n\n  /**\n   * Flag to disable the textarea.\n   */\n  @Input() disabled = false\n\n  /**\n   * Flag to make the textarea readonly.\n   */\n  @Input() readonly = false\n\n  /**\n   * Flag to mark the textarea as required.\n   */\n  @Input() required = false\n\n  /**\n   * Flag to use form errors for validation.\n   */\n  @Input() useFormErrors = true\n\n  /**\n   * The tooltip message to display.\n   */\n  @Input() tooltipMessage = ''\n\n  /**\n   * The placement of the tooltip.\n   */\n  @Input() tooltipPlacement: 'center top' | 'center bottom' | 'left center' | 'right center' = 'right center'\n\n  /**\n   * The color of the tooltip.\n   */\n  @Input() tooltipColor = 'inherit'\n\n  /**\n   * The icon to display in the tooltip.\n   */\n  @Input() tooltipIcon = ''\n\n  /**\n   * The background color of the textarea.\n   */\n  @Input() backgroundColor = ''\n\n  /**\n   * The border color of the textarea.\n   */\n  @Input() borderColor = ''\n\n  /**\n   * The color of the textarea label.\n   */\n  @Input() labelColor = ''\n\n  /**\n   * The maximum length of the textarea.\n   */\n  @Input() maxLength: number | null = null\n\n  /**\n   * Event emitted when a key is pressed down in the textarea.\n   */\n  @Output() keyPressDown: EventEmitter<KeyboardEvent> = new EventEmitter()\n\n  /**\n   * Event emitted when a key is released in the textarea.\n   */\n  @Output() keyPressUp: EventEmitter<KeyboardEvent> = new EventEmitter()\n\n  /**\n   * Event emitted when the textarea gains or loses focus.\n   */\n  @Output() inFocus: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * Event emitted when the textarea value changes.\n   */\n  @Output() valueChange: EventEmitter<any> = new EventEmitter()\n\n  /**\n   * Event emitter for validation status.\n   */\n  @Output() valid: EventEmitter<boolean> = new EventEmitter()\n\n  /**\n   * Reference to a left-aligned label template.\n   */\n  @ContentChild('leftLabel')\n  leftLabel: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to a right-aligned label template.\n   */\n  @ContentChild('rightLabel')\n  rightLabel: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Reference to a label template.\n   */\n  @ContentChild('labelTemplate')\n  labelTemplate: TemplateRef<HTMLElement> | null = null\n\n  /**\n   * Represents the error state of the textarea.\n   */\n  error: boolean | string = false\n\n  /**\n   * Reference to the native element of the textarea.\n   */\n  nativeElement: ElementRef\n\n  /**\n   * Timeout for input changes.\n   */\n  timeoutInput!: ReturnType<typeof setTimeout>\n\n  /**\n   * Constructor for the SqInputComponent class.\n   * @param validatorHelper - The ValidatorHelper service for input validation.\n   * @param element - The ElementRef representing the input element.\n   * @param translate - The TranslateService for internationalization (optional).\n   */\n  constructor(\n    public validatorHelper: ValidatorHelper,\n    public element: ElementRef,\n    @Optional() public translate: TranslateService\n  ) {\n    this.nativeElement = element.nativeElement\n  }\n\n  /**\n   * Asynchronously validates the input value.\n   */\n  async validate(isBlur = false) {\n    if (isBlur) {\n      this.inFocus.emit(false)\n    }\n    if (this.externalError) {\n      this.error = false\n    } else if (this.required && !this.value) {\n      this.valid.emit(false)\n      this.setError('forms.required')\n    } else {\n      this.valid.emit(true)\n      this.error = ''\n    }\n  }\n\n  /**\n   * Handles changes to the textarea value.\n   *\n   * @param {string} event - The new value of the textarea.\n   */\n  async change(event: any) {\n    this.inFocus.emit(true)\n    this.value = event\n    clearTimeout(this.timeoutInput)\n    this.timeoutInput = setTimeout(() => {\n      this.valueChange.emit(event)\n    }, this.timeToChange)\n    this.validate()\n  }\n\n  /**\n   * Asynchronously sets an error message.\n   *\n   * @param {string} key - The key for the error message.\n   */\n  async setError(key: string) {\n    if (this.useFormErrors && this.translate) {\n      this.error = await this.translate.instant(key)\n    }\n  }\n\n  /**\n   * Handle keydown events.\n   * @param event - The keydown event.\n   */\n  keyDown(event: KeyboardEvent) {\n    this.keyPressDown.emit(event)\n  }\n\n  /**\n   * Handle keyup events.\n   * @param event - The keyup event.\n   */\n  keyUp(event: KeyboardEvent) {\n    this.keyPressUp.emit(event)\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-all-inside-input {\n  .icon {\n    margin: 0;\n    font-size: 1rem;\n    font-weight: 700;\n    position: absolute;\n    right: 24px;\n    top: 40px;\n    &.no-label {\n      top: 75px;\n    }\n  }\n  .icon-external {\n    color: inherit !important;\n  }\n  .max-length-name {\n    font-size: inherit;\n    float: right;\n  }\n}\n",
                    "styleUrl": "./sq-textarea.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructor for the SqInputComponent class.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validatorHelper",
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 205,
                "rawdescription": "\n\nConstructor for the SqInputComponent class.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4682,
                            "end": 4697,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "validatorHelper"
                        },
                        "type": "ValidatorHelper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4676,
                            "end": 4681,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ValidatorHelper service for input validation.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 4762,
                            "end": 4769,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4756,
                            "end": 4761,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The ElementRef representing the input element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 4831,
                            "end": 4840,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4825,
                            "end": 4830,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The TranslateService for internationalization (optional).</li>\n</ul>\n"
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"wrapper-all-inside-input {{ customClass }}\">\n  <label\n    class=\"display-flex\"\n    *ngIf=\"label?.length || tooltipMessage || labelTemplate\"\n    [ngClass]=\"{\n      readonly: readonly\n    }\"\n    [for]=\"id\"\n  >\n    <div *ngIf=\"label && !labelTemplate\" [ngStyle]=\"{ 'color': labelColor }\" [innerHtml]=\"label | universalSafe\"></div>\n    <div *ngIf=\"labelTemplate\">\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n    </div>\n    <sq-tooltip\n      *ngIf=\"tooltipMessage\"\n      class=\"ml-1\"\n      [message]=\"tooltipMessage\"\n      [placement]=\"tooltipPlacement\"\n      [color]=\"tooltipColor\"\n      [icon]=\"tooltipIcon\"\n    ></sq-tooltip>\n  </label>\n  <div\n    class=\"p-0 wrapper-input wrapper-input-squid text-ellipsisarea\"\n    [ngClass]=\"{\n      error: (externalError && externalError !== '') || (error && error !== ''),\n      readonly: readonly\n    }\"\n  >\n    <span class=\"input-group-text m-0\" *ngIf=\"leftLabel\">\n      <ng-container *ngTemplateOutlet=\"leftLabel\"></ng-container>\n    </span>\n    <textarea\n      class=\"col textarea scrollbar\"\n      [ngStyle]=\"{\n        'background-color': backgroundColor,\n        'border-color': borderColor\n      }\"\n      [ngClass]=\"{\n        error: (externalError && externalError !== '') || (error && error !== ''),\n        disabled: disabled,\n        readonly: readonly,\n        'has-icon-external': externalIcon\n      }\"\n      [id]=\"id\"\n      [name]=\"name\"\n      [placeholder]=\"placeholder || ''\"\n      [required]=\"required\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n      (blur)=\"validate(true)\"\n      [maxlength]=\"maxLength\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      (keydown)=\"keyDown($event)\"\n      (keyup)=\"keyUp($event)\"\n      ngDefaultControl\n      >{{ value }}</textarea\n    >\n    <span class=\"input-group-text m-0\" *ngIf=\"rightLabel\">\n      <ng-container *ngTemplateOutlet=\"rightLabel\"></ng-container>\n    </span>\n  </div>\n  <span\n    *ngIf=\"externalIcon\"\n    class=\"icon icon-external textarea-icon\"\n    [ngClass]=\"{\n      'no-label': !label?.length\n    }\"\n    [innerHtml]=\"externalIcon || '' | universalSafe\"\n  ></span>\n  <div\n    class=\"box-validation box-invalid show\"\n    *ngIf=\"errorSpan\"\n    [ngClass]=\"{\n      'has-max-length': maxLength\n    }\"\n  >\n    <ng-container *ngIf=\"externalError || error\">\n      <i class=\"fa-solid fa-triangle-exclamation\"></i>\n    </ng-container>\n    {{ externalError ? externalError : '' }}\n    {{ error && !externalError ? error : '' }}\n    <span\n      class=\"max-length-name\"\n      [ngClass]=\"{\n        'visibility-hidden-force': disabled || readonly\n      }\"\n      *ngIf=\"maxLength\"\n    >\n      {{ maxLength - (value?.length || 0) }}\n    </span>\n  </div>\n</div>\n"
        },
        {
            "name": "SqTooltipComponent",
            "id": "component-SqTooltipComponent-8eab19de58090548dc30030f300c8e6e5ee4f5cbc8b318e4f452b51fdca76cec3f9c4400de26f8ff06763c0fb9df8378fbb89092de249baab5aa011ee246cc81",
            "file": "src/components/sq-tooltip/sq-tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sq-tooltip",
            "styleUrls": [
                "./sq-tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sq-tooltip.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe background color of the tooltip.\n",
                    "description": "<p>The background color of the tooltip.</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "fontSize",
                    "defaultValue": "'1rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe font size of the tooltip content.\n",
                    "description": "<p>The font size of the tooltip content.</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe name of the icon to display in the tooltip.\n",
                    "description": "<p>The name of the icon to display in the tooltip.</p>\n",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe message to display in the tooltip.\n",
                    "description": "<p>The message to display in the tooltip.</p>\n",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placement",
                    "defaultValue": "'center top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 812,
                            "end": 875,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 354,
                            "tagName": {
                                "pos": 813,
                                "end": 816,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "see"
                            },
                            "comment": "<p>://css.squidit.com.br/components/tooltip{@link https}</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nThe placement of the tooltip (e.g., 'center top').\nSee {@link https://css.squidit.com.br/components/tooltip}\n",
                    "description": "<p>The placement of the tooltip (e.g., &#39;center top&#39;).\nSee {@link <a href=\"https://css.squidit.com.br/components/tooltip%7D\">https://css.squidit.com.br/components/tooltip}</a></p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textAlign",
                    "defaultValue": "'text-center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe text alignment within the tooltip.\n",
                    "description": "<p>The text alignment within the tooltip.</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdditional CSS classes for styling the tooltip.\n",
                    "description": "<p>Additional CSS classes for styling the tooltip.</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "defaultValue": "'hover'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe tooltip trigger\nPossible values: 'hover' or 'click'.\n",
                    "description": "<p>The tooltip trigger\nPossible values: &#39;hover&#39; or &#39;click&#39;.</p>\n",
                    "line": 59,
                    "type": "\"hover\" | \"click\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Represents a tooltip component for displaying informative messages.</p>\n<p>Look the link about the component in original framework and the appearance</p>\n<p>See {@link <a href=\"https://css.squidit.com.br/components/tooltip%7D\">https://css.squidit.com.br/components/tooltip}</a></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;sq-tooltip placement=&#39;center top&#39; message=&#39;This is a tooltip message.&#39;&gt;&lt;/sq-tooltip&gt;</code></pre></div>",
            "rawdescription": "\n\nRepresents a tooltip component for displaying informative messages.\n\nLook the link about the component in original framework and the appearance\n\nSee {@link https://css.squidit.com.br/components/tooltip}\n\n```html\n<sq-tooltip placement='center top' message='This is a tooltip message.'></sq-tooltip>\n```\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\r\n/**\r\n * Represents a tooltip component for displaying informative messages.\r\n * \r\n * Look the link about the component in original framework and the appearance\r\n *\r\n * @see {@link https://css.squidit.com.br/components/tooltip}\r\n * \r\n * @example\r\n * <sq-tooltip placement='center top' message='This is a tooltip message.'></sq-tooltip>\r\n *\r\n */\r\n@Component({\r\n  selector: 'sq-tooltip',\r\n  templateUrl: './sq-tooltip.component.html',\r\n  styleUrls: ['./sq-tooltip.component.scss'],\r\n})\r\nexport class SqTooltipComponent {\r\n  /**\r\n   * The background color of the tooltip.\r\n   */\r\n  @Input() color = ''\r\n\r\n  /**\r\n   * The name of the icon to display in the tooltip.\r\n   */\r\n  @Input() icon = ''\r\n\r\n  /**\r\n   * The placement of the tooltip (e.g., 'center top').\r\n   * @see {@link https://css.squidit.com.br/components/tooltip}\r\n   */\r\n  @Input() placement = 'center top'\r\n\r\n  /**\r\n   * The message to display in the tooltip.\r\n   */\r\n  @Input() message = ''\r\n\r\n  /**\r\n   * Additional CSS classes for styling the tooltip.\r\n   */\r\n  @Input() tooltipClass = ''\r\n\r\n  /**\r\n   * The text alignment within the tooltip.\r\n   */\r\n  @Input() textAlign = 'text-center'\r\n\r\n  /**\r\n   * The font size of the tooltip content.\r\n   */\r\n  @Input() fontSize = '1rem'\r\n\r\n  /**\r\n   * The tooltip trigger\r\n   * Possible values: 'hover' or 'click'.\r\n   */\r\n  @Input() trigger: 'hover' | 'click' = 'hover'\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-tooltip {\r\n  display: inline-block;\r\n  cursor: help;\r\n}\r\n",
                    "styleUrl": "./sq-tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-template #tooltip>\r\n  <div class=\"{{ textAlign }} {{ tooltipClass }}\" [innerHTML]=\"message\"></div>\r\n</ng-template>\r\n<div\r\n  [class]=\"'wrapper-tooltip {{ color }}'\"\r\n  [placement]=\"placement\"\r\n  [tooltip]=\"message\"\r\n  [trigger]=\"trigger\"\r\n  [ngStyle]=\"{\r\n    color: color,\r\n    'font-size': fontSize\r\n  }\"\r\n>\r\n  <div class=\"icon\" *ngIf=\"icon\" [innerHtml]=\"icon | universalSafe\"></div>\r\n  <i\r\n    class=\"fa-solid fa-circle-question icon\"\r\n    *ngIf=\"!icon\"\r\n  ></i>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "SquidCSSModule",
            "id": "module-SquidCSSModule-289c1ec9277b969fd466801545d38f09493b3d53cca059e25c79e1d7a7336cb72f68d13538e49b5b5931c80913808a90e3206afaa525f8ec39b7ddd7915f7dc7",
            "description": "<p>Angular module that exports a collection of UI components, directives, and pipes\nfor use in Angular applications.</p>\n",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/main.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, Type } from '@angular/core'\nimport { SqButtonComponent } from './components/sq-button/sq-button.component'\nimport { CommonModule } from '@angular/common'\nimport { SqLoaderComponent } from './components/sq-loader/sq-loader.component'\nimport { SqProgressBarComponent } from './components/sq-progress-bar/sq-progress-bar.component'\nimport { SqStepsComponent } from './components/sq-steps/sq-steps.component'\nimport { SqTooltipDirective } from './directives/sq-tooltip/sq-tooltip.directive'\nimport { SqTooltipComponent } from './components/sq-tooltip/sq-tooltip.component'\nimport { UniversalSafePipe } from './pipes/universal-safe/universal-safe.pipe'\nimport { ThousandSuffixesPipe } from './pipes/thousands/thousands.pipe'\nimport { SqTabComponent } from './components/sq-tabs/sq-tab/sq-tab.component'\nimport { SqTabsComponent } from './components/sq-tabs/sq-tabs.component'\nimport { SqInfinityComponent } from './components/sq-infinity-scroll/sq-infinity-scroll.component'\nimport { SqOverlayComponent } from './components/sq-overlay/sq-overlay.component'\nimport { SqModalComponent } from './components/sq-modal/sq-modal.component'\nimport { SqCollapseComponent } from './components/sq-accordion/sq-collapse/sq-collapse.component'\nimport { SqPaginationComponent } from './components/sq-pagination/sq-pagination.component'\nimport { SqTagComponent } from './components/sq-tag/sq-tag.component'\nimport { SqAccordionComponent } from './components/sq-accordion/sq-accordion.component'\nimport { SqTextAreaComponent } from './components/sq-textarea/sq-textarea.component'\nimport { FormsModule } from '@angular/forms'\nimport { SqSelectComponent } from './components/sq-select/sq-select.component'\nimport { SqSelectorComponent } from './components/sq-selector/sq-selector.component'\nimport { SqInputComponent } from './components/sq-input/sq-input.component'\nimport { SqInputDateComponent } from './components/sq-input-date/sq-input-date.component'\nimport { SqInputRangeComponent } from './components/sq-input-range/sq-input-range.component'\nimport { SqInputFileComponent } from './components/sq-input-file/sq-input-file.component'\nimport { SqDropdownDirective } from './directives/sq-dropdown/sq-dropdown.directive'\nimport { SqSelectSearchComponent } from './components/sq-select-search/sq-select-search.component'\nimport { SqClickOutsideDirective } from './directives/sq-click-outside/sq-click-outside.directive'\nimport { SearchPipe } from './pipes/search/search.pipe'\nimport { BirthdatePipe } from './pipes/birthdate/birthdate.pipe'\nimport { SearchFromAlternativeArrayPipe } from './pipes/search-from-alternative-array/search-from-alternative-array.pipe'\nimport { SearchValidValuesPipe } from './pipes/search-valid-values/search-valid-values.pipe'\nimport { SqSelectMultiTagsComponent } from './components/sq-select-multi-tags/sq-select-multi-tags.component'\nimport { SqInputMaskComponent } from './components/sq-input-mask/sq-input-mask.component'\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask'\nimport { SqInputMoneyComponent } from './components/sq-input-money/sq-input-money.component'\nimport { SqInputNumberComponent } from './components/sq-input-number/sq-input-number.component'\nimport { TranslateInternalPipe } from './pipes/translate-internal/translate-internal.pipe'\nimport { SqCountdownComponent } from './components/sq-countdown/sq-countdown.component'\n\n/**\n * Array containing a collection of Angular components, directives, and pipes.\n * These elements can be used within the SquidCSSModule for building UI features.\n * \n * @type {(Type<any> | any)[]}\n */\nconst components: (Type<any> | any)[] = [\n  SqButtonComponent,\n  SqLoaderComponent,\n  SqProgressBarComponent,\n  SqStepsComponent,\n  SqTooltipDirective,\n  SqTooltipComponent,\n  UniversalSafePipe,\n  ThousandSuffixesPipe,\n  SqTabComponent,\n  SqTabsComponent,\n  SqInfinityComponent,\n  SqOverlayComponent,\n  SqModalComponent,\n  SqCollapseComponent,\n  SqPaginationComponent,\n  SqTagComponent,\n  SqAccordionComponent,\n  SqTextAreaComponent,\n  SqSelectComponent,\n  SqSelectorComponent,\n  SqInputComponent,\n  SqInputDateComponent,\n  SqInputRangeComponent,\n  SqInputFileComponent,\n  SqDropdownDirective,\n  SqSelectSearchComponent,\n  SqClickOutsideDirective,\n  SearchPipe,\n  BirthdatePipe,\n  SearchFromAlternativeArrayPipe,\n  SearchValidValuesPipe,\n  SqSelectMultiTagsComponent,\n  SqInputMaskComponent,\n  SqInputMoneyComponent,\n  SqInputNumberComponent,\n  TranslateInternalPipe\n]\n\n/**\n * Angular module that exports a collection of UI components, directives, and pipes\n * for use in Angular applications.\n */\n@NgModule({\n  declarations: components,\n  imports: [\n    CommonModule,\n    FormsModule,\n    SqCountdownComponent,\n    NgxMaskDirective,\n    NgxMaskPipe\n  ],\n  providers: [\n    provideNgxMask()\n  ],\n  exports: [\n    ...components,\n    SqCountdownComponent,\n    NgxMaskDirective,\n    NgxMaskPipe\n  ]\n})\nexport class SquidCSSModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BirthdatePipe"
                        },
                        {
                            "name": "SearchFromAlternativeArrayPipe"
                        },
                        {
                            "name": "SearchPipe"
                        },
                        {
                            "name": "SearchValidValuesPipe"
                        },
                        {
                            "name": "SqAccordionComponent"
                        },
                        {
                            "name": "SqButtonComponent"
                        },
                        {
                            "name": "SqClickOutsideDirective"
                        },
                        {
                            "name": "SqCollapseComponent"
                        },
                        {
                            "name": "SqDropdownDirective"
                        },
                        {
                            "name": "SqInfinityComponent"
                        },
                        {
                            "name": "SqInputComponent"
                        },
                        {
                            "name": "SqInputDateComponent"
                        },
                        {
                            "name": "SqInputFileComponent"
                        },
                        {
                            "name": "SqInputMaskComponent"
                        },
                        {
                            "name": "SqInputMoneyComponent"
                        },
                        {
                            "name": "SqInputNumberComponent"
                        },
                        {
                            "name": "SqInputRangeComponent"
                        },
                        {
                            "name": "SqLoaderComponent"
                        },
                        {
                            "name": "SqModalComponent"
                        },
                        {
                            "name": "SqOverlayComponent"
                        },
                        {
                            "name": "SqPaginationComponent"
                        },
                        {
                            "name": "SqProgressBarComponent"
                        },
                        {
                            "name": "SqSelectComponent"
                        },
                        {
                            "name": "SqSelectMultiTagsComponent"
                        },
                        {
                            "name": "SqSelectSearchComponent"
                        },
                        {
                            "name": "SqSelectorComponent"
                        },
                        {
                            "name": "SqStepsComponent"
                        },
                        {
                            "name": "SqTabComponent"
                        },
                        {
                            "name": "SqTabsComponent"
                        },
                        {
                            "name": "SqTagComponent"
                        },
                        {
                            "name": "SqTextAreaComponent"
                        },
                        {
                            "name": "SqTooltipComponent"
                        },
                        {
                            "name": "SqTooltipDirective"
                        },
                        {
                            "name": "ThousandSuffixesPipe"
                        },
                        {
                            "name": "TranslateInternalPipe"
                        },
                        {
                            "name": "UniversalSafePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SqCountdownComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BirthdatePipe"
                        },
                        {
                            "name": "SearchFromAlternativeArrayPipe"
                        },
                        {
                            "name": "SearchPipe"
                        },
                        {
                            "name": "SearchValidValuesPipe"
                        },
                        {
                            "name": "SqAccordionComponent"
                        },
                        {
                            "name": "SqButtonComponent"
                        },
                        {
                            "name": "SqClickOutsideDirective"
                        },
                        {
                            "name": "SqCollapseComponent"
                        },
                        {
                            "name": "SqCountdownComponent"
                        },
                        {
                            "name": "SqDropdownDirective"
                        },
                        {
                            "name": "SqInfinityComponent"
                        },
                        {
                            "name": "SqInputComponent"
                        },
                        {
                            "name": "SqInputDateComponent"
                        },
                        {
                            "name": "SqInputFileComponent"
                        },
                        {
                            "name": "SqInputMaskComponent"
                        },
                        {
                            "name": "SqInputMoneyComponent"
                        },
                        {
                            "name": "SqInputNumberComponent"
                        },
                        {
                            "name": "SqInputRangeComponent"
                        },
                        {
                            "name": "SqLoaderComponent"
                        },
                        {
                            "name": "SqModalComponent"
                        },
                        {
                            "name": "SqOverlayComponent"
                        },
                        {
                            "name": "SqPaginationComponent"
                        },
                        {
                            "name": "SqProgressBarComponent"
                        },
                        {
                            "name": "SqSelectComponent"
                        },
                        {
                            "name": "SqSelectMultiTagsComponent"
                        },
                        {
                            "name": "SqSelectSearchComponent"
                        },
                        {
                            "name": "SqSelectorComponent"
                        },
                        {
                            "name": "SqStepsComponent"
                        },
                        {
                            "name": "SqTabComponent"
                        },
                        {
                            "name": "SqTabsComponent"
                        },
                        {
                            "name": "SqTagComponent"
                        },
                        {
                            "name": "SqTextAreaComponent"
                        },
                        {
                            "name": "SqTooltipComponent"
                        },
                        {
                            "name": "SqTooltipDirective"
                        },
                        {
                            "name": "ThousandSuffixesPipe"
                        },
                        {
                            "name": "TranslateInternalPipe"
                        },
                        {
                            "name": "UniversalSafePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  SqButtonComponent,\n  SqLoaderComponent,\n  SqProgressBarComponent,\n  SqStepsComponent,\n  SqTooltipDirective,\n  SqTooltipComponent,\n  UniversalSafePipe,\n  ThousandSuffixesPipe,\n  SqTabComponent,\n  SqTabsComponent,\n  SqInfinityComponent,\n  SqOverlayComponent,\n  SqModalComponent,\n  SqCollapseComponent,\n  SqPaginationComponent,\n  SqTagComponent,\n  SqAccordionComponent,\n  SqTextAreaComponent,\n  SqSelectComponent,\n  SqSelectorComponent,\n  SqInputComponent,\n  SqInputDateComponent,\n  SqInputRangeComponent,\n  SqInputFileComponent,\n  SqDropdownDirective,\n  SqSelectSearchComponent,\n  SqClickOutsideDirective,\n  SearchPipe,\n  BirthdatePipe,\n  SearchFromAlternativeArrayPipe,\n  SearchValidValuesPipe,\n  SqSelectMultiTagsComponent,\n  SqInputMaskComponent,\n  SqInputMoneyComponent,\n  SqInputNumberComponent,\n  TranslateInternalPipe\n]",
                "rawdescription": "Array containing a collection of Angular components, directives, and pipes.\nThese elements can be used within the SquidCSSModule for building UI features.",
                "description": "<p>Array containing a collection of Angular components, directives, and pipes.\nThese elements can be used within the SquidCSSModule for building UI features.</p>\n"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n  args: { onClick: fn() },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Toast",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/helpers/toast.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Toast",
                "rawdescription": "Global declare to get from window",
                "description": "<p>Global declare to get from window</p>\n"
            }
        ],
        "functions": [
            {
                "name": "checkField",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Checks or unchecks a checkbox or radio button.\nTriggers appropriate events so Angular takes notice of the change.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "checked",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4764,
                            "end": 4771,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4758,
                            "end": 4763,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4800,
                            "end": 4806,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "testId"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4794,
                            "end": 4799,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                    },
                    {
                        "name": {
                            "pos": 4846,
                            "end": 4853,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "checked"
                        },
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4840,
                            "end": 4845,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Whether the checkbox or radio should be checked</p>\n"
                    }
                ]
            },
            {
                "name": "click",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Emulates a left click on the element with the given <code>data-testid</code> attribute.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 5913,
                            "end": 5920,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5907,
                            "end": 5912,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5949,
                            "end": 5955,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "testId"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5943,
                            "end": 5948,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                    }
                ]
            },
            {
                "name": "dispatchFakeEvent",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Dispatches a fake event (synthetic event) at the given element.</p>\n",
                "args": [
                    {
                        "name": "element",
                        "type": "EventTarget",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "bubbles",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false"
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 3147,
                            "end": 3154,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "type": "EventTarget",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3141,
                            "end": 3146,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Element that is the target of the event</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3205,
                            "end": 3209,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "type"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3199,
                            "end": 3204,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Event name, e.g. <code>input</code></p>\n"
                    },
                    {
                        "name": {
                            "pos": 3245,
                            "end": 3252,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "bubbles"
                        },
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false",
                        "tagName": {
                            "pos": 3239,
                            "end": 3244,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Whether the event bubbles up in the DOM tree</p>\n"
                    }
                ]
            },
            {
                "name": "expectContainedText",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Expects that the element with the given <code>data-testid</code> attribute\nhas the given text content.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2489,
                            "end": 2496,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2483,
                            "end": 2488,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2525,
                            "end": 2529,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "text"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2519,
                            "end": 2524,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Expected text</p>\n"
                    }
                ]
            },
            {
                "name": "expectContent",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Expects that a component has the given text content.\nBoth the component text content and the expected text are trimmed for reliability.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2861,
                            "end": 2868,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2855,
                            "end": 2860,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2897,
                            "end": 2901,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "text"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2891,
                            "end": 2896,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Expected text</p>\n"
                    }
                ]
            },
            {
                "name": "expectText",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Expects that the element with the given <code>data-testid</code> attribute\nhas the given text content.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2113,
                            "end": 2120,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2107,
                            "end": 2112,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2149,
                            "end": 2155,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "testId"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2143,
                            "end": 2148,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                    },
                    {
                        "name": {
                            "pos": 2195,
                            "end": 2199,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "text"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2189,
                            "end": 2194,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Expected text</p>\n"
                    }
                ]
            },
            {
                "name": "findComponent",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Finds a nested Component by its selector, e.g. <code>app-example</code>.\nThrows an error if no element was found.\nUse this only for shallow component testing.\nWhen finding other elements, use <code>findEl</code> / <code>findEls</code> and <code>data-testid</code> attributes.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "selector",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "DebugElement",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 6474,
                            "end": 6481,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 6468,
                            "end": 6473,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Fixture of the parent Component</p>\n"
                    },
                    {
                        "name": {
                            "pos": 6524,
                            "end": 6532,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "selector"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 6518,
                            "end": 6523,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Element selector, e.g. <code>app-example</code></p>\n"
                    }
                ]
            },
            {
                "name": "findComponents",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Finds all nested Components by its selector, e.g. <code>app-example</code>.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "selector",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "DebugElement[]",
                "jsdoctags": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "selector",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "findEl",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Finds an element inside the Component by the given <code>data-testid</code> attribute.\nThrows an error if no element was found.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "DebugElement",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1135,
                            "end": 1142,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1129,
                            "end": 1134,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1171,
                            "end": 1177,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "testId"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1165,
                            "end": 1170,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                    }
                ]
            },
            {
                "name": "findEls",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Finds all elements with the given <code>data-testid</code> attribute.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "DebugElement[]",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1440,
                            "end": 1447,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1434,
                            "end": 1439,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1476,
                            "end": 1482,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "testId"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1470,
                            "end": 1475,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                    }
                ]
            },
            {
                "name": "formatTime",
                "file": "src/helpers/formatTime.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Format time in seconds to a readable format.</p>\n",
                "args": [
                    {
                        "name": "totalSeconds",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 71,
                            "end": 83,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "totalSeconds"
                        },
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 56,
                            "end": 61,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Time in seconds</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 62,
                            "end": 70,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 63,
                                "end": 69,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 150
                            }
                        }
                    },
                    {
                        "tagName": {
                            "pos": 106,
                            "end": 113,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": "<p>A string that contains the formatted time</p>\n",
                        "returnType": "string"
                    },
                    {
                        "tagName": {
                            "pos": 172,
                            "end": 179,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "example"
                        },
                        "comment": "<p>// returns &#39;1d 01h 01m 01s&#39;\nformatTime(90061)</p>\n"
                    }
                ]
            },
            {
                "name": "getText",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Gets the text content of an element with the given <code>data-testid</code> attribute.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1777,
                            "end": 1784,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1771,
                            "end": 1776,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1813,
                            "end": 1819,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "testId"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1807,
                            "end": 1812,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                    }
                ]
            },
            {
                "name": "makeClickEvent",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Makes a fake click event that provides the most important properties.\nSets the button to left.\nThe event can be passed to DebugElement#triggerEventHandler.</p>\n",
                "args": [
                    {
                        "name": "target",
                        "type": "EventTarget",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Partial<MouseEvent>",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 5421,
                            "end": 5427,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "target"
                        },
                        "type": "EventTarget",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5415,
                            "end": 5420,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Element that is the target of the click event</p>\n"
                    }
                ]
            },
            {
                "name": "queryByCss",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Finds a single element inside the Component by the given CSS selector.\nThrows an error if no element was found.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "selector",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "DebugElement",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 578,
                            "end": 585,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 572,
                            "end": 577,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 614,
                            "end": 622,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "selector"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 608,
                            "end": 613,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>CSS selector</p>\n"
                    }
                ]
            },
            {
                "name": "setFieldElementValue",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Enters text into a form field (<code>input</code>, <code>textarea</code> or <code>select</code> element).\nTriggers appropriate events so Angular takes notice of the change.\nIf you listen for the <code>change</code> event on <code>input</code> or <code>textarea</code>,\nyou need to trigger it separately.</p>\n",
                "args": [
                    {
                        "name": "element",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 3793,
                            "end": 3800,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "element"
                        },
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3787,
                            "end": 3792,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Form field</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3822,
                            "end": 3827,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "value"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3816,
                            "end": 3821,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Form field value</p>\n"
                    }
                ]
            },
            {
                "name": "setFieldValue",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Sets the value of a form field with the given <code>data-testid</code> attribute.</p>\n",
                "args": [
                    {
                        "name": "fixture",
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4335,
                            "end": 4342,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fixture"
                        },
                        "type": "ComponentFixture",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4329,
                            "end": 4334,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Component fixture</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4371,
                            "end": 4377,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "testId"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4365,
                            "end": 4370,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                    },
                    {
                        "name": {
                            "pos": 4417,
                            "end": 4422,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "value"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4411,
                            "end": 4416,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Form field value</p>\n"
                    }
                ]
            },
            {
                "name": "sleep",
                "file": "src/helpers/sleep.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Sleeps for a specified number of milliseconds.</p>\n",
                "args": [
                    {
                        "name": "ms",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "300"
                    }
                ],
                "returnType": "Promise<void>",
                "jsdoctags": [
                    {
                        "name": "ms",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "300",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "tagName": {
                            "pos": 61,
                            "end": 68,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": "<p>A Promise that resolves after the specified delay.</p>\n",
                        "returnType": ""
                    },
                    {
                        "tagName": {
                            "pos": 144,
                            "end": 151,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "example"
                        },
                        "comment": "<p>// Sleep for 1000 milliseconds (1 second)\nawait sleep(1000);</p>\n"
                    }
                ]
            },
            {
                "name": "testIdSelector",
                "file": "src/helpers/testing-spec.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Spec helpers for working with the DOM</p>\n",
                "args": [
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "testId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useMemo",
                "file": "src/helpers/memo.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Memoizes a function by caching its result based on the input arguments.</p>\n<p>This utility function takes a function <code>fnToMemoize</code> and returns a memoized version of it.\nThe memoized function will cache its result based on the input arguments. If the same set of\narguments is passed again, the cached result will be returned without re-executing the function.</p>\n",
                "args": [
                    {
                        "name": "fnToMemoize",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "T",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 434,
                            "end": 445,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "fnToMemoize"
                        },
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 417,
                            "end": 422,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The function to memoize.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 423,
                            "end": 433,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 424,
                                "end": 432,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 424,
                                    "end": 432,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "Function"
                                }
                            }
                        }
                    },
                    {
                        "tagName": {
                            "pos": 477,
                            "end": 484,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": "<ul>\n<li>A memoized version of the input function.</li>\n</ul>\n",
                        "returnType": ""
                    },
                    {
                        "tagName": {
                            "pos": 547,
                            "end": 554,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "example"
                        },
                        "comment": "<p>// Define a function to memoize\nfunction expensiveOperation(a, b) {\n  console.log(&#39;Performing expensive operation...&#39;);\n  return a + b;\n}</p>\n<p>// Create a memoized version of the function\nconst memoizedOperation = useMemo(expensiveOperation);</p>\n<p>// Call the memoized function\nconst result1 = memoizedOperation(2, 3); // Expensive operation is performed.\nconst result2 = memoizedOperation(2, 3); // Cached result is returned without re-computation.</p>\n"
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "src/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "src/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/main.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  SqButtonComponent,\n  SqLoaderComponent,\n  SqProgressBarComponent,\n  SqStepsComponent,\n  SqTooltipDirective,\n  SqTooltipComponent,\n  UniversalSafePipe,\n  ThousandSuffixesPipe,\n  SqTabComponent,\n  SqTabsComponent,\n  SqInfinityComponent,\n  SqOverlayComponent,\n  SqModalComponent,\n  SqCollapseComponent,\n  SqPaginationComponent,\n  SqTagComponent,\n  SqAccordionComponent,\n  SqTextAreaComponent,\n  SqSelectComponent,\n  SqSelectorComponent,\n  SqInputComponent,\n  SqInputDateComponent,\n  SqInputRangeComponent,\n  SqInputFileComponent,\n  SqDropdownDirective,\n  SqSelectSearchComponent,\n  SqClickOutsideDirective,\n  SearchPipe,\n  BirthdatePipe,\n  SearchFromAlternativeArrayPipe,\n  SearchValidValuesPipe,\n  SqSelectMultiTagsComponent,\n  SqInputMaskComponent,\n  SqInputMoneyComponent,\n  SqInputNumberComponent,\n  TranslateInternalPipe\n]",
                    "rawdescription": "Array containing a collection of Angular components, directives, and pipes.\nThese elements can be used within the SquidCSSModule for building UI features.",
                    "description": "<p>Array containing a collection of Angular components, directives, and pipes.\nThese elements can be used within the SquidCSSModule for building UI features.</p>\n"
                }
            ],
            "src/src/stories/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n  args: { onClick: fn() },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "src/src/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}"
                }
            ],
            "src/src/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/helpers/toast.helper.ts": [
                {
                    "name": "Toast",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/helpers/toast.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Toast",
                    "rawdescription": "Global declare to get from window",
                    "description": "<p>Global declare to get from window</p>\n"
                }
            ]
        },
        "groupedFunctions": {
            "src/helpers/testing-spec.helper.ts": [
                {
                    "name": "checkField",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Checks or unchecks a checkbox or radio button.\nTriggers appropriate events so Angular takes notice of the change.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4764,
                                "end": 4771,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4758,
                                "end": 4763,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 4800,
                                "end": 4806,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "testId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4794,
                                "end": 4799,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                        },
                        {
                            "name": {
                                "pos": 4846,
                                "end": 4853,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "checked"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4840,
                                "end": 4845,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Whether the checkbox or radio should be checked</p>\n"
                        }
                    ]
                },
                {
                    "name": "click",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Emulates a left click on the element with the given <code>data-testid</code> attribute.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5913,
                                "end": 5920,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5907,
                                "end": 5912,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 5949,
                                "end": 5955,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "testId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5943,
                                "end": 5948,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                        }
                    ]
                },
                {
                    "name": "dispatchFakeEvent",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Dispatches a fake event (synthetic event) at the given element.</p>\n",
                    "args": [
                        {
                            "name": "element",
                            "type": "EventTarget",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "bubbles",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3147,
                                "end": 3154,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "element"
                            },
                            "type": "EventTarget",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3141,
                                "end": 3146,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Element that is the target of the event</p>\n"
                        },
                        {
                            "name": {
                                "pos": 3205,
                                "end": 3209,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3199,
                                "end": 3204,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Event name, e.g. <code>input</code></p>\n"
                        },
                        {
                            "name": {
                                "pos": 3245,
                                "end": 3252,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "bubbles"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 3239,
                                "end": 3244,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Whether the event bubbles up in the DOM tree</p>\n"
                        }
                    ]
                },
                {
                    "name": "expectContainedText",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Expects that the element with the given <code>data-testid</code> attribute\nhas the given text content.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2489,
                                "end": 2496,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2483,
                                "end": 2488,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2525,
                                "end": 2529,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "text"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2519,
                                "end": 2524,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Expected text</p>\n"
                        }
                    ]
                },
                {
                    "name": "expectContent",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Expects that a component has the given text content.\nBoth the component text content and the expected text are trimmed for reliability.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2861,
                                "end": 2868,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2855,
                                "end": 2860,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2897,
                                "end": 2901,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "text"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2891,
                                "end": 2896,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Expected text</p>\n"
                        }
                    ]
                },
                {
                    "name": "expectText",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Expects that the element with the given <code>data-testid</code> attribute\nhas the given text content.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2113,
                                "end": 2120,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2107,
                                "end": 2112,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2149,
                                "end": 2155,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "testId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2143,
                                "end": 2148,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                        },
                        {
                            "name": {
                                "pos": 2195,
                                "end": 2199,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "text"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2189,
                                "end": 2194,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Expected text</p>\n"
                        }
                    ]
                },
                {
                    "name": "findComponent",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Finds a nested Component by its selector, e.g. <code>app-example</code>.\nThrows an error if no element was found.\nUse this only for shallow component testing.\nWhen finding other elements, use <code>findEl</code> / <code>findEls</code> and <code>data-testid</code> attributes.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "DebugElement",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6474,
                                "end": 6481,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6468,
                                "end": 6473,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Fixture of the parent Component</p>\n"
                        },
                        {
                            "name": {
                                "pos": 6524,
                                "end": 6532,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6518,
                                "end": 6523,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Element selector, e.g. <code>app-example</code></p>\n"
                        }
                    ]
                },
                {
                    "name": "findComponents",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Finds all nested Components by its selector, e.g. <code>app-example</code>.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "DebugElement[]",
                    "jsdoctags": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findEl",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Finds an element inside the Component by the given <code>data-testid</code> attribute.\nThrows an error if no element was found.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "DebugElement",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1135,
                                "end": 1142,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1129,
                                "end": 1134,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1171,
                                "end": 1177,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "testId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1165,
                                "end": 1170,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                        }
                    ]
                },
                {
                    "name": "findEls",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Finds all elements with the given <code>data-testid</code> attribute.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "DebugElement[]",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1440,
                                "end": 1447,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1434,
                                "end": 1439,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1476,
                                "end": 1482,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "testId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1470,
                                "end": 1475,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                        }
                    ]
                },
                {
                    "name": "getText",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Gets the text content of an element with the given <code>data-testid</code> attribute.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1777,
                                "end": 1784,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1771,
                                "end": 1776,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1813,
                                "end": 1819,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "testId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1807,
                                "end": 1812,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                        }
                    ]
                },
                {
                    "name": "makeClickEvent",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Makes a fake click event that provides the most important properties.\nSets the button to left.\nThe event can be passed to DebugElement#triggerEventHandler.</p>\n",
                    "args": [
                        {
                            "name": "target",
                            "type": "EventTarget",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Partial<MouseEvent>",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5421,
                                "end": 5427,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "target"
                            },
                            "type": "EventTarget",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5415,
                                "end": 5420,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Element that is the target of the click event</p>\n"
                        }
                    ]
                },
                {
                    "name": "queryByCss",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Finds a single element inside the Component by the given CSS selector.\nThrows an error if no element was found.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "DebugElement",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 578,
                                "end": 585,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 572,
                                "end": 577,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 614,
                                "end": 622,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 608,
                                "end": 613,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>CSS selector</p>\n"
                        }
                    ]
                },
                {
                    "name": "setFieldElementValue",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Enters text into a form field (<code>input</code>, <code>textarea</code> or <code>select</code> element).\nTriggers appropriate events so Angular takes notice of the change.\nIf you listen for the <code>change</code> event on <code>input</code> or <code>textarea</code>,\nyou need to trigger it separately.</p>\n",
                    "args": [
                        {
                            "name": "element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3793,
                                "end": 3800,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "element"
                            },
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3787,
                                "end": 3792,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Form field</p>\n"
                        },
                        {
                            "name": {
                                "pos": 3822,
                                "end": 3827,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3816,
                                "end": 3821,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Form field value</p>\n"
                        }
                    ]
                },
                {
                    "name": "setFieldValue",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Sets the value of a form field with the given <code>data-testid</code> attribute.</p>\n",
                    "args": [
                        {
                            "name": "fixture",
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4335,
                                "end": 4342,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fixture"
                            },
                            "type": "ComponentFixture",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4329,
                                "end": 4334,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Component fixture</p>\n"
                        },
                        {
                            "name": {
                                "pos": 4371,
                                "end": 4377,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "testId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4365,
                                "end": 4370,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Test id set by <code>data-testid</code></p>\n"
                        },
                        {
                            "name": {
                                "pos": 4417,
                                "end": 4422,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "value"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4411,
                                "end": 4416,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Form field value</p>\n"
                        }
                    ]
                },
                {
                    "name": "testIdSelector",
                    "file": "src/helpers/testing-spec.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Spec helpers for working with the DOM</p>\n",
                    "args": [
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "testId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/helpers/formatTime.helper.ts": [
                {
                    "name": "formatTime",
                    "file": "src/helpers/formatTime.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Format time in seconds to a readable format.</p>\n",
                    "args": [
                        {
                            "name": "totalSeconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 71,
                                "end": 83,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "totalSeconds"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 56,
                                "end": 61,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Time in seconds</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 62,
                                "end": 70,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 63,
                                    "end": 69,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 106,
                                "end": 113,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A string that contains the formatted time</p>\n",
                            "returnType": "string"
                        },
                        {
                            "tagName": {
                                "pos": 172,
                                "end": 179,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "example"
                            },
                            "comment": "<p>// returns &#39;1d 01h 01m 01s&#39;\nformatTime(90061)</p>\n"
                        }
                    ]
                }
            ],
            "src/helpers/sleep.helper.ts": [
                {
                    "name": "sleep",
                    "file": "src/helpers/sleep.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Sleeps for a specified number of milliseconds.</p>\n",
                    "args": [
                        {
                            "name": "ms",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "300"
                        }
                    ],
                    "returnType": "Promise<void>",
                    "jsdoctags": [
                        {
                            "name": "ms",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "300",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 61,
                                "end": 68,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A Promise that resolves after the specified delay.</p>\n",
                            "returnType": ""
                        },
                        {
                            "tagName": {
                                "pos": 144,
                                "end": 151,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "example"
                            },
                            "comment": "<p>// Sleep for 1000 milliseconds (1 second)\nawait sleep(1000);</p>\n"
                        }
                    ]
                }
            ],
            "src/helpers/memo.helper.ts": [
                {
                    "name": "useMemo",
                    "file": "src/helpers/memo.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Memoizes a function by caching its result based on the input arguments.</p>\n<p>This utility function takes a function <code>fnToMemoize</code> and returns a memoized version of it.\nThe memoized function will cache its result based on the input arguments. If the same set of\narguments is passed again, the cached result will be returned without re-executing the function.</p>\n",
                    "args": [
                        {
                            "name": "fnToMemoize",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "T",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 434,
                                "end": 445,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "fnToMemoize"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 417,
                                "end": 422,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The function to memoize.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 423,
                                "end": 433,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 424,
                                    "end": 432,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 424,
                                        "end": 432,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "Function"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 477,
                                "end": 484,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>A memoized version of the input function.</li>\n</ul>\n",
                            "returnType": ""
                        },
                        {
                            "tagName": {
                                "pos": 547,
                                "end": 554,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "example"
                            },
                            "comment": "<p>// Define a function to memoize\nfunction expensiveOperation(a, b) {\n  console.log(&#39;Performing expensive operation...&#39;);\n  return a + b;\n}</p>\n<p>// Create a memoized version of the function\nconst memoizedOperation = useMemo(expensiveOperation);</p>\n<p>// Call the memoized function\nconst result1 = memoizedOperation(2, 3); // Expensive operation is performed.\nconst result2 = memoizedOperation(2, 3); // Cached result is returned without re-computation.</p>\n"
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/src/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "src/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/src/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "src/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 83,
        "status": "very-good",
        "files": [
            {
                "filePath": "src/components/sq-accordion/sq-accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqAccordionComponent",
                "coveragePercent": 100,
                "coverageCount": "7/7",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-accordion/sq-collapse/sq-collapse.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqCollapseComponent",
                "coveragePercent": 100,
                "coverageCount": "25/25",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-button/sq-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqButtonComponent",
                "coveragePercent": 100,
                "coverageCount": "37/37",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-countdown/sq-countdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqCountdownComponent",
                "coveragePercent": 100,
                "coverageCount": "8/8",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-countdown/sq-countdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ReturnEvent",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-infinity-scroll/sq-infinity-scroll.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqInfinityComponent",
                "coveragePercent": 100,
                "coverageCount": "18/18",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-input-date/sq-input-date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqInputDateComponent",
                "coveragePercent": 100,
                "coverageCount": "50/50",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-input-file/sq-input-file.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqInputFileComponent",
                "coveragePercent": 100,
                "coverageCount": "56/56",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-input-mask/sq-input-mask.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqInputMaskComponent",
                "coveragePercent": 100,
                "coverageCount": "57/57",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-input-money/sq-input-money.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqInputMoneyComponent",
                "coveragePercent": 100,
                "coverageCount": "57/57",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-input-number/sq-input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqInputNumberComponent",
                "coveragePercent": 100,
                "coverageCount": "57/57",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-input-range/sq-input-range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqInputRangeComponent",
                "coveragePercent": 100,
                "coverageCount": "33/33",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-input/sq-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqInputComponent",
                "coveragePercent": 100,
                "coverageCount": "46/46",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-loader/sq-loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqLoaderComponent",
                "coveragePercent": 100,
                "coverageCount": "6/6",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-modal/sq-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqModalComponent",
                "coveragePercent": 100,
                "coverageCount": "37/37",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-overlay/sq-overlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqOverlayComponent",
                "coveragePercent": 100,
                "coverageCount": "41/41",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-pagination/sq-pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqPaginationComponent",
                "coveragePercent": 100,
                "coverageCount": "23/23",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-progress-bar/sq-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqProgressBarComponent",
                "coveragePercent": 100,
                "coverageCount": "8/8",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-select-multi-tags/sq-select-multi-tags.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqSelectMultiTagsComponent",
                "coveragePercent": 100,
                "coverageCount": "66/66",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-select-search/sq-select-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqSelectSearchComponent",
                "coveragePercent": 100,
                "coverageCount": "52/52",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-select/sq-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqSelectComponent",
                "coveragePercent": 100,
                "coverageCount": "37/37",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-selector/sq-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqSelectorComponent",
                "coveragePercent": 100,
                "coverageCount": "34/34",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-steps/sq-steps.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqStepsComponent",
                "coveragePercent": 100,
                "coverageCount": "7/7",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-tabs/sq-tab/sq-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqTabComponent",
                "coveragePercent": 100,
                "coverageCount": "11/11",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-tabs/sq-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqTabsComponent",
                "coveragePercent": 100,
                "coverageCount": "17/17",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-tag/sq-tag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqTagComponent",
                "coveragePercent": 100,
                "coverageCount": "15/15",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-textarea/sq-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqTextAreaComponent",
                "coveragePercent": 100,
                "coverageCount": "43/43",
                "status": "very-good"
            },
            {
                "filePath": "src/components/sq-tooltip/sq-tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SqTooltipComponent",
                "coveragePercent": 100,
                "coverageCount": "9/9",
                "status": "very-good"
            },
            {
                "filePath": "src/directives/sq-click-outside/sq-click-outside.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SqClickOutsideDirective",
                "coveragePercent": 100,
                "coverageCount": "8/8",
                "status": "very-good"
            },
            {
                "filePath": "src/directives/sq-dropdown/sq-dropdown.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SqDropdownDirective",
                "coveragePercent": 100,
                "coverageCount": "21/21",
                "status": "very-good"
            },
            {
                "filePath": "src/directives/sq-tooltip/sq-tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SqTooltipDirective",
                "coveragePercent": 100,
                "coverageCount": "26/26",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/colors.helper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ColorsHelper",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/date.helper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DateHelper",
                "coveragePercent": 100,
                "coverageCount": "18/18",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/formatTime.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "formatTime",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/memo.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useMemo",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/sleep.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "sleep",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "checkField",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "click",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "dispatchFakeEvent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "expectContainedText",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "expectContent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "expectText",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "findComponent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "findComponents",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "findEl",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "findEls",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getText",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "makeClickEvent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "queryByCss",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "setFieldElementValue",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "setFieldValue",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/testing-spec.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "testIdSelector",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/toast.helper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ToastHelper",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/toast.helper.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toast",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/validator.helper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ValidatorHelper",
                "coveragePercent": 100,
                "coverageCount": "9/9",
                "status": "very-good"
            },
            {
                "filePath": "src/helpers/window.helper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetWindow",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "src/interfaces/option.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Option",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "src/interfaces/option.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OptionMulti",
                "coveragePercent": 100,
                "coverageCount": "7/7",
                "status": "very-good"
            },
            {
                "filePath": "src/interfaces/step.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Step",
                "coveragePercent": 100,
                "coverageCount": "3/3",
                "status": "very-good"
            },
            {
                "filePath": "src/interfaces/toast.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Toast",
                "coveragePercent": 100,
                "coverageCount": "11/11",
                "status": "very-good"
            },
            {
                "filePath": "src/interfaces/toast.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToastConfig",
                "coveragePercent": 100,
                "coverageCount": "11/11",
                "status": "very-good"
            },
            {
                "filePath": "src/interfaces/toast.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToastResponse",
                "coveragePercent": 100,
                "coverageCount": "3/3",
                "status": "very-good"
            },
            {
                "filePath": "src/main.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/pipes/birthdate/birthdate.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "BirthdatePipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/pipes/search-from-alternative-array/search-from-alternative-array.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SearchFromAlternativeArrayPipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/pipes/search-valid-values/search-valid-values.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SearchValidValuesPipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/pipes/search/search.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SearchPipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/pipes/thousands/thousands.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ThousandSuffixesPipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/pipes/translate-internal/translate-internal.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "TranslateInternalPipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/pipes/universal-safe/universal-safe.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UniversalSafePipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}